diff '--context=1' --strip-trailing-cr -r app/src/main/AndroidManifest.xml new/src/main/AndroidManifest.xml
*** app/src/main/AndroidManifest.xml	Wed May  1 12:59:52 2024
--- new/src/main/AndroidManifest.xml	Wed May  1 21:09:16 2024
***************
*** 1,11 ****
! <?xml version="1.0" encoding="utf-8" standalone="no"?><manifest xmlns:android="http://schemas.android.com/apk/res/android" android:compileSdkVersion="29" android:compileSdkVersionCodename="10" package="com.ustwo.lwp" platformBuildVersionCode="29" platformBuildVersionName="10">
      <uses-feature android:name="android.software.live_wallpaper" android:required="true"/>
      <uses-feature android:glEsVersion="0x00020000" android:required="true"/>
      <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>
      <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
      <uses-permission android:name="android.permission.INTERNET"/>
!     <application android:allowBackup="false" android:appComponentFactory="androidx.core.app.CoreComponentFactory" android:extractNativeLibs="false" android:icon="@mipmap/ic_launcher" android:label="@string/app_label" android:name="com.ustwo.lwp.App" android:theme="@style/AppTheme" android:usesNonSdkApi="true">
!         <meta-data android:name="com.google.android.awareness.API_KEY" android:value="AIzaSyASwdIvq5yC2DQO4FvIS25BzTcICWNLRXM"/>
!         <activity android:directBootAware="true" android:label="@string/permissions_activity_label" android:name="com.ustwo.lwp.wallpapers.PermissionsActivity" android:theme="@style/Theme.AppCompat.Translucent"/>
!         <receiver android:name="com.ustwo.lwp.TimezoneChangedReceiver">
              <intent-filter>
--- 1,28 ----
! <?xml version="1.0" encoding="utf-8" standalone="no"?>
! <manifest xmlns:android="http://schemas.android.com/apk/res/android">
! 
      <uses-feature android:name="android.software.live_wallpaper" android:required="true"/>
      <uses-feature android:glEsVersion="0x00020000" android:required="true"/>
+     <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION"/>
      <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION"/>
+     <uses-permission android:name="android.permission.ACCESS_BACKGROUND_LOCATION"/>
      <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
      <uses-permission android:name="android.permission.INTERNET"/>
!     <application
!                  android:icon="@mipmap/ic_launcher"
!                  android:label="@string/app_label"
!                  android:name="com.ustwo.lwp.App"
!                  android:theme="@style/AppTheme">
!         <activity
!                 android:name=".preferences.PreferencesActivity"
!                 android:directBootAware="true"
!                 android:exported="true"
!                 android:theme="@style/AppTheme">
!             <intent-filter>
!                 <action android:name="android.intent.action.APPLICATION_PREFERENCES"/>
!                 <category android:name="android.intent.category.DEFAULT"/>
!             </intent-filter>
!         </activity>
!         <receiver android:name="com.ustwo.lwp.TimezoneChangedReceiver"
!                   android:exported="true">
              <intent-filter>
***************
*** 14,16 ****
          </receiver>
!         <service android:directBootAware="true" android:enabled="true" android:label="@string/timelapse_label" android:name="com.ustwo.lwp.wallpapers.timelapse.TimelapseWallpaperService" android:permission="android.permission.BIND_WALLPAPER">
              <intent-filter>
--- 31,33 ----
          </receiver>
!         <service android:directBootAware="true" android:enabled="true" android:label="@string/timelapse_label" android:name="com.ustwo.lwp.wallpapers.timelapse.TimelapseWallpaperService" android:permission="android.permission.BIND_WALLPAPER" android:exported="true">
              <intent-filter>
***************
*** 20,22 ****
          </service>
!         <service android:directBootAware="true" android:enabled="true" android:label="@string/shadow_label_1" android:name="com.ustwo.lwp.wallpapers.shadow.ShadowWallpaperService1" android:permission="android.permission.BIND_WALLPAPER">
              <intent-filter>
--- 37,39 ----
          </service>
!         <service android:directBootAware="true" android:enabled="true"  android:label="@string/shadow_label_1" android:name="com.ustwo.lwp.wallpapers.shadow.ShadowWallpaperService1" android:permission="android.permission.BIND_WALLPAPER" android:exported="true">
              <intent-filter>
***************
*** 26,28 ****
          </service>
!         <service android:directBootAware="true" android:enabled="true" android:label="@string/shadow_label_2" android:name="com.ustwo.lwp.wallpapers.shadow.ShadowWallpaperService2" android:permission="android.permission.BIND_WALLPAPER">
              <intent-filter>
--- 43,45 ----
          </service>
!         <service android:directBootAware="true" android:enabled="true" android:label="@string/shadow_label_2" android:name="com.ustwo.lwp.wallpapers.shadow.ShadowWallpaperService2"  android:permission="android.permission.BIND_WALLPAPER" android:exported="true">
              <intent-filter>
***************
*** 32,34 ****
          </service>
!         <service android:directBootAware="true" android:enabled="true" android:label="@string/shadow_label_3" android:name="com.ustwo.lwp.wallpapers.shadow.ShadowWallpaperService3" android:permission="android.permission.BIND_WALLPAPER">
              <intent-filter>
--- 49,51 ----
          </service>
!         <service android:directBootAware="true" android:enabled="true" android:label="@string/shadow_label_3" android:name="com.ustwo.lwp.wallpapers.shadow.ShadowWallpaperService3" android:permission="android.permission.BIND_WALLPAPER" android:exported="true">
              <intent-filter>
***************
*** 38,40 ****
          </service>
!         <service android:directBootAware="true" android:enabled="true" android:label="@string/shadow_label_4" android:name="com.ustwo.lwp.wallpapers.shadow.ShadowWallpaperService4" android:permission="android.permission.BIND_WALLPAPER">
              <intent-filter>
--- 55,57 ----
          </service>
!         <service android:directBootAware="true" android:enabled="true" android:label="@string/shadow_label_4" android:name="com.ustwo.lwp.wallpapers.shadow.ShadowWallpaperService4" android:permission="android.permission.BIND_WALLPAPER" android:exported="true">
              <intent-filter>
***************
*** 44,46 ****
          </service>
!         <service android:directBootAware="true" android:enabled="true" android:label="@string/shadow_label_5" android:name="com.ustwo.lwp.wallpapers.shadow.ShadowWallpaperService5" android:permission="android.permission.BIND_WALLPAPER">
              <intent-filter>
--- 61,63 ----
          </service>
!         <service android:directBootAware="true" android:enabled="true" android:label="@string/shadow_label_5" android:name="com.ustwo.lwp.wallpapers.shadow.ShadowWallpaperService5" android:permission="android.permission.BIND_WALLPAPER" android:exported="true">
              <intent-filter>
***************
*** 50,52 ****
          </service>
!         <service android:directBootAware="true" android:enabled="true" android:label="@string/shadow_label_6" android:name="com.ustwo.lwp.wallpapers.shadow.ShadowWallpaperService6" android:permission="android.permission.BIND_WALLPAPER">
              <intent-filter>
--- 67,69 ----
          </service>
!         <service android:directBootAware="true" android:enabled="true" android:label="@string/shadow_label_6" android:name="com.ustwo.lwp.wallpapers.shadow.ShadowWallpaperService6" android:permission="android.permission.BIND_WALLPAPER" android:exported="true">
              <intent-filter>
***************
*** 56,58 ****
          </service>
!         <service android:directBootAware="true" android:enabled="true" android:label="@string/orbit_label_2" android:name="com.ustwo.lwp.wallpapers.orbit.OrbitWallpaperService2" android:permission="android.permission.BIND_WALLPAPER">
              <intent-filter>
--- 73,75 ----
          </service>
!         <service android:directBootAware="true" android:enabled="true" android:label="@string/orbit_label_2" android:name="com.ustwo.lwp.wallpapers.orbit.OrbitWallpaperService2" android:permission="android.permission.BIND_WALLPAPER" android:exported="true">
              <intent-filter>
***************
*** 62,64 ****
          </service>
!         <service android:directBootAware="true" android:enabled="true" android:label="@string/orbit_label_3" android:name="com.ustwo.lwp.wallpapers.orbit.OrbitWallpaperService3" android:permission="android.permission.BIND_WALLPAPER">
              <intent-filter>
--- 79,81 ----
          </service>
!         <service android:directBootAware="true" android:enabled="true" android:label="@string/orbit_label_3" android:name="com.ustwo.lwp.wallpapers.orbit.OrbitWallpaperService3" android:permission="android.permission.BIND_WALLPAPER" android:exported="true">
              <intent-filter>
diff '--context=1' --strip-trailing-cr -r app/src/main/java/com/ustwo/lwp/App.java new/src/main/java/com/ustwo/lwp/App.java
*** app/src/main/java/com/ustwo/lwp/App.java	Wed May  1 13:00:03 2024
--- new/src/main/java/com/ustwo/lwp/App.java	Wed May  1 21:11:06 2024
***************
*** 6,8 ****
  
! import android.content.Context;
  import com.ustwo.lwp.wallpapers.util.TimeUtil;
--- 6,12 ----
  
! import android.content.SharedPreferences;
! import android.os.Build;
! import android.os.Handler;
! import android.os.Looper;
! import android.widget.Toast;
  import com.ustwo.lwp.wallpapers.util.TimeUtil;
***************
*** 17,18 ****
--- 21,23 ----
      private static App instance;
+     private static SharedPreferences preferences;
      public OrbitTestSettings orbitTestSettings;
***************
*** 24,38 ****
      }
!     
!     private void installSecurityExceptionCatcher() {
!         Thread.setDefaultUncaughtExceptionHandler((Thread.UncaughtExceptionHandler)new _$$Lambda$App$Q2TPS7YYDMUfwjZ6_j6yG9xBBb0(Thread.getDefaultUncaughtExceptionHandler()));
      }
!     
      public void onCreate() {
-         this.installSecurityExceptionCatcher();
          super.onCreate();
          App.instance = this;
          L.d("\n----------------------------------------------------------------------------------");
!         TimeUtil.init((Context)this);
          FlavorTypeOverride.afterCreate();
      }
  }
--- 29,62 ----
      }
! 
!     public static SharedPreferences preferences(){
!         return preferences;
      }
! 
!     @Override
      public void onCreate() {
          super.onCreate();
          App.instance = this;
+         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {
+             preferences = createDeviceProtectedStorageContext().getSharedPreferences("cache", 0);
+         } else {
+             preferences = getSharedPreferences("cache", 0);
+         }
+         if (preferences().getBoolean("firstRun",true)){
+             preferences().edit().putBoolean("firstRun",false).apply();
+             showToast(R.string.required_setup);
+         }
          L.d("\n----------------------------------------------------------------------------------");
!         TimeUtil.init(this);
          FlavorTypeOverride.afterCreate();
      }
+     public static void showToast(int textID) {
+         new Handler(Looper.getMainLooper())
+                 .post(
+                         () -> Toast.makeText(
+                                 App.get(),
+                                 textID,
+                                 Toast.LENGTH_LONG
+                         ).show()
+                 );
+     }
  }
diff '--context=1' --strip-trailing-cr -r app/src/main/java/com/ustwo/lwp/util/ColUtil.java new/src/main/java/com/ustwo/lwp/util/ColUtil.java
*** app/src/main/java/com/ustwo/lwp/util/ColUtil.java	Wed May  1 13:00:13 2024
--- new/src/main/java/com/ustwo/lwp/util/ColUtil.java	Mon Apr 29 14:25:39 2024
***************
*** 6,7 ****
--- 6,9 ----
  
+ import android.app.WallpaperColors;
+ import android.os.Build;
  import android.graphics.Color;
***************
*** 49,50 ****
--- 51,80 ----
      }
+     
+    public static WallpaperColors newColors(int primaryColor, int colorHints) {
+         if (android.os.Build.VERSION.SDK_INT >= Build.VERSION_CODES.S) {
+             return new WallpaperColors(Color.valueOf(primaryColor),
+                     null, null, colorHints);
+         } else if (android.os.Build.VERSION.SDK_INT >= Build.VERSION_CODES.O_MR1) {
+             return new WallpaperColors(Color.valueOf(primaryColor),
+                     null, null);
+         }
+         return null;
+     }
+     public static WallpaperColors newColors(int primary,
+             int secondary,int teriary, int colorHints) {
+         if (android.os.Build.VERSION.SDK_INT >= Build.VERSION_CODES.S) {
+             return new WallpaperColors(
+                     Color.valueOf(primary),
+                     Color.valueOf(secondary),
+                     Color.valueOf(teriary),
+                     colorHints);
+         } else if (android.os.Build.VERSION.SDK_INT >= Build.VERSION_CODES.O_MR1) {
+             return new WallpaperColors(
+                     Color.valueOf(primary),
+                     Color.valueOf(secondary),
+                     Color.valueOf(teriary));
+         }
+         return null;
+     }
+     
  }
diff '--context=1' --strip-trailing-cr -r app/src/main/java/com/ustwo/lwp/util/L.java new/src/main/java/com/ustwo/lwp/util/L.java
*** app/src/main/java/com/ustwo/lwp/util/L.java	Wed May  1 13:00:16 2024
--- new/src/main/java/com/ustwo/lwp/util/L.java	Wed May  1 21:13:25 2024
***************
*** 7,8 ****
--- 7,9 ----
  import android.util.Log;
+ import com.ustwo.lwp.BuildConfig;
  
***************
*** 13,14 ****
--- 14,23 ----
      
+     static {
+         if (!BuildConfig.DEBUG) {
+             levelFilter = 3;
+         } else {
+         	levelFilter = 0;
+         }
+     }
+ 
      public static void d() {
***************
*** 45,80 ****
          String string = str;
!         if (L.decorationEnabled) {
!             final StringBuilder sb = new StringBuilder();
!             sb.append(str2);
!             sb.append(".");
!             sb.append(methodName);
!             sb.append("() ");
!             sb.append(str);
!             string = sb.toString();
!         }
!         if (n != 0) {
!             if (n != 1) {
!                 if (n != 2) {
!                     if (n != 3) {
!                         if (n != 4) {
!                             Log.v("zz", string);
!                         }
!                         else {
!                             Log.e("zz", string);
!                         }
!                     }
!                     else {
!                         Log.w("zz", string);
!                     }
!                 }
!                 else {
!                     Log.i("zz", string);
!                 }
!             }
!             else {
!                 Log.d("zz", string);
!             }
          }
!         else {
!             Log.v("zz", string);
          }
--- 54,73 ----
          String string = str;
!         if (decorationEnabled) {
!             string = str2 + "." + methodName + "() " + str;
          }
!         switch (n){
!             case 4:
!                 Log.e("zz", string);
!                 break;
!             case 3 :
!                 Log.w("zz", string);
!                 break;
!             case 2 :
!                 Log.i("zz", string);
!                 break;
!             case 1 :
!                 Log.d("zz", string);
!                 break;
!             default:
!                 Log.v("zz", string);
          }
***************
*** 86,103 ****
          for (int i = 4; i < stackTrace.length; ++i) {
!             final StringBuilder sb = new StringBuilder();
!             sb.append(string);
!             sb.append("    ");
!             final String string2 = sb.toString();
!             final StringBuilder sb2 = new StringBuilder();
!             sb2.append(string2);
!             sb2.append(stackTrace[i].getClassName());
!             sb2.append(".");
!             sb2.append(stackTrace[i].getMethodName());
!             sb2.append(" @ ");
!             sb2.append(stackTrace[i].getLineNumber());
!             final String string3 = sb2.toString();
!             final StringBuilder sb3 = new StringBuilder();
!             sb3.append(string3);
!             sb3.append("\n");
!             string = sb3.toString();
          }
--- 79,84 ----
          for (int i = 4; i < stackTrace.length; ++i) {
!             final String string2 = string + "    " + stackTrace[i].getClassName() + "." +
!                     stackTrace[i].getMethodName() + " @ " +
!                     stackTrace[i].getLineNumber();
!             string = string2 + "\n";
          }
diff '--context=1' --strip-trailing-cr -r app/src/main/java/com/ustwo/lwp/util/MathUtil.java new/src/main/java/com/ustwo/lwp/util/MathUtil.java
*** app/src/main/java/com/ustwo/lwp/util/MathUtil.java	Wed May  1 13:00:17 2024
--- new/src/main/java/com/ustwo/lwp/util/MathUtil.java	Wed May  1 21:13:46 2024
***************
*** 71,76 ****
      public static void pointOnCircle(final float n, final float n2, final float n3, final float n4, final PointF pointF) {
!         final double n5 = (double)n3;
!         final double n6 = (double)n4;
!         pointF.x = (float)(Math.cos(n6) * n5) + n;
!         pointF.y = (float)(n5 * Math.sin(n6)) + n2;
      }
--- 71,74 ----
      public static void pointOnCircle(final float n, final float n2, final float n3, final float n4, final PointF pointF) {
!         pointF.x = (float)(Math.cos(n4) * (double)n3) + n;
!         pointF.y = (float)((double)n3 * Math.sin(n4)) + n2;
      }
***************
*** 78,83 ****
      public static void pointOnCircle(final float n, final float n2, final PointF pointF) {
!         final double n3 = (double)n;
!         final double n4 = (double)n2;
!         pointF.x = (float)(Math.cos(n4) * n3);
!         pointF.y = (float)(n3 * Math.sin(n4));
      }
--- 76,79 ----
      public static void pointOnCircle(final float n, final float n2, final PointF pointF) {
!         pointF.x = (float)(Math.cos(n2) * (double)n);
!         pointF.y = (float)((double)n * Math.sin(n2));
      }
***************
*** 85,91 ****
      public static void rotate(final PointF pointF, float x, final PointF pointF2) {
!         final double n = (double)x;
!         x = (float)(Math.cos(n) * pointF.x - Math.sin(n) * pointF.y);
!         final float y = (float)(Math.sin(n) * pointF.x + Math.cos(n) * pointF.y);
!         pointF2.x = x;
!         pointF2.y = y;
      }
--- 81,84 ----
      public static void rotate(final PointF pointF, float x, final PointF pointF2) {
!         pointF2.x = (float)(Math.cos(x) * pointF.x - Math.sin(x) * pointF.y);
!         pointF2.y = (float)(Math.sin(x) * pointF.x + Math.cos(x) * pointF.y);
      }
diff '--context=1' --strip-trailing-cr -r app/src/main/java/com/ustwo/lwp/util/Util.java new/src/main/java/com/ustwo/lwp/util/Util.java
*** app/src/main/java/com/ustwo/lwp/util/Util.java	Wed May  1 13:00:23 2024
--- new/src/main/java/com/ustwo/lwp/util/Util.java	Wed May  1 21:13:57 2024
***************
*** 6,41 ****
  
  public class Util
  {
!     public static void adjustGravityVectorForDisplayRotation(final int n, final float[] array, final float[] array2) {
!         float n2;
!         float n3;
!         float n4;
!         if (n != 1) {
!             if (n != 2) {
!                 if (n != 3) {
!                     n2 = array[0];
!                     n3 = array[1];
!                     n4 = array[2];
!                 }
!                 else {
!                     n2 = array[1];
!                     n3 = -1.0f * array[0];
!                     n4 = array[2];
!                 }
!             }
!             else {
!                 n2 = array[0] * -1.0f;
!                 n3 = -1.0f * array[1];
!                 n4 = array[2];
              }
          }
-         else {
-             n2 = array[1] * -1.0f;
-             n3 = array[0];
-             n4 = array[2];
-         }
-         array2[0] = n2;
-         array2[1] = n3;
-         array2[2] = n4;
-     }
  }
--- 6,36 ----
  
+ import android.view.Surface;
+ 
  public class Util
  {
!     public static void adjustGravityVectorForDisplayRotation(final int rotation, final float[] input, float[] output) {
!             float rotY =0;
!             float rotX =0;
!             switch (rotation) {
!                 case Surface.ROTATION_0:
!                     rotX = input[0];
!                     rotY = input[1];
!                     break;
!                 case Surface.ROTATION_90:
!                     rotX = input[1] * -1.0f;
!                     rotY = input[0];
!                     break;
!                 case Surface.ROTATION_180:
!                     rotX = input[0] * -1.0f;
!                     rotY = -1.0f * input[1];
!                     break;
!                 case Surface.ROTATION_270:
!                     rotX = input[1];
!                     rotY = -1.0f * input[0];
!                     break;
              }
+             output[0] = rotX;
+             output[1] = rotY;
+             output[2] = input[2];
          }
  }
diff '--context=1' --strip-trailing-cr -r app/src/main/java/com/ustwo/lwp/util/Vec3f.java new/src/main/java/com/ustwo/lwp/util/Vec3f.java
*** app/src/main/java/com/ustwo/lwp/util/Vec3f.java	Wed May  1 13:00:25 2024
--- new/src/main/java/com/ustwo/lwp/util/Vec3f.java	Wed May  1 21:14:07 2024
***************
*** 66,75 ****
      public String toString() {
!         final StringBuilder sb = new StringBuilder();
!         sb.append("[Vec3f] ");
!         sb.append(this.x);
!         sb.append(", ");
!         sb.append(this.y);
!         sb.append(", ");
!         sb.append(this.z);
!         return sb.toString();
      }
--- 66,73 ----
      public String toString() {
!         return "[Vec3f] " +
!                 this.x +
!                 ", " +
!                 this.y +
!                 ", " +
!                 this.z;
      }
diff '--context=1' --strip-trailing-cr -r app/src/main/java/com/ustwo/lwp/util/gl/GlUtil.java new/src/main/java/com/ustwo/lwp/util/gl/GlUtil.java
*** app/src/main/java/com/ustwo/lwp/util/gl/GlUtil.java	Wed May  1 13:00:27 2024
--- new/src/main/java/com/ustwo/lwp/util/gl/GlUtil.java	Wed May  1 21:11:36 2024
***************
*** 12,14 ****
      public static boolean supportsEs2(final Context context) {
!         return ((ActivityManager)context.getSystemService("activity")).getDeviceConfigurationInfo().reqGlEsVersion >= 131072;
      }
--- 12,14 ----
      public static boolean supportsEs2(final Context context) {
!         return ((ActivityManager)context.getSystemService(Context.ACTIVITY_SERVICE)).getDeviceConfigurationInfo().reqGlEsVersion >= 131072;
      }
diff '--context=1' --strip-trailing-cr -r app/src/main/java/com/ustwo/lwp/util/gl/TextResourceReader.java new/src/main/java/com/ustwo/lwp/util/gl/TextResourceReader.java
*** app/src/main/java/com/ustwo/lwp/util/gl/TextResourceReader.java	Wed May  1 13:00:33 2024
--- new/src/main/java/com/ustwo/lwp/util/gl/TextResourceReader.java	Wed May  1 21:12:33 2024
***************
*** 7,10 ****
  import java.io.IOException;
! import android.content.res.Resources$NotFoundException;
! import java.io.Reader;
  import java.io.BufferedReader;
--- 7,9 ----
  import java.io.IOException;
! import android.content.res.Resources.NotFoundException;
  import java.io.BufferedReader;
***************
*** 29,31 ****
          }
!         catch (final Resources$NotFoundException cause) {
              final StringBuilder sb2 = new StringBuilder();
--- 28,30 ----
          }
!         catch (NotFoundException cause) {
              final StringBuilder sb2 = new StringBuilder();
***************
*** 33,35 ****
              sb2.append(n);
!             throw new RuntimeException(sb2.toString(), (Throwable)cause);
          }
--- 32,34 ----
              sb2.append(n);
!             throw new RuntimeException(sb2.toString(), cause);
          }
diff '--context=1' --strip-trailing-cr -r app/src/main/java/com/ustwo/lwp/util/gl/TextureUtil.java new/src/main/java/com/ustwo/lwp/util/gl/TextureUtil.java
*** app/src/main/java/com/ustwo/lwp/util/gl/TextureUtil.java	Wed May  1 13:00:35 2024
--- new/src/main/java/com/ustwo/lwp/util/gl/TextureUtil.java	Wed May  1 21:12:47 2024
***************
*** 9,11 ****
  import android.graphics.BitmapFactory;
! import android.graphics.BitmapFactory$Options;
  import com.ustwo.lwp.util.L;
--- 9,11 ----
  import android.graphics.BitmapFactory;
! import android.graphics.BitmapFactory.Options;
  import com.ustwo.lwp.util.L;
***************
*** 23,27 ****
          }
!         final BitmapFactory$Options bitmapFactory$Options = new BitmapFactory$Options();
!         bitmapFactory$Options.inScaled = false;
!         final Bitmap decodeResource = BitmapFactory.decodeResource(context.getResources(), i, bitmapFactory$Options);
          final StringBuilder sb = new StringBuilder();
--- 23,27 ----
          }
!         final Options Options = new Options();
!         Options.inScaled = false;
!         final Bitmap decodeResource = BitmapFactory.decodeResource(context.getResources(), i, Options);
          final StringBuilder sb = new StringBuilder();
diff '--context=1' --strip-trailing-cr -r app/src/main/java/com/ustwo/lwp/util/gl/VertexArray.java new/src/main/java/com/ustwo/lwp/util/gl/VertexArray.java
*** app/src/main/java/com/ustwo/lwp/util/gl/VertexArray.java	Wed May  1 13:00:37 2024
--- new/src/main/java/com/ustwo/lwp/util/gl/VertexArray.java	Wed May  1 21:12:54 2024
***************
*** 6,8 ****
  
- import java.nio.Buffer;
  import android.opengl.GLES20;
--- 6,7 ----
***************
*** 20,32 ****
      
!     public void setVertexAttribPointer(final int n, final int n2, final int n3, final int n4) {
!         this.floatBuffer.position();
!         GLES20.glVertexAttribPointer(n2, n3, 5126, false, n4, (Buffer)this.floatBuffer);
!         GLES20.glEnableVertexAttribArray(n2);
!         this.floatBuffer.position();
      }
      
!     public void updateBuffer(final float[] src, final int offset, final int length) {
!         this.floatBuffer.position();
!         this.floatBuffer.put(src, offset, length);
!         this.floatBuffer.position();
      }
--- 19,31 ----
      
!     public void setVertexAttribPointer(int position, int pointerIndex, int size, int stride) {
!         this.floatBuffer.position(position);
!         GLES20.glVertexAttribPointer(pointerIndex, size, GLES20.GL_FLOAT, false, stride, this.floatBuffer);
!         GLES20.glEnableVertexAttribArray(pointerIndex);
!         this.floatBuffer.position(0);    
      }
      
!     public void updateBuffer(float[] fArray, int position, int value) {
!         this.floatBuffer.position(position);
!         this.floatBuffer.put(fArray, position, value);
!         this.floatBuffer.position(0);
      }
diff '--context=1' --strip-trailing-cr -r app/src/main/java/com/ustwo/lwp/wallpapers/base/EasyQuad.java new/src/main/java/com/ustwo/lwp/wallpapers/base/EasyQuad.java
*** app/src/main/java/com/ustwo/lwp/wallpapers/base/EasyQuad.java	Wed May  1 13:00:45 2024
--- new/src/main/java/com/ustwo/lwp/wallpapers/base/EasyQuad.java	Wed May  1 21:14:22 2024
***************
*** 45,49 ****
              if (this.positionsDirty) {
!                 final VertexArray positionArray = this.positionArray;
!                 final float[] transformedPositions = super.transformedPositions;
!                 positionArray.updateBuffer(transformedPositions, 0, transformedPositions.length);
                  this.positionsDirty = false;
--- 45,47 ----
              if (this.positionsDirty) {
!                 this.positionArray.updateBuffer(this.transformedPositions, 0, this.transformedPositions.length);
                  this.positionsDirty = false;
***************
*** 52,56 ****
                  this.writeColors(this.colors, 0);
!                 final VertexArray colorArray = this.colorArray;
!                 final float[] colors = this.colors;
!                 colorArray.updateBuffer(colors, 0, colors.length);
                  this.colorsDirty = false;
--- 50,52 ----
                  this.writeColors(this.colors, 0);
!                 this.colorArray.updateBuffer(this.colors, 0, this.colors.length);
                  this.colorsDirty = false;
***************
*** 58,62 ****
              if (this.texCoordsDirty) {
!                 final VertexArray textureCoordArray = this.textureCoordArray;
!                 final float[] textureCoords = super.textureCoords;
!                 textureCoordArray.updateBuffer(textureCoords, 0, textureCoords.length);
                  this.texCoordsDirty = false;
--- 54,56 ----
              if (this.texCoordsDirty) {
!                 this.textureCoordArray.updateBuffer(this.textureCoords, 0, this.textureCoords.length);
                  this.texCoordsDirty = false;
diff '--context=1' --strip-trailing-cr -r app/src/main/java/com/ustwo/lwp/wallpapers/base/GLWallpaperService.java new/src/main/java/com/ustwo/lwp/wallpapers/base/GLWallpaperService.java
*** app/src/main/java/com/ustwo/lwp/wallpapers/base/GLWallpaperService.java	Wed May  1 13:00:52 2024
--- new/src/main/java/com/ustwo/lwp/wallpapers/base/GLWallpaperService.java	Wed May  1 21:14:35 2024
***************
*** 10,13 ****
  import javax.microedition.khronos.egl.EGL10;
! import android.opengl.GLSurfaceView$Renderer;
! import android.opengl.GLSurfaceView$EGLContextFactory;
  import android.content.Context;
--- 10,13 ----
  import javax.microedition.khronos.egl.EGL10;
! import android.opengl.GLSurfaceView.Renderer;
! import android.opengl.GLSurfaceView.EGLContextFactory;
  import android.content.Context;
***************
*** 15,17 ****
  import android.opengl.GLSurfaceView;
! import android.service.wallpaper.WallpaperService$Engine;
  import android.service.wallpaper.WallpaperService;
--- 15,17 ----
  import android.opengl.GLSurfaceView;
! import android.service.wallpaper.WallpaperService.Engine;
  import android.service.wallpaper.WallpaperService;
***************
*** 22,24 ****
      
!     public class GLEngine extends WallpaperService$Engine
      {
--- 22,24 ----
      
!     public class GLEngine extends Engine
      {
***************
*** 26,31 ****
          protected boolean isRendererSet;
-         final GLWallpaperService this$0;
          
!         public GLEngine(final GLWallpaperService this$0) {
!             super((WallpaperService)(this.this$0 = this$0));
          }
--- 26,30 ----
          protected boolean isRendererSet;
          
!         public GLEngine() {
!             super();
          }
***************
*** 38,40 ****
              super.onCreate(surfaceHolder);
!             (this.glSurfaceView = new WallpaperGLSurfaceView((Context)this.this$0)).setEGLContextFactory((GLSurfaceView$EGLContextFactory)new LowPrioContextFactory());
          }
--- 37,39 ----
              super.onCreate(surfaceHolder);
!             (this.glSurfaceView = new WallpaperGLSurfaceView(GLWallpaperService.this)).setEGLContextFactory(new LowPrioContextFactory());
          }
***************
*** 55,59 ****
          
!         protected void setRenderer(final GLSurfaceView$Renderer renderer) {
              this.glSurfaceView.setRenderer(renderer);
!             this.glSurfaceView.setRenderMode(this.this$0.defaultGlSurfaceViewRenderMode());
              this.isRendererSet = true;
--- 54,58 ----
          
!         protected void setRenderer(final Renderer renderer) {
              this.glSurfaceView.setRenderer(renderer);
!             this.glSurfaceView.setRenderMode(GLWallpaperService.this.defaultGlSurfaceViewRenderMode());
              this.isRendererSet = true;
***************
*** 61,70 ****
          
!         class LowPrioContextFactory implements GLSurfaceView$EGLContextFactory
          {
-             final GLEngine this$1;
-             
-             LowPrioContextFactory(final GLEngine this$1) {
-                 this.this$1 = this$1;
-             }
-             
              public EGLContext createContext(final EGL10 egl10, final EGLDisplay eglDisplay, final EGLConfig eglConfig) {
--- 60,63 ----
          
!         class LowPrioContextFactory implements EGLContextFactory
          {
              public EGLContext createContext(final EGL10 egl10, final EGLDisplay eglDisplay, final EGLConfig eglConfig) {
***************
*** 80,85 ****
          {
!             final GLEngine this$1;
!             
!             WallpaperGLSurfaceView(final GLEngine this$1, final Context context) {
!                 this.this$1 = this$1;
                  super(context);
--- 73,75 ----
          {
!             WallpaperGLSurfaceView(final Context context) {
                  super(context);
***************
*** 88,90 ****
              public SurfaceHolder getHolder() {
!                 return this.this$1.getSurfaceHolder();
              }
--- 78,80 ----
              public SurfaceHolder getHolder() {
!                 return GLEngine.this.getSurfaceHolder();
              }
diff '--context=1' --strip-trailing-cr -r app/src/main/java/com/ustwo/lwp/wallpapers/base/Quad.java new/src/main/java/com/ustwo/lwp/wallpapers/base/Quad.java
*** app/src/main/java/com/ustwo/lwp/wallpapers/base/Quad.java	Wed May  1 13:01:01 2024
--- new/src/main/java/com/ustwo/lwp/wallpapers/base/Quad.java	Wed May  1 21:18:37 2024
***************
*** 36,73 ****
      public void applyMatrix() {
!         final float[] array = { 0.0f, 0.0f, 0.0f, 1.0f };
!         final float[] array2 = { 0.0f, 0.0f, 0.0f, 1.0f };
          for (int i = 0; i < this.transformedPositions.length; i += 3) {
!             final float[] basePositions = this.basePositions;
!             array[0] = basePositions[i];
!             final int n = i + 1;
!             array[1] = basePositions[n];
!             final int n2 = i + 2;
!             array[2] = basePositions[n2];
!             Matrix.multiplyMV(array2, 0, this.matrix, 0, array, 0);
!             final float[] transformedPositions = this.transformedPositions;
!             transformedPositions[i] = array2[0];
!             transformedPositions[n] = array2[1];
!             transformedPositions[n2] = array2[2];
          }
      }
!     
!     public void setBasePositions(final float n, final float n2, final float n3, final float n4) {
!         final float[] basePositions = this.basePositions;
!         basePositions[0] = n;
!         basePositions[1] = n2;
          basePositions[2] = 0.0f;
!         basePositions[3] = n3;
!         basePositions[4] = n2;
          basePositions[5] = 0.0f;
!         basePositions[6] = n3;
!         basePositions[7] = n4;
          basePositions[8] = 0.0f;
!         basePositions[9] = n;
!         basePositions[10] = n2;
          basePositions[11] = 0.0f;
!         basePositions[12] = n3;
!         basePositions[13] = n4;
          basePositions[14] = 0.0f;
!         basePositions[15] = n;
!         basePositions[16] = n4;
          basePositions[17] = 0.0f;
--- 36,68 ----
      public void applyMatrix() {
!         float[] tempArray = new float[]{0.0f, 0.0f, 0.0f, 1.0f};
!         float[] result = new float[]{0.0f, 0.0f, 0.0f, 1.0f};
          for (int i = 0; i < this.transformedPositions.length; i += 3) {
!             tempArray[0] = this.basePositions[i];
!             tempArray[1] = this.basePositions[i + 1];
!             tempArray[2] = this.basePositions[i + 2];
!             Matrix.multiplyMV(result, 0, this.matrix, 0, tempArray, 0);
!             this.transformedPositions[i] = result[0];
!             this.transformedPositions[i + 1] = result[1];
!             this.transformedPositions[i + 2] = result[2];
          }
      }
! 
!     public void setBasePositions(float x, float y, float z, float d) {
!         basePositions[0] = x;
!         basePositions[1] = y;
          basePositions[2] = 0.0f;
!         basePositions[3] = z;
!         basePositions[4] = y;
          basePositions[5] = 0.0f;
!         basePositions[6] = z;
!         basePositions[7] = d;
          basePositions[8] = 0.0f;
!         basePositions[9] = x;
!         basePositions[10] = y;
          basePositions[11] = 0.0f;
!         basePositions[12] = z;
!         basePositions[13] = d;
          basePositions[14] = 0.0f;
!         basePositions[15] = x;
!         basePositions[16] = d;
          basePositions[17] = 0.0f;
***************
*** 75,185 ****
      }
!     
!     public void setBasePositions(float n, float n2, final Origin origin) {
!         float n4;
!         float n5;
!         if (Quad$1.$SwitchMap$com$ustwo$lwp$wallpapers$base$Quad$Origin[origin.ordinal()] != 1) {
!             final float n3 = -n / 2.0f;
!             n4 = -n2 / 2.0f;
!             n /= 2.0f;
!             n5 = n2 / 2.0f;
!             n2 = n;
!             n = n3;
!         }
!         else {
!             final float n6 = -n / 2.0f;
!             n4 = -n2;
!             n2 = n / 2.0f;
!             final float n7 = 0.0f;
!             n = n6;
!             n5 = n7;
          }
!         this.setBasePositions(n, n4, n2, n5);
      }
!     
!     public void setColors(final float n, final float n2, final float n3, final float n4) {
!         for (final float[] array : this.cornerRgbs) {
!             array[0] = n;
!             array[1] = n2;
!             array[2] = n3;
!             array[3] = n4;
          }
      }
!     
!     public void setLowerLeftRgb(final float n, final float n2, final float n3, final float n4) {
!         final float[] lowerLeftRgb = this.lowerLeftRgb;
!         lowerLeftRgb[0] = n;
!         lowerLeftRgb[1] = n2;
!         lowerLeftRgb[2] = n3;
!         lowerLeftRgb[3] = n4;
!     }
!     
!     public void setLowerLeftRgb(final float[] array, final float n) {
!         this.setLowerLeftRgb(array[0], array[1], array[2], n);
!     }
!     
!     public void setLowerRightRgb(final float n, final float n2, final float n3, final float n4) {
!         final float[] lowerRightRgb = this.lowerRightRgb;
!         lowerRightRgb[0] = n;
!         lowerRightRgb[1] = n2;
!         lowerRightRgb[2] = n3;
!         this.upperRightRgb[3] = n4;
!     }
!     
!     public void setLowerRightRgb(final float[] array, final float n) {
!         this.setLowerRightRgb(array[0], array[1], array[2], n);
!     }
!     
!     public void setUpperLeftRgb(final float n, final float n2, final float n3, final float n4) {
!         final float[] upperLeftRgb = this.upperLeftRgb;
!         upperLeftRgb[0] = n;
!         upperLeftRgb[1] = n2;
!         upperLeftRgb[2] = n3;
!         upperLeftRgb[3] = n4;
!     }
!     
!     public void setUpperLeftRgb(final float[] array, final float n) {
!         this.setUpperLeftRgb(array[0], array[1], array[2], n);
!     }
!     
!     public void setUpperRightRgb(final float n, final float n2, final float n3, final float n4) {
!         final float[] upperRightRgb = this.upperRightRgb;
!         upperRightRgb[0] = n;
!         upperRightRgb[1] = n2;
!         upperRightRgb[2] = n3;
!         upperRightRgb[3] = n4;
!     }
!     
!     public void setUpperRightRgb(final float[] array, final float n) {
!         this.setUpperRightRgb(array[0], array[1], array[2], n);
!     }
!     
!     public void writeColors(final float[] array, final int n) {
!         final float[] upperLeftRgb = this.upperLeftRgb;
!         array[n] = upperLeftRgb[0];
!         array[n + 1] = upperLeftRgb[1];
!         array[n + 2] = upperLeftRgb[2];
!         array[n + 3] = upperLeftRgb[3];
!         final float[] upperRightRgb = this.upperRightRgb;
!         array[n + 4] = upperRightRgb[0];
!         array[n + 5] = upperRightRgb[1];
!         array[n + 6] = upperRightRgb[2];
!         array[n + 7] = upperRightRgb[3];
!         final float[] lowerRightRgb = this.lowerRightRgb;
!         array[n + 8] = lowerRightRgb[0];
!         array[n + 9] = lowerRightRgb[1];
!         array[n + 10] = lowerRightRgb[2];
!         array[n + 11] = lowerRightRgb[3];
!         array[n + 12] = upperLeftRgb[0];
!         array[n + 13] = upperLeftRgb[1];
!         array[n + 14] = upperLeftRgb[2];
!         array[n + 15] = upperLeftRgb[3];
!         array[n + 16] = lowerRightRgb[0];
!         array[n + 17] = lowerRightRgb[1];
!         array[n + 18] = lowerRightRgb[2];
!         array[n + 19] = lowerRightRgb[3];
!         final float[] lowerLeftRgb = this.lowerLeftRgb;
!         array[n + 20] = lowerLeftRgb[0];
!         array[n + 21] = lowerLeftRgb[1];
!         array[n + 22] = lowerLeftRgb[2];
!         array[n + 23] = lowerLeftRgb[3];
      }
--- 70,163 ----
      }
! 
!     public void setBasePositions(float f, float f2, Origin origin) {
!         if (java.util.Objects.requireNonNull(origin) == Origin.CENTER) {
!             setBasePositions(-f / 2.0f, -f2 / 2.0f, f / 2.0f, f2 / 2.0f);
!             return;
          }
!         setBasePositions(-f / 2.0f, -f2, f / 2.0f, 0.0f);
      }
! 
!     public void setColors(float f, float f2, float f3, float f4) {
!         for (float[] fArray : this.cornerRgbs) {
!             fArray[0] = f;
!             fArray[1] = f2;
!             fArray[2] = f3;
!             fArray[3] = f4;
          }
      }
! 
!     public void setLowerLeftRgb(float x, float y, float z, float d) {
!         lowerLeftRgb[0] = x;
!         lowerLeftRgb[1] = y;
!         lowerLeftRgb[2] = z;
!         lowerLeftRgb[3] = d;
!     }
! 
!     public void setLowerLeftRgb(float[] fArray, float f) {
!         this.setLowerLeftRgb(fArray[0], fArray[1], fArray[2], f);
!     }
! 
!     public void setLowerRightRgb(float x, float y, float z, float d) {
!         lowerRightRgb[0] = x;
!         lowerRightRgb[1] = y;
!         lowerRightRgb[2] = z;
!         upperRightRgb[3] = d;
!     }
! 
!     public void setLowerRightRgb(float[] fArray, float f) {
!         this.setLowerRightRgb(fArray[0], fArray[1], fArray[2], f);
!     }
! 
!     public void setUpperLeftRgb(float f, float f2, float f3, float f4) {
!         upperLeftRgb[0] = f;
!         upperLeftRgb[1] = f2;
!         upperLeftRgb[2] = f3;
!         upperLeftRgb[3] = f4;
!     }
! 
!     public void setUpperLeftRgb(float[] fArray, float f) {
!         this.setUpperLeftRgb(fArray[0], fArray[1], fArray[2], f);
!     }
! 
!     public void setUpperRightRgb(float f, float f2, float f3, float f4) {
!         upperRightRgb[0] = f;
!         upperRightRgb[1] = f2;
!         upperRightRgb[2] = f3;
!         upperRightRgb[3] = f4;
!     }
! 
!     public void setUpperRightRgb(float[] fArray, float f) {
!         this.setUpperRightRgb(fArray[0], fArray[1], fArray[2], f);
!     }
! 
!     public void writeColors(float[] arrayColors, int startIndex) {
!         arrayColors[startIndex] = upperLeftRgb[0];
!         arrayColors[startIndex + 1] = upperLeftRgb[1];
!         arrayColors[startIndex + 2] = upperLeftRgb[2];
!         arrayColors[startIndex + 3] = upperLeftRgb[3];
! 
!         arrayColors[startIndex + 4] = upperRightRgb[0];
!         arrayColors[startIndex + 5] = upperRightRgb[1];
!         arrayColors[startIndex + 6] = upperRightRgb[2];
!         arrayColors[startIndex + 7] = upperRightRgb[3];
! 
!         arrayColors[startIndex + 8] = lowerRightRgb[0];
!         arrayColors[startIndex + 9] = lowerRightRgb[1];
!         arrayColors[startIndex + 10] = lowerRightRgb[2];
!         arrayColors[startIndex + 11] = lowerRightRgb[3];
! 
!         arrayColors[startIndex + 12] = upperLeftRgb[0];
!         arrayColors[startIndex + 13] = upperLeftRgb[1];
!         arrayColors[startIndex + 14] = upperLeftRgb[2];
!         arrayColors[startIndex + 15] = upperLeftRgb[3];
! 
!         arrayColors[startIndex + 16] = lowerRightRgb[0];
!         arrayColors[startIndex + 17] = lowerRightRgb[1];
!         arrayColors[startIndex + 18] = lowerRightRgb[2];
!         arrayColors[startIndex + 19] = lowerRightRgb[3];
! 
!         arrayColors[startIndex + 20] = lowerLeftRgb[0];
!         arrayColors[startIndex + 21] = lowerLeftRgb[1];
!         arrayColors[startIndex + 22] = lowerLeftRgb[2];
!         arrayColors[startIndex + 23] = lowerLeftRgb[3];
      }
***************
*** 188,197 ****
      {
-         private static final Origin[] $VALUES;
-         
          BOTTOM_CENTER, 
!         CENTER;
!         
!         static {
!             $VALUES = new Origin[] { Origin.CENTER, Origin.BOTTOM_CENTER };
!         }
      }
--- 166,169 ----
      {
          BOTTOM_CENTER, 
!         CENTER
      }
diff '--context=1' --strip-trailing-cr -r app/src/main/java/com/ustwo/lwp/wallpapers/base/RenderNode.java new/src/main/java/com/ustwo/lwp/wallpapers/base/RenderNode.java
*** app/src/main/java/com/ustwo/lwp/wallpapers/base/RenderNode.java	Wed May  1 13:01:03 2024
--- new/src/main/java/com/ustwo/lwp/wallpapers/base/RenderNode.java	Wed May  1 21:19:01 2024
***************
*** 6,8 ****
  
- import java.util.Iterator;
  import java.util.ArrayList;
--- 6,7 ----
***************
*** 12,17 ****
  {
!     private List<RenderNode> childNodes;
      
      public RenderNode() {
!         this.childNodes = new ArrayList<RenderNode>();
      }
--- 11,16 ----
  {
!     private final List<RenderNode> childNodes;
      
      public RenderNode() {
!         this.childNodes = new ArrayList<>();
      }
***************
*** 28,32 ****
          this.doDraw();
!         final Iterator<RenderNode> iterator = this.childNodes.iterator();
!         while (iterator.hasNext()) {
!             ((RenderNode)iterator.next()).draw();
          }
--- 27,30 ----
          this.doDraw();
!         for (RenderNode childNode : this.childNodes) {
!             childNode.draw();
          }
***************
*** 40,44 ****
          this.doUpdate();
!         final Iterator<RenderNode> iterator = this.childNodes.iterator();
!         while (iterator.hasNext()) {
!             ((RenderNode)iterator.next()).update();
          }
--- 38,41 ----
          this.doUpdate();
!         for (RenderNode childNode : this.childNodes) {
!             childNode.update();
          }
diff '--context=1' --strip-trailing-cr -r app/src/main/java/com/ustwo/lwp/wallpapers/base/RenderScheduler.java new/src/main/java/com/ustwo/lwp/wallpapers/base/RenderScheduler.java
*** app/src/main/java/com/ustwo/lwp/wallpapers/base/RenderScheduler.java	Wed May  1 13:01:07 2024
--- new/src/main/java/com/ustwo/lwp/wallpapers/base/RenderScheduler.java	Wed May  1 21:19:35 2024
***************
*** 6,7 ****
--- 6,8 ----
  
+ import android.os.Looper;
  import android.os.SystemClock;
***************
*** 11,15 ****
  {
!     private Handler handler;
      private UtRenderer renderer;
!     private Runnable runnable;
      private long startNs;
--- 12,16 ----
  {
!     private final Handler handler;
      private UtRenderer renderer;
!     private final Runnable runnable;
      private long startNs;
***************
*** 19,30 ****
          this.visible = true;
!         this.runnable = new Runnable() {
!             final RenderScheduler this$0;
!             
!             @Override
!             public void run() {
!                 this.this$0.renderer.glSurfaceView().requestRender();
!             }
!         };
          this.renderer = renderer;
!         this.handler = new Handler();
      }
--- 20,24 ----
          this.visible = true;
!         this.runnable = () -> RenderScheduler.this.renderer.glSurfaceView().requestRender();
          this.renderer = renderer;
!         handler = new Handler(Looper.getMainLooper());
      }
diff '--context=1' --strip-trailing-cr -r app/src/main/java/com/ustwo/lwp/wallpapers/base/UtRenderer.java new/src/main/java/com/ustwo/lwp/wallpapers/base/UtRenderer.java
*** app/src/main/java/com/ustwo/lwp/wallpapers/base/UtRenderer.java	Wed May  1 13:01:09 2024
--- new/src/main/java/com/ustwo/lwp/wallpapers/base/UtRenderer.java	Wed May  1 21:20:24 2024
***************
*** 19,25 ****
  import com.ustwo.lwp.util.Vec3f;
! import android.opengl.GLSurfaceView$Renderer;
  
! public abstract class UtRenderer extends RenderNode implements GLSurfaceView$Renderer
! {
!     private int debugFrameCount;
      protected int displayHeight;
--- 19,31 ----
  import com.ustwo.lwp.util.Vec3f;
! import android.opengl.GLSurfaceView.Renderer;
  
! import android.content.Context;
! import android.graphics.Insets;
! import android.graphics.Rect;
! import android.os.Build;
! import android.view.WindowInsets;
! import android.view.WindowManager;
! import android.view.WindowMetrics;
! 
! public abstract class UtRenderer extends RenderNode implements Renderer{
      protected int displayHeight;
***************
*** 46,55 ****
          this.isFirstSurfaceRedraw = true;
-         this.debugFrameCount = -10;
          L.d();
          this.scheduler = new RenderScheduler(this);
!         final DisplayManager displayManager = (DisplayManager)App.get().getSystemService("display");
!         final Point point = new Point();
!         displayManager.getDisplay(0).getSize(point);
!         this.displayWidth = point.x;
!         this.displayHeight = point.y;
      }
--- 52,75 ----
          this.isFirstSurfaceRedraw = true;
          L.d();
          this.scheduler = new RenderScheduler(this);
!         final DisplayManager dm = (DisplayManager)App.get().getSystemService(Context.DISPLAY_SERVICE);
!         final WindowManager wm = (WindowManager) App.get().getSystemService(Context.WINDOW_SERVICE);
!         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.R) {
!             WindowMetrics windowMetrics = wm.getCurrentWindowMetrics();
!             WindowInsets windowInsets = windowMetrics.getWindowInsets();
!             Insets insets = windowInsets.getInsetsIgnoringVisibility(
!                     WindowInsets.Type.navigationBars() | WindowInsets.Type.displayCutout());
! 
!             int insetsWidth = insets.right + insets.left;
!             int insetsHeight = insets.top + insets.bottom;
! 
!             Rect b = windowMetrics.getBounds();
!             displayWidth = b.width() - insetsWidth;
!             displayHeight = b.height() - insetsHeight;
!         } else {
!             Point point = new Point();
!             dm.getDisplay(0).getSize(point);
!             displayWidth = point.x;
!             displayHeight = point.y;
!         }
      }
***************
*** 63,65 ****
      public GLSurfaceView glSurfaceView() {
!         return ((GLWallpaperService.GLEngine)this.engine).glSurfaceView();
      }
--- 83,85 ----
      public GLSurfaceView glSurfaceView() {
!         return this.engine.glSurfaceView();
      }
***************
*** 107,110 ****
      protected void onGravitySensor(final float n, final float n2, final float n3) {
!         final Vec3f lastGravity = this.lastGravity;
!         if (lastGravity == null) {
              this.lastGravity = new Vec3f(n, n2, n3);
--- 127,130 ----
      protected void onGravitySensor(final float n, final float n2, final float n3) {
! 
!         if (this.lastGravity == null) {
              this.lastGravity = new Vec3f(n, n2, n3);
***************
*** 134,139 ****
      protected void onScreenOn() {
!         final StringBuilder sb = new StringBuilder();
!         sb.append("and is visible? ");
!         sb.append(this.isVisible);
!         L.d(sb.toString());
          if (this.isVisible) {
--- 154,156 ----
      protected void onScreenOn() {
!         L.d("and is visible? " + this.isVisible);
          if (this.isVisible) {
***************
*** 144,150 ****
      public void onSurfaceChanged(final GL10 gl10, final int n, final int n2) {
!         final StringBuilder sb = new StringBuilder();
!         sb.append(n);
!         sb.append("x");
!         sb.append(n2);
!         L.d(sb.toString());
          this.viewportWidth = n;
--- 161,163 ----
      public void onSurfaceChanged(final GL10 gl10, final int n, final int n2) {
!         L.d(n + "x" + n2);
          this.viewportWidth = n;
diff '--context=1' --strip-trailing-cr -r app/src/main/java/com/ustwo/lwp/wallpapers/base/UtWallpaperService.java new/src/main/java/com/ustwo/lwp/wallpapers/base/UtWallpaperService.java
*** app/src/main/java/com/ustwo/lwp/wallpapers/base/UtWallpaperService.java	Wed May  1 13:01:20 2024
--- new/src/main/java/com/ustwo/lwp/wallpapers/base/UtWallpaperService.java	Wed May  1 21:22:46 2024
***************
*** 8,15 ****
  import android.hardware.SensorEvent;
! import android.view.GestureDetector$SimpleOnGestureListener;
! import com.ustwo.lwp.wallpapers.util.TimeUtil;
  import android.content.Intent;
  import android.view.MotionEvent;
! import android.view.GestureDetector$OnGestureListener;
! import android.opengl.GLSurfaceView$Renderer;
  import android.content.Context;
--- 8,14 ----
  import android.hardware.SensorEvent;
! import android.view.GestureDetector.SimpleOnGestureListener;
! 
  import android.content.Intent;
  import android.view.MotionEvent;
! 
  import android.content.Context;
***************
*** 18,20 ****
  import android.app.WallpaperColors;
- import java.util.Iterator;
  import android.hardware.SensorEventListener;
--- 17,18 ----
***************
*** 29,31 ****
  import com.ustwo.lwp.util.L;
- import android.service.wallpaper.WallpaperService$Engine;
  
--- 27,28 ----
***************
*** 48,50 ****
      
!     public WallpaperService$Engine onCreateEngine() {
          return new UtEngine();
--- 45,47 ----
      
!     public Engine onCreateEngine() {
          return new UtEngine();
***************
*** 72,79 ****
          private float[] tempGrav;
!         final UtWallpaperService this$0;
!         
!         public UtEngine(final UtWallpaperService this$0) {
!             (GLWallpaperService)(this.this$0 = this$0).super();
              this.tempGrav = new float[3];
!             this.displayRotation = ((DisplayManager)App.get().getSystemService("display")).getDisplay(0).getRotation();
          }
--- 69,74 ----
          private float[] tempGrav;
!         public UtEngine() {
!             super();
              this.tempGrav = new float[3];
!             this.displayRotation = ((DisplayManager) App.get().getSystemService(Context.DISPLAY_SERVICE)).getDisplay(0).getRotation();
          }
***************
*** 82,86 ****
              this.deviceEventsReceiver = new DeviceEventsReceiver();
!             this.this$0.registerReceiver((BroadcastReceiver)this.deviceEventsReceiver, new IntentFilter("android.intent.action.SCREEN_OFF"));
!             this.this$0.registerReceiver((BroadcastReceiver)this.deviceEventsReceiver, new IntentFilter("android.intent.action.SCREEN_ON"));
!             this.this$0.registerReceiver((BroadcastReceiver)this.deviceEventsReceiver, new IntentFilter("android.intent.action.USER_PRESENT"));
          }
--- 77,81 ----
              this.deviceEventsReceiver = new DeviceEventsReceiver();
!             UtWallpaperService.this.registerReceiver(this.deviceEventsReceiver, new IntentFilter("android.intent.action.SCREEN_OFF"));
!             UtWallpaperService.this.registerReceiver(this.deviceEventsReceiver, new IntentFilter("android.intent.action.SCREEN_ON"));
!             UtWallpaperService.this.registerReceiver(this.deviceEventsReceiver, new IntentFilter("android.intent.action.USER_PRESENT"));
          }
***************
*** 88,91 ****
          private void registerSensors() {
!             if (this.this$0.handlesGravity()) {
!                 this.sensorManager.registerListener((SensorEventListener)this.gravitySensorListener, this.gravitySensor, 2);
              }
--- 83,86 ----
          private void registerSensors() {
!             if (UtWallpaperService.this.handlesGravity()) {
!                 this.sensorManager.registerListener(this.gravitySensorListener, this.gravitySensor, 2);
              }
***************
*** 95,99 ****
              try {
!                 this.this$0.unregisterReceiver((BroadcastReceiver)this.deviceEventsReceiver);
              }
-             catch (final Exception ex) {}
          }
--- 90,94 ----
              try {
!                 UtWallpaperService.this.unregisterReceiver(this.deviceEventsReceiver);
!             } catch (final Exception ignored) {
              }
          }
***************
*** 101,104 ****
          private void unregisterSensors() {
!             if (this.this$0.handlesGravity()) {
!                 this.sensorManager.unregisterListener((SensorEventListener)this.gravitySensorListener);
              }
--- 96,99 ----
          private void unregisterSensors() {
!             if (UtWallpaperService.this.handlesGravity()) {
!                 this.sensorManager.unregisterListener(this.gravitySensorListener);
              }
***************
*** 107,120 ****
          protected void initGravitySensor() {
!             final SensorManager sensorManager = this.sensorManager;
!             int gravitySensorType = 1;
!             if (sensorManager.getDefaultSensor(1) != null) {
!                 for (final Sensor sensor : this.sensorManager.getSensorList(1)) {
!                     final StringBuilder sb = new StringBuilder();
!                     sb.append("accelerometer sensor - vendor: ");
!                     sb.append(sensor.getVendor());
!                     sb.append(" version: ");
!                     sb.append(sensor.getVersion());
!                     sb.append(" power: ");
!                     sb.append(sensor.getPower());
!                     L.v(sb.toString());
                  }
--- 102,106 ----
          protected void initGravitySensor() {
!             if (this.sensorManager.getDefaultSensor(1) != null) {
!                 for (Sensor sensor : sensorManager.getSensorList(1)) {
!                     L.v("accelerometer sensor - vendor: " + sensor.getVendor() + " version: " + sensor.getVersion() + " power: " + sensor.getPower());
                  }
***************
*** 122,151 ****
              if (this.sensorManager.getDefaultSensor(9) != null) {
!                 for (final Sensor sensor2 : this.sensorManager.getSensorList(9)) {
!                     final StringBuilder sb2 = new StringBuilder();
!                     sb2.append("gravity sensor - vendor: ");
!                     sb2.append(sensor2.getVendor());
!                     sb2.append(" version: ");
!                     sb2.append(sensor2.getVersion());
!                     sb2.append(" power: ");
!                     sb2.append(sensor2.getPower());
!                     L.v(sb2.toString());
                  }
              }
!             if (this.sensorManager.getDefaultSensor(9) != null) {
!                 gravitySensorType = 9;
!             }
!             this.gravitySensorType = gravitySensorType;
!             final StringBuilder sb3 = new StringBuilder();
!             sb3.append("sensor type: ");
!             String str;
!             if (this.gravitySensorType == 9) {
!                 str = "gravity";
!             }
!             else {
!                 str = "accelerometer";
!             }
!             sb3.append(str);
!             L.v(sb3.toString());
!             this.gravitySensor = this.sensorManager.getDefaultSensor(this.gravitySensorType);
!             this.gravitySensorListener = new GravitySensorListener();
          }
--- 108,118 ----
              if (this.sensorManager.getDefaultSensor(9) != null) {
!                 for (Sensor sensor2 : sensorManager.getSensorList(9)) {
!                     L.v("gravity sensor - vendor: " + sensor2.getVendor() + " version: " + sensor2.getVersion() + " power: " + sensor2.getPower());
                  }
              }
!             this.gravitySensorType = sensorManager.getDefaultSensor(9) != null ? 9 : 1;
!             L.v("sensor type: " + (gravitySensorType == 9 ? "gravity" : "accelerometer"));
!             gravitySensor = sensorManager.getDefaultSensor(gravitySensorType);
!             gravitySensorListener = new GravitySensorListener();
! 
          }
***************
*** 163,181 ****
              super.onCreate(surfaceHolder);
!             if (GlUtil.supportsEs2((Context)App.get())) {
!                 ((GLEngine)this).setEGLContextClientVersion(2);
!                 ((GLEngine)this).setPreserveEGLContextOnPause(true);
!                 this.setTouchEventsEnabled(this.this$0.handlesTouchesAndGestures());
!                 this.setOffsetNotificationsEnabled(this.this$0.handlesTouchesAndGestures());
!                 (this.renderer = this.this$0.makeRenderer()).setEngine(this);
                  this.renderer.setIsPreview(this.isPreview());
!                 ((GLEngine)this).setRenderer((GLSurfaceView$Renderer)this.renderer);
!                 this.this$0.onWallpaperAttached(this.renderer);
                  this.registerReceivers();
!                 this.sensorManager = (SensorManager)this.this$0.getSystemService("sensor");
!                 if (this.this$0.handlesGravity()) {
                      this.initGravitySensor();
                  }
!                 this.keyMan = (KeyguardManager)this.this$0.getSystemService("keyguard");
!                 if (this.this$0.handlesTouchesAndGestures()) {
!                     this.gestureDetector = new GestureDetectorCompat((Context)this.this$0, (GestureDetector$OnGestureListener)new GestureListener());
                  }
--- 130,149 ----
              super.onCreate(surfaceHolder);
!             if (GlUtil.supportsEs2(App.get())) {
!                 this.setEGLContextClientVersion(2);
!                 this.setPreserveEGLContextOnPause(true);
!                 this.setTouchEventsEnabled(UtWallpaperService.this.handlesTouchesAndGestures());
!                 this.setOffsetNotificationsEnabled(UtWallpaperService.this.handlesTouchesAndGestures());
!                 this.renderer = UtWallpaperService.this.makeRenderer();
!                 this.renderer.setEngine(this);
                  this.renderer.setIsPreview(this.isPreview());
!                 this.setRenderer(this.renderer);
!                 UtWallpaperService.this.onWallpaperAttached(this.renderer);
                  this.registerReceivers();
!                 this.sensorManager = (SensorManager) UtWallpaperService.this.getSystemService(Context.SENSOR_SERVICE);
!                 if (UtWallpaperService.this.handlesGravity()) {
                      this.initGravitySensor();
                  }
!                 this.keyMan = (KeyguardManager) UtWallpaperService.this.getSystemService(Context.KEYGUARD_SERVICE);
!                 if (UtWallpaperService.this.handlesTouchesAndGestures()) {
!                     this.gestureDetector = new GestureDetectorCompat((Context) UtWallpaperService.this, new GestureListener());
                  }
***************
*** 185,187 ****
          }
!         
          @Override
--- 153,155 ----
          }
! 
          @Override
***************
*** 190,193 ****
              this.unregisterReceivers();
!             if (this.this$0.handlesGravity()) {
!                 this.sensorManager.unregisterListener((SensorEventListener)this.gravitySensorListener);
              }
--- 158,161 ----
              this.unregisterReceivers();
!             if (UtWallpaperService.this.handlesGravity()) {
!                 this.sensorManager.unregisterListener(this.gravitySensorListener);
              }
***************
*** 206,208 ****
          public void onTouchEvent(final MotionEvent motionEvent) {
!             if (this.this$0.handlesTouchesAndGestures()) {
                  if (this.renderer != null) {
--- 174,176 ----
          public void onTouchEvent(final MotionEvent motionEvent) {
!             if (UtWallpaperService.this.handlesTouchesAndGestures()) {
                  if (this.renderer != null) {
***************
*** 215,220 ****
          public void onVisibilityChanged(final boolean b) {
!             final StringBuilder sb = new StringBuilder();
!             sb.append("");
!             sb.append(b);
!             L.d(sb.toString());
              if (b) {
--- 183,185 ----
          public void onVisibilityChanged(final boolean b) {
!             L.d("" + b);
              if (b) {
***************
*** 235,285 ****
          
!         public class DeviceEventsReceiver extends BroadcastReceiver
!         {
!             final UtEngine this$1;
!             
!             public DeviceEventsReceiver(final UtEngine this$1) {
!                 this.this$1 = this$1;
!             }
!             
!             public void onReceive(final Context context, final Intent intent) {
!                 if (this.this$1.renderer == null) {
                      return;
                  }
!                 final String action = intent.getAction();
!                 int n = -1;
!                 final int hashCode = action.hashCode();
!                 if (hashCode != -2128145023) {
!                     if (hashCode != -1454123155) {
!                         if (hashCode == 823795052) {
!                             if (action.equals("android.intent.action.USER_PRESENT")) {
!                                 n = 2;
!                             }
                          }
!                     }
!                     else if (action.equals("android.intent.action.SCREEN_ON")) {
!                         n = 1;
!                     }
!                 }
!                 else if (action.equals("android.intent.action.SCREEN_OFF")) {
!                     n = 0;
!                 }
!                 if (n != 0) {
!                     if (n != 1) {
!                         if (n == 2) {
!                             TimeUtil.setUnlockTime();
!                             L.d("user_present");
!                             this.this$1.renderer.onUserPresent();
!                         }
!                     }
!                     else {
                          L.d("screen-on");
!                         this.this$1.renderer.onScreenOn();
!                     }
!                 }
!                 else {
!                     L.d("screen-off");
!                     if (this.this$1.this$0.handlesGravity()) {
!                         this.this$1.sensorManager.unregisterListener((SensorEventListener)this.this$1.gravitySensorListener);
!                     }
!                     this.this$1.renderer.onScreenOff();
                  }
--- 200,225 ----
          
!         public class DeviceEventsReceiver extends BroadcastReceiver {
!             @Override
!             public void onReceive(Context object, Intent intent) {
!                 if (renderer == null) {
                      return;
                  }
!                 switch (intent.getAction()) {
!                     case "android.intent.action.SCREEN_OFF":
!                         L.d("screen-off");
!                         if (handlesGravity()) {
!                             renderer.onScreenOff();
!                             sensorManager.unregisterListener(gravitySensorListener);
!                             break;
                          }
!                         renderer.onScreenOff();
!                         break;
!                     case "android.intent.action.SCREEN_ON":
                          L.d("screen-on");
!                         renderer.onScreenOn();
!                         break;
!                     case "android.intent.action.USER_PRESENT":
!                         L.d("user_present");
!                         renderer.onUserPresent();
!                         break;
                  }
***************
*** 287,299 ****
          }
!         
!         public class GestureListener extends GestureDetector$SimpleOnGestureListener
!         {
!             final UtEngine this$1;
!             
!             public GestureListener(final UtEngine this$1) {
!                 this.this$1 = this$1;
!             }
!             
              public boolean onFling(final MotionEvent motionEvent, final MotionEvent motionEvent2, final float n, final float n2) {
!                 this.this$1.renderer.onFling(motionEvent, motionEvent2, n, n);
                  return true;
--- 227,232 ----
          }
! 
!         public class GestureListener extends SimpleOnGestureListener {
              public boolean onFling(final MotionEvent motionEvent, final MotionEvent motionEvent2, final float n, final float n2) {
!                 UtEngine.this.renderer.onFling(motionEvent, motionEvent2, n, n);
                  return true;
***************
*** 301,311 ****
          }
!         
!         public class GravitySensorListener implements SensorEventListener
!         {
!             final UtEngine this$1;
!             
!             public GravitySensorListener(final UtEngine this$1) {
!                 this.this$1 = this$1;
!             }
!             
              public void onAccuracyChanged(final Sensor sensor, final int n) {
--- 234,237 ----
          }
! 
!         public class GravitySensorListener implements SensorEventListener {
              public void onAccuracyChanged(final Sensor sensor, final int n) {
***************
*** 314,324 ****
              public void onSensorChanged(final SensorEvent sensorEvent) {
!                 if (sensorEvent.sensor.getType() == this.this$1.gravitySensorType) {
!                     Util.adjustGravityVectorForDisplayRotation(this.this$1.displayRotation, sensorEvent.values, this.this$1.tempGrav);
!                     final float[] access$500 = this.this$1.tempGrav;
!                     access$500[0] /= 9.81f;
!                     final float[] access$501 = this.this$1.tempGrav;
!                     access$501[1] /= 9.81f;
!                     final float[] access$502 = this.this$1.tempGrav;
!                     access$502[2] /= 9.81f;
!                     this.this$1.renderer.onGravitySensor(this.this$1.tempGrav[0], this.this$1.tempGrav[1], this.this$1.tempGrav[2]);
                  }
--- 240,249 ----
              public void onSensorChanged(final SensorEvent sensorEvent) {
!                 if (sensorEvent.sensor.getType() == gravitySensorType) {
!                     Util.adjustGravityVectorForDisplayRotation(
!                             displayRotation,
!                             sensorEvent.values, tempGrav);
!                     renderer.onGravitySensor(
!                             tempGrav[0] / 9.81f,
!                             tempGrav[1] / 9.81f,
!                             tempGrav[2] / 9.81f);
                  }
diff '--context=1' --strip-trailing-cr -r app/src/main/java/com/ustwo/lwp/wallpapers/orbit/Configs.java new/src/main/java/com/ustwo/lwp/wallpapers/orbit/Configs.java
*** app/src/main/java/com/ustwo/lwp/wallpapers/orbit/Configs.java	Wed May  1 13:01:24 2024
--- new/src/main/java/com/ustwo/lwp/wallpapers/orbit/Configs.java	Wed May  1 21:23:06 2024
***************
*** 6,10 ****
  
! import android.app.WallpaperColors;
! import android.graphics.Color;
  import com.ustwo.lwp.util.ColUtil;
  
--- 6,10 ----
  
! import com.ustwo.lwp.R;
  import com.ustwo.lwp.util.ColUtil;
+ import static com.ustwo.lwp.util.ColUtil.newColors;
  
***************
*** 25,29 ****
          config1.backgroundRgb = ColUtil.stringToRgb("#efefef");
!         config1.circleTexture1440ResourceId = 2131165336;
!         config1.circleTexture1080ResourceId = 2131165335;
!         config1.wallpaperColors = new WallpaperColors(Color.valueOf(-1052689), (Color)null, (Color)null, 1);
          config1.dotRadius1440 = 20.0f;
--- 25,29 ----
          config1.backgroundRgb = ColUtil.stringToRgb("#efefef");
!         config1.circleTexture1440ResourceId = R.drawable.orbit_gradient_62_light_1440;
!         config1.circleTexture1080ResourceId = R.drawable.orbit_gradient_62_light_1080;
!         config1.wallpaperColors = newColors(0xffefefef, 1);
          config1.dotRadius1440 = 20.0f;
***************
*** 44,48 ****
          config2.backgroundRgb = ColUtil.stringToRgb("#343434");
!         config2.circleTexture1440ResourceId = 2131165340;
!         config2.circleTexture1080ResourceId = 2131165339;
!         config2.wallpaperColors = new WallpaperColors(Color.valueOf(-15724528), (Color)null, (Color)null, 2);
          config2.dotRadius1440 = 20.0f;
--- 44,48 ----
          config2.backgroundRgb = ColUtil.stringToRgb("#343434");
!         config2.circleTexture1440ResourceId = R.drawable.orbit_gradient_dark_616_1440;
!         config2.circleTexture1080ResourceId = R.drawable.orbit_gradient_dark_616_1080;
!         config2.wallpaperColors = newColors(0xff101010, 2);
          config2.dotRadius1440 = 20.0f;
***************
*** 63,67 ****
          config3.backgroundRgb = ColUtil.stringToRgb("#4C53FA");
!         config3.circleTexture1440ResourceId = 2131165338;
!         config3.circleTexture1080ResourceId = 2131165337;
!         config3.wallpaperColors = new WallpaperColors(Color.valueOf(-11774982), (Color)null, (Color)null, 0);
          config3.dotRadius1440 = 20.0f;
--- 63,67 ----
          config3.backgroundRgb = ColUtil.stringToRgb("#4C53FA");
!         config3.circleTexture1440ResourceId = R.drawable.orbit_gradient_blue_615_1440;
!         config3.circleTexture1080ResourceId = R.drawable.orbit_gradient_blue_615_1080;
!         config3.wallpaperColors = newColors(0xff4c53fa, 0);
          config3.dotRadius1440 = 20.0f;
***************
*** 75,76 ****
--- 75,77 ----
      }
+ 
  }
diff '--context=1' --strip-trailing-cr -r app/src/main/java/com/ustwo/lwp/wallpapers/orbit/OrbitProgram1.java new/src/main/java/com/ustwo/lwp/wallpapers/orbit/OrbitProgram1.java
*** app/src/main/java/com/ustwo/lwp/wallpapers/orbit/OrbitProgram1.java	Wed May  1 13:01:26 2024
--- new/src/main/java/com/ustwo/lwp/wallpapers/orbit/OrbitProgram1.java	Wed May  1 21:23:29 2024
***************
*** 9,10 ****
--- 9,11 ----
  import com.ustwo.lwp.App;
+ import com.ustwo.lwp.R;
  import com.ustwo.lwp.wallpapers.base.EasyQuad;
***************
*** 35,37 ****
      public OrbitProgram1() {
!         super((Context)App.get(), 2131558403, 2131558400);
          this.matrixUniformId = GLES20.glGetUniformLocation(super.programId, "uMatrix");
--- 36,38 ----
      public OrbitProgram1() {
!         super(App.get(), R.raw.orbit_vertex_shader, R.raw.orbit_fragment_shader_1);
          this.matrixUniformId = GLES20.glGetUniformLocation(super.programId, "uMatrix");
diff '--context=1' --strip-trailing-cr -r app/src/main/java/com/ustwo/lwp/wallpapers/orbit/OrbitProgram2.java new/src/main/java/com/ustwo/lwp/wallpapers/orbit/OrbitProgram2.java
*** app/src/main/java/com/ustwo/lwp/wallpapers/orbit/OrbitProgram2.java	Wed May  1 13:01:28 2024
--- new/src/main/java/com/ustwo/lwp/wallpapers/orbit/OrbitProgram2.java	Wed May  1 21:23:24 2024
***************
*** 9,10 ****
--- 9,11 ----
  import com.ustwo.lwp.App;
+ import com.ustwo.lwp.R;
  import com.ustwo.lwp.wallpapers.base.EasyQuad;
***************
*** 41,43 ****
      public OrbitProgram2() {
!         super((Context)App.get(), 2131558403, 2131558401);
          this.matrixUniformId = GLES20.glGetUniformLocation(super.programId, "uMatrix");
--- 42,44 ----
      public OrbitProgram2() {
!         super(App.get(), R.raw.orbit_vertex_shader, R.raw.orbit_fragment_shader_2);
          this.matrixUniformId = GLES20.glGetUniformLocation(super.programId, "uMatrix");
diff '--context=1' --strip-trailing-cr -r app/src/main/java/com/ustwo/lwp/wallpapers/orbit/OrbitPrograms.java new/src/main/java/com/ustwo/lwp/wallpapers/orbit/OrbitPrograms.java
*** app/src/main/java/com/ustwo/lwp/wallpapers/orbit/OrbitPrograms.java	Wed May  1 13:01:33 2024
--- new/src/main/java/com/ustwo/lwp/wallpapers/orbit/OrbitPrograms.java	Wed May  1 21:23:34 2024
***************
*** 22,26 ****
      private float circleOrbitRadius;
!     private PointF circlePos;
      private float circleRadius;
!     private int circleTextureId;
      private final Config config;
--- 22,26 ----
      private float circleOrbitRadius;
!     private final PointF circlePos;
      private float circleRadius;
!     private final int circleTextureId;
      private final Config config;
***************
*** 30,32 ****
      private float dotOrbitRadius;
!     private PointF dotPos;
      private float dotRadius;
--- 30,32 ----
      private float dotOrbitRadius;
!     private final PointF dotPos;
      private float dotRadius;
***************
*** 35,40 ****
      private final OrbitRenderer renderer;
!     private PointF scratchPt;
!     private RectF scratchRect;
      private float squareOrbitRadius;
!     private PointF squarePos;
      private float squareRadius;
--- 35,40 ----
      private final OrbitRenderer renderer;
!     private final PointF scratchPt;
!     private final RectF scratchRect;
      private float squareOrbitRadius;
!     private final PointF squarePos;
      private float squareRadius;
***************
*** 61,103 ****
          }
!         this.circleTextureId = TextureUtil.loadTexture((Context)App.get(), n, false);
      }
      
!     private void calcSquareBoundingRect(final float n, final float n2, float a, float min, final RectF rectF) {
!         final PointF scratchPt = this.scratchPt;
          scratchPt.x = a;
          scratchPt.y = a;
!         MathUtil.rotate(scratchPt, min, scratchPt);
!         final float min2 = Math.min(Float.MAX_VALUE, this.scratchPt.x);
!         final float min3 = Math.min(Float.MAX_VALUE, this.scratchPt.y);
!         final float max = Math.max(Float.MIN_VALUE, this.scratchPt.x);
!         final float max2 = Math.max(Float.MIN_VALUE, this.scratchPt.y);
!         final PointF scratchPt2 = this.scratchPt;
!         scratchPt2.x = a;
!         final float n3 = -a;
!         scratchPt2.y = n3;
!         MathUtil.rotate(scratchPt2, min, scratchPt2);
!         final float min4 = Math.min(min2, this.scratchPt.x);
!         final float min5 = Math.min(min3, this.scratchPt.y);
!         final float max3 = Math.max(max, this.scratchPt.x);
!         final float max4 = Math.max(max2, this.scratchPt.y);
!         final PointF scratchPt3 = this.scratchPt;
!         scratchPt3.x = n3;
!         scratchPt3.y = a;
!         MathUtil.rotate(scratchPt3, min, scratchPt3);
!         final float min6 = Math.min(min4, this.scratchPt.x);
!         final float min7 = Math.min(min5, this.scratchPt.y);
!         final float max5 = Math.max(max3, this.scratchPt.x);
!         a = Math.max(max4, this.scratchPt.y);
!         final PointF scratchPt4 = this.scratchPt;
!         scratchPt4.x = n3;
!         scratchPt4.y = n3;
!         MathUtil.rotate(scratchPt4, min, scratchPt4);
!         min = Math.min(min6, this.scratchPt.x);
!         final float min8 = Math.min(min7, this.scratchPt.y);
!         final float max6 = Math.max(max5, this.scratchPt.x);
!         a = Math.max(a, this.scratchPt.y);
          rectF.left = (float)Math.floor(min + n);
!         rectF.right = (float)Math.floor(n + max6);
!         rectF.top = (float)Math.ceil(min8 + n2);
!         rectF.bottom = (float)Math.ceil(n2 + a);
      }
--- 61,103 ----
          }
!         this.circleTextureId = TextureUtil.loadTexture(App.get(), n, false);
      }
      
!     private void calcSquareBoundingRect(final float n, final float n2, float a, float min13, final RectF rectF) {
          scratchPt.x = a;
          scratchPt.y = a;
!         float min,min1,max,max1;
!         MathUtil.rotate(scratchPt, min13, scratchPt);
!         min = Math.min(Float.MAX_VALUE, this.scratchPt.x);
!         min1 = Math.min(Float.MAX_VALUE, this.scratchPt.y);
!         max = Math.max(Float.MIN_VALUE, this.scratchPt.x);
!         max1 = Math.max(Float.MIN_VALUE, this.scratchPt.y);
! 
!         scratchPt.x = a;
!         scratchPt.y = -a;
!         MathUtil.rotate(scratchPt, min13, scratchPt);
!         min = Math.min(min, this.scratchPt.x);
!         min1 = Math.min(min1, this.scratchPt.y);
!         max = Math.max(max, this.scratchPt.x);
!         max1 = Math.max(max1, this.scratchPt.y);
! 
!         scratchPt.x = -a;
!         scratchPt.y = a;
!         MathUtil.rotate(scratchPt, min13, scratchPt);
!         min = Math.min(min, this.scratchPt.x);
!         min1 = Math.min(min1, this.scratchPt.y);
!         max = Math.max(max, this.scratchPt.x);
!         max1 = Math.max(max1, this.scratchPt.y);
! 
!         scratchPt.x = -a;
!         scratchPt.y = -a;
!         MathUtil.rotate(scratchPt, min13, scratchPt);
!         min = Math.min(min, this.scratchPt.x);
!         min1 = Math.min(min1, this.scratchPt.y);
!         max = Math.max(max, this.scratchPt.x);
!         max1 = Math.max(max1, this.scratchPt.y);
! 
          rectF.left = (float)Math.floor(min + n);
!         rectF.right = (float)Math.floor(n + max);
!         rectF.top = (float)Math.ceil(min1 + n2);
!         rectF.bottom = (float)Math.ceil(n2 + max1);
      }
***************
*** 128,131 ****
      private void updateSizes() {
!         final int n = OrbitPrograms$1.$SwitchMap$com$ustwo$lwp$wallpapers$orbit$OrbitRenderer$Phase[this.renderer.phase().ordinal()];
!         if (n != 1 && n != 2 && n != 3) {
              this.dotRadius = this.defaultDotRadius * MathUtil.lerp(this.renderer.offsetRatio(), 1.0f, 1.5f);
--- 128,132 ----
      private void updateSizes() {
!         if (renderer.phase() != OrbitRenderer.Phase.DRAGGING &&
!                 renderer.phase() != OrbitRenderer.Phase.FLINGING &&
!                 renderer.phase() != OrbitRenderer.Phase.LOCKED_RESTING ) {
              this.dotRadius = this.defaultDotRadius * MathUtil.lerp(this.renderer.offsetRatio(), 1.0f, 1.5f);
diff '--context=1' --strip-trailing-cr -r app/src/main/java/com/ustwo/lwp/wallpapers/orbit/OrbitRenderer.java new/src/main/java/com/ustwo/lwp/wallpapers/orbit/OrbitRenderer.java
*** app/src/main/java/com/ustwo/lwp/wallpapers/orbit/OrbitRenderer.java	Wed May  1 13:01:39 2024
--- new/src/main/java/com/ustwo/lwp/wallpapers/orbit/OrbitRenderer.java	Wed May  1 21:23:46 2024
***************
*** 19,20 ****
--- 19,24 ----
  import android.graphics.PointF;
+ 
+ import androidx.annotation.RequiresApi;
+ import android.os.Build;
+ 
  import com.ustwo.lwp.wallpapers.base.UtRenderer;
***************
*** 33,118 ****
      private OrbitPrograms programs;
!     private float targetOffsetRatio;
!     private Time time;
!     
      public OrbitRenderer() {
!         this.phase = Phase.RESTING;
          this.matrix = new float[16];
!         final OrbitTestSettings orbitTestSettings = App.get().orbitTestSettings;
!         int n = 0;
!         TimeUtil.setAccelerated(orbitTestSettings != null && App.get().orbitTestSettings.useAccelTime);
          this.time = new Time();
!         float n2;
!         if (App.get().orbitTestSettings != null && App.get().orbitTestSettings.presetTimeCode != null) {
!             final String presetTimeCode = App.get().orbitTestSettings.presetTimeCode;
!             Label_0257: {
!                 switch (presetTimeCode.hashCode()) {
!                     case 1509407:
!                         if (presetTimeCode.equals("1220")) {
!                             n = 4;
!                             break Label_0257;
!                         }
!                         break;
!                     case 1509345:
!                         if (presetTimeCode.equals("1200")) {
!                             n = 1;
!                             break Label_0257;
!                         }
!                         break;
!                     case 1507454:
!                         if (presetTimeCode.equals("1010")) {
!                             break Label_0257;
!                         }
!                         break;
!                     case 109270:
!                         if (presetTimeCode.equals("now")) {
!                             n = 5;
!                             break Label_0257;
!                         }
!                         break;
!                     case 55510:
!                         if (presetTimeCode.equals("853")) {
!                             n = 3;
!                             break Label_0257;
!                         }
!                         break;
!                     case 49653:
!                         if (presetTimeCode.equals("225")) {
!                             n = 2;
!                             break Label_0257;
!                         }
!                         break;
!                 }
!                 n = -1;
!             }
!             if (n != 0) {
!                 if (n != 1) {
!                     if (n != 2) {
!                         if (n != 3) {
!                             if (n != 4) {
!                                 n2 = TimeUtil.nowDayPercent();
!                             }
!                             else {
!                                 n2 = TimeUtil.dayPercentFromHoursMinutes(12, 19.9f);
!                             }
!                         }
!                         else {
!                             n2 = TimeUtil.dayPercentFromHoursMinutes(8, 53.4f);
!                         }
!                     }
!                     else {
!                         n2 = TimeUtil.dayPercentFromHoursMinutes(2, 24.95f);
!                     }
!                 }
!                 else {
!                     n2 = TimeUtil.dayPercentFromHoursMinutes(11, 59.9f);
!                 }
!             }
!             else {
!                 n2 = TimeUtil.dayPercentFromHoursMinutes(10, 9.75f);
              }
          }
!         else {
!             n2 = TimeUtil.nowDayPercent();
!         }
!         this.dayPercentOffset = TimeUtil.nowDayPercent() - n2;
      }
--- 37,70 ----
      private OrbitPrograms programs;
!     private final Time time;
      public OrbitRenderer() {
!         this.phase = OrbitRenderer.Phase.RESTING;
          this.matrix = new float[16];
!         OrbitTestSettings dbgSettings = App.get().orbitTestSettings;
!         TimeUtil.setAccelerated(dbgSettings != null && App.get().orbitTestSettings.useAccelTime);
          this.time = new Time();
!         float dbgTime;
!         if (dbgSettings != null && App.get().orbitTestSettings.presetTimeCode != null) {
!             switch (App.get().orbitTestSettings.presetTimeCode) {
!                 case "225":
!                     dbgTime = TimeUtil.dayPercentFromHoursMinutes(2, 24.95F);
!                     break;
!                 case "853":
!                     dbgTime = TimeUtil.dayPercentFromHoursMinutes(8, 53.4F);
!                     break;
!                 case "1010":
!                     dbgTime = TimeUtil.dayPercentFromHoursMinutes(10, 9.75F);
!                     break;
!                 case "1200":
!                     dbgTime = TimeUtil.dayPercentFromHoursMinutes(11, 59.9F);
!                     break;
!                 case "1220":
!                     dbgTime = TimeUtil.dayPercentFromHoursMinutes(12, 19.9F);
!                     break;
!                 default:
!                     dbgTime = TimeUtil.nowDayPercent();
              }
+         } else {
+             dbgTime = TimeUtil.nowDayPercent();
          }
!         this.dayPercentOffset = TimeUtil.nowDayPercent() - dbgTime;
      }
***************
*** 120,126 ****
      private void updateOffset() {
!         switch (OrbitRenderer$1.$SwitchMap$com$ustwo$lwp$wallpapers$orbit$OrbitRenderer$Phase[this.phase.ordinal()]) {
!             default:
                  return;
!             case 5:
!             case 6: {
                  if (this.dragPoint == null) {
--- 72,95 ----
      private void updateOffset() {
!         switch (this.phase) {
!             case DRAGGING:
!                 return;
!             case FLINGING:
!                 final float offsetVelocity4 = this.offsetVelocity;
!                 final float offsetRatio5 = this.offsetRatio;
!                 this.offsetVelocity = offsetVelocity4 + (offsetRatio5 - 1.0f) * 0.008f;
!                 this.offsetVelocity *= 0.85f;
!                 this.offsetRatio = offsetRatio5 - this.offsetVelocity;
!                 return;
!             case LOCKED_RESTING:
!                 this.offsetRatio = 1.0f;
!                 return;
!             case LOCK_ANIMIN:
!                 final float offsetVelocity3 = this.offsetVelocity;
!                 final float offsetRatio4 = this.offsetRatio;
!                 this.offsetVelocity = offsetVelocity3 + 0.008f * offsetRatio4;
!                 this.offsetVelocity *= 0.85f;
!                 this.offsetRatio = offsetRatio4 - this.offsetVelocity;
                  return;
!             case POST_DRAG:
!             case POST_FLING:
                  if (this.dragPoint == null) {
***************
*** 128,130 ****
                  }
!                 final float n = (float)133;
                  final float b = n / 1440.0f * this.viewportShortSide();
--- 97,99 ----
                  }
!                 final float n = (float) 133;
                  final float b = n / 1440.0f * this.viewportShortSide();
***************
*** 134,137 ****
                  final PointF downPoint = this.downPoint;
!                 this.targetOffsetRatio = Math.min(MathUtil.getLength((x - downPoint.x) * n2, (dragPoint.y - downPoint.y) * n2), b) / b;
!                 final float targetOffsetRatio = this.targetOffsetRatio;
                  final float offsetRatio = this.offsetRatio;
--- 103,106 ----
                  final PointF downPoint = this.downPoint;
!                 final float targetOffsetRatio =
!                         Math.min(MathUtil.getLength((x - downPoint.x) * n2, (dragPoint.y - downPoint.y) * n2), b) / b;
                  final float offsetRatio = this.offsetRatio;
***************
*** 139,152 ****
                  return;
!             }
!             case 1:
!                 return;
!             case 8: {
!                 final float offsetVelocity = this.offsetVelocity;
!                 final float offsetRatio2 = this.offsetRatio;
!                 this.offsetVelocity = offsetVelocity + 0.01f * offsetRatio2;
!                 this.offsetVelocity *= 0.85f;
!                 this.offsetRatio = offsetRatio2 - this.offsetVelocity;
!                 return;
!             }
!             case 7: {
                  final float offsetVelocity2 = this.offsetVelocity;
--- 108,110 ----
                  return;
!             case POST_LOCK:
                  final float offsetVelocity2 = this.offsetVelocity;
***************
*** 157,177 ****
                  return;
!             }
!             case 4: {
!                 final float offsetVelocity3 = this.offsetVelocity;
!                 final float offsetRatio4 = this.offsetRatio;
!                 this.offsetVelocity = offsetVelocity3 + 0.008f * offsetRatio4;
!                 this.offsetVelocity *= 0.85f;
!                 this.offsetRatio = offsetRatio4 - this.offsetVelocity;
!                 return;
!             }
!             case 3:
!                 this.offsetRatio = 1.0f;
!                 return;
!             case 2: {
!                 final float offsetVelocity4 = this.offsetVelocity;
!                 final float offsetRatio5 = this.offsetRatio;
!                 this.offsetVelocity = offsetVelocity4 + (offsetRatio5 - 1.0f) * 0.008f;
                  this.offsetVelocity *= 0.85f;
!                 this.offsetRatio = offsetRatio5 - this.offsetVelocity;
!             }
          }
--- 115,122 ----
                  return;
!             case RESTING:
!                 final float offsetVelocity = this.offsetVelocity;
!                 final float offsetRatio2 = this.offsetRatio;
!                 this.offsetVelocity = offsetVelocity + 0.01f * offsetRatio2;
                  this.offsetVelocity *= 0.85f;
!                 this.offsetRatio = offsetRatio2 - this.offsetVelocity;
          }
***************
*** 240,241 ****
--- 185,187 ----
      @Override
+     @RequiresApi(Build.VERSION_CODES.O_MR1)
      public WallpaperColors onComputeWallpaperColors() {
***************
*** 292,294 ****
          this.addChildNode(this.programs = new OrbitPrograms(this));
!         super.engine.notifyColorsChanged();
      }
--- 238,242 ----
          this.addChildNode(this.programs = new OrbitPrograms(this));
!         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O_MR1) {
!             super.engine.notifyColorsChanged();
!         }
      }
***************
*** 357,375 ****
      }
!     
!     public enum Phase
!     {
!         private static final Phase[] $VALUES;
!         
!         DRAGGING, 
!         FLINGING, 
!         LOCKED_RESTING, 
!         LOCK_ANIMIN, 
!         POST_DRAG, 
!         POST_FLING, 
!         POST_LOCK, 
!         RESTING;
!         
!         static {
!             $VALUES = new Phase[] { Phase.RESTING, Phase.DRAGGING, Phase.POST_DRAG, Phase.FLINGING, Phase.POST_FLING, Phase.LOCK_ANIMIN, Phase.LOCKED_RESTING, Phase.POST_LOCK };
!         }
      }
--- 305,316 ----
      }
! 
!     public enum Phase {
!         DRAGGING,
!         FLINGING,
!         LOCKED_RESTING,
!         LOCK_ANIMIN,
!         POST_DRAG,
!         POST_FLING,
!         POST_LOCK,
!         RESTING
      }
diff '--context=1' --strip-trailing-cr -r app/src/main/java/com/ustwo/lwp/wallpapers/shadow/Configs.java new/src/main/java/com/ustwo/lwp/wallpapers/shadow/Configs.java
*** app/src/main/java/com/ustwo/lwp/wallpapers/shadow/Configs.java	Wed May  1 13:01:52 2024
--- new/src/main/java/com/ustwo/lwp/wallpapers/shadow/Configs.java	Wed May  1 21:24:25 2024
***************
*** 6,9 ****
  
! import android.app.WallpaperColors;
! import android.graphics.Color;
  
--- 6,8 ----
  
! import static com.ustwo.lwp.util.ColUtil.newColors;
  
***************
*** 20,50 ****
          Configs.config1 = new Config(new String[] { "#b4b4b4", "#c8c8c8", "#d8d8d8", "#e2e2e2" }, "#f3f3f3");
-         final Config config1 = Configs.config1;
          config1.shadowAlpha = 1.0f;
          config1.highlightAlpha = 0.1f;
!         config1.wallpaperColors = new WallpaperColors(Color.valueOf(-2565928), (Color)null, (Color)null, 1);
          Configs.config2 = new Config(new String[] { "#25211b", "#312e29", "#413d37", "#4c4640" }, "#565049");
-         final Config config2 = Configs.config2;
          config2.shadowAlpha = 0.75f;
          config2.highlightAlpha = 0.02f;
!         config2.wallpaperColors = new WallpaperColors(Color.valueOf(-11778496), (Color)null, (Color)null, 2);
          Configs.config3 = new Config(new String[] { "#354186", "#40509f", "#475dad", "#556fce" }, "#5f80dd");
-         final Config config3 = Configs.config3;
          config3.shadowAlpha = 1.0f;
          config3.highlightAlpha = 0.05f;
!         config3.wallpaperColors = new WallpaperColors(Color.valueOf(-13287034), (Color)null, (Color)null, 0);
          Configs.config4 = new Config(new String[] { "#5e7774", "#6c8c89", "#86a8a3", "#9ec6c1" }, "#b4e6e1");
-         final Config config4 = Configs.config4;
          config4.shadowAlpha = 1.0f;
          config4.highlightAlpha = 0.1f;
!         config4.wallpaperColors = new WallpaperColors(Color.valueOf(-6371647), (Color)null, (Color)null, 0);
          Configs.config5 = new Config(new String[] { "#f8acaa", "#f4bdbd", "#f4cbcb", "#f2d7d7" }, "#efe4e4");
-         final Config config5 = Configs.config5;
          config5.shadowAlpha = 1.0f;
          config5.highlightAlpha = 0.1f;
!         config5.wallpaperColors = new WallpaperColors(Color.valueOf(-862249), (Color)null, (Color)null, 1);
          Configs.config6 = new Config(new String[] { "#141822", "#181e2c", "#21293a", "#2f3b51" }, "#364660");
-         final Config config6 = Configs.config6;
          config6.shadowAlpha = 1.0f;
          config6.highlightAlpha = 0.02f;
!         config6.wallpaperColors = new WallpaperColors(Color.valueOf(-13681839), (Color)null, (Color)null, 2);
      }
--- 19,43 ----
          Configs.config1 = new Config(new String[] { "#b4b4b4", "#c8c8c8", "#d8d8d8", "#e2e2e2" }, "#f3f3f3");
          config1.shadowAlpha = 1.0f;
          config1.highlightAlpha = 0.1f;
!         config1.wallpaperColors = newColors(0xffd8d8d8, 1);
          Configs.config2 = new Config(new String[] { "#25211b", "#312e29", "#413d37", "#4c4640" }, "#565049");
          config2.shadowAlpha = 0.75f;
          config2.highlightAlpha = 0.02f;
!         config2.wallpaperColors = newColors(0xff4c4640 ,2);
          Configs.config3 = new Config(new String[] { "#354186", "#40509f", "#475dad", "#556fce" }, "#5f80dd");
          config3.shadowAlpha = 1.0f;
          config3.highlightAlpha = 0.05f;
!         config3.wallpaperColors = newColors(0xff354186, 0);
          Configs.config4 = new Config(new String[] { "#5e7774", "#6c8c89", "#86a8a3", "#9ec6c1" }, "#b4e6e1");
          config4.shadowAlpha = 1.0f;
          config4.highlightAlpha = 0.1f;
!         config4.wallpaperColors = newColors(0xff9ec6c1, 0);
          Configs.config5 = new Config(new String[] { "#f8acaa", "#f4bdbd", "#f4cbcb", "#f2d7d7" }, "#efe4e4");
          config5.shadowAlpha = 1.0f;
          config5.highlightAlpha = 0.1f;
!         config5.wallpaperColors = newColors(0xfff2d7d7, 1);
          Configs.config6 = new Config(new String[] { "#141822", "#181e2c", "#21293a", "#2f3b51" }, "#364660");
          config6.shadowAlpha = 1.0f;
          config6.highlightAlpha = 0.02f;
!         config6.wallpaperColors = newColors(0xff2f3b51, 2);
      }
diff '--context=1' --strip-trailing-cr -r app/src/main/java/com/ustwo/lwp/wallpapers/shadow/ShadowProgram.java new/src/main/java/com/ustwo/lwp/wallpapers/shadow/ShadowProgram.java
*** app/src/main/java/com/ustwo/lwp/wallpapers/shadow/ShadowProgram.java	Wed May  1 13:02:00 2024
--- new/src/main/java/com/ustwo/lwp/wallpapers/shadow/ShadowProgram.java	Wed May  1 21:24:41 2024
***************
*** 28,29 ****
--- 28,30 ----
  
+ import com.ustwo.lwp.R;
  public class ShadowProgram extends ShaderProgram
***************
*** 87,89 ****
      public ShadowProgram(final ShadowRenderer renderer) {
!         super((Context)App.get(), 2131558405, 2131558404);
          this.dragOffsetVelocities = new PointF[4];
--- 88,90 ----
      public ShadowProgram(final ShadowRenderer renderer) {
!         super(App.get(), R.raw.shadow_vertex_shader, R.raw.shadow_fragment_shader);
          this.dragOffsetVelocities = new PointF[4];
***************
*** 160,314 ****
      
!     private PointF calcPositionOffset(final int a) {
!         boolean b = false;
!         final int max = Math.max(a, 0);
!         final float n = this.renderer.viewportShortSide() * 0.008f;
          this.scratch.x = MathUtil.map(this.tweeningGravity.x, -0.75f, 0.75f, 1.5707964f, -1.5707964f, true);
!         final PointF scratch = this.scratch;
!         scratch.x = (float)Math.sin(scratch.x);
!         final PointF scratch2 = this.scratch;
!         scratch2.x *= n;
!         float n2 = scratch2.x;
!         final float n3 = (float)(3 - max);
!         scratch2.x = n2 * n3;
!         scratch2.y = MathUtil.map(this.tweeningGravity.y, 0.0f, 1.0f, -1.5707964f, 0.7853982f, true);
!         final PointF scratch3 = this.scratch;
!         scratch3.y = (float)Math.sin(scratch3.y);
!         final PointF scratch4 = this.scratch;
!         scratch4.y *= n;
!         scratch4.y *= n3;
          this.renderer.isDragging();
!         float n4;
!         if (this.renderer.isDragging()) {
!             n4 = 0.72f;
!         }
!         else {
!             n4 = 0.8f;
!         }
          if (this.renderer.flingFactor() != 0.0f) {
!             if (System.currentTimeMillis() - this.renderer.upTime() < this.renderer.flingFactor() * 350.0f) {
!                 b = true;
              }
          }
!         Label_0431: {
!             if (!this.renderer.isDragging()) {
!                 break Label_0431;
!             }
!             Label_0381: {
!                 if (this.renderer.downPoint() == null || this.renderer.dragPoint() == null) {
!                     break Label_0381;
                  }
!                 final float n5 = (4 - a) * 0.03f;
!                 float x;
!                 ShadowProgram shadowProgram;
!                 ShadowRenderer shadowRenderer;
!                 PointF pointF;
!                 float n6;
!                 ShadowProgram shadowProgram2;
!                 ShadowRenderer shadowRenderer2;
!                 PointF pointF2;
!                 float n7;
!                 float n8;
!                 float n9;
!                 float n10;
!                 float n11;
!                 float n12;
!                 PointF[] dragOffsetVelocities;
!                 PointF pointF3;
!                 float x2;
!                 PointF[] dragOffsetTargets;
!                 PointF[] dragOffsets;
!                 PointF pointF4;
!                 PointF pointF5;
!                 PointF pointF6;
!                 PointF pointF7;
!                 PointF pointF8;
!                 PointF scratch5;
!                 PointF[] dragOffsetTargets2;
!                 Label_0461_Outer:Label_0376_Outer:
!                 while (true) {
!                     try {
!                         x = this.renderer.dragPoint().x;
!                         n2 = this.renderer.downPoint().x;
!                         n2 = (x - n2) * n5;
!                         shadowProgram = this;
!                         shadowRenderer = shadowProgram.renderer;
!                         pointF = shadowRenderer.dragPoint();
!                         n6 = pointF.y;
!                         shadowProgram2 = this;
!                         shadowRenderer2 = shadowProgram2.renderer;
!                         pointF2 = shadowRenderer2.downPoint();
!                         n7 = pointF2.y;
!                         n8 = n5;
!                         n9 = n6;
!                         n10 = n7;
!                         n11 = n9 - n10;
!                         n12 = n8 * n11;
!                         break Label_0385;
!                     }
!                     catch (final Exception ex) {
!                         n2 = 0.0f;
!                     }
!                     while (true) {
!                         try {
!                             shadowProgram = this;
!                             shadowRenderer = shadowProgram.renderer;
!                             pointF = shadowRenderer.dragPoint();
!                             n6 = pointF.y;
!                             shadowProgram2 = this;
!                             shadowRenderer2 = shadowProgram2.renderer;
!                             pointF2 = shadowRenderer2.downPoint();
!                             n7 = pointF2.y;
!                             n8 = n5;
!                             n9 = n6;
!                             n10 = n7;
!                             n11 = n9 - n10;
!                             n12 = n8 * n11;
!                             MathUtil.pointOnCircle(MathUtil.clamp(MathUtil.getLength(n2, n12), 0.0f, this.renderer.multiplier1440() * 27.5f * ((3 - a) / 3.0f)), MathUtil.getAngle(n2, n12), this.dragOffsetTargets[a]);
!                             while (true) {
!                                 dragOffsetVelocities = this.dragOffsetVelocities;
!                                 pointF3 = dragOffsetVelocities[a];
!                                 x2 = pointF3.x;
!                                 dragOffsetTargets = this.dragOffsetTargets;
!                                 n2 = dragOffsetTargets[a].x;
!                                 dragOffsets = this.dragOffsets;
!                                 pointF3.x = x2 + (n2 - dragOffsets[a].x) * 0.072f;
!                                 pointF4 = dragOffsetVelocities[a];
!                                 pointF4.y += (dragOffsetTargets[a].y - dragOffsets[a].y) * 0.072f;
!                                 pointF5 = dragOffsetVelocities[a];
!                                 pointF5.x *= n4;
!                                 pointF6 = dragOffsetVelocities[a];
!                                 pointF6.y *= n4;
!                                 pointF7 = dragOffsets[a];
!                                 pointF7.x += dragOffsetVelocities[a].x;
!                                 pointF8 = dragOffsets[a];
!                                 pointF8.y += dragOffsetVelocities[a].y;
!                                 scratch5 = this.scratch;
!                                 return new PointF(scratch5.x + dragOffsets[a].x, scratch5.y + dragOffsets[a].y);
!                                 n12 = 0.0f;
!                                 n2 = 0.0f;
!                                 continue Label_0461_Outer;
!                                 iftrue(Label_0439:)(!b);
!                                 Block_13: {
!                                     break Block_13;
!                                     Label_0439: {
!                                         dragOffsetTargets2 = this.dragOffsetTargets;
!                                     }
!                                     dragOffsetTargets2[a].x = 0.0f;
!                                     dragOffsetTargets2[a].y = 0.0f;
!                                     continue Label_0376_Outer;
!                                     n12 = 0.0f;
!                                     continue Label_0461_Outer;
!                                 }
!                                 continue Label_0376_Outer;
!                             }
!                         }
!                         catch (final Exception ex2) {
!                             continue;
!                         }
!                         break;
!                     }
!                     break;
                  }
              }
!         }
      }
--- 161,238 ----
      
!     private PointF calcPositionOffset(final int i) {
!         float f;
!         float f2;
!         boolean z = false;
!         int max = 3 - Math.max(i, 0);
!         float viewportShortSide = this.renderer.viewportShortSide() * 0.008f;
          this.scratch.x = MathUtil.map(this.tweeningGravity.x, -0.75f, 0.75f, 1.5707964f, -1.5707964f, true);
!         this.scratch.x = (float) Math.sin(this.scratch.x);
!         PointF pointF = this.scratch;
!         pointF.x *= viewportShortSide;
!         pointF.x *= (float) max;
!         pointF.y = MathUtil.map(this.tweeningGravity.y, 0.0f, 1.0f, -1.5707964f, 0.7853982f, true);
!         this.scratch.y = (float) Math.sin(this.scratch.y);
!         PointF pointF2 = this.scratch;
!         pointF2.y *= viewportShortSide;
!         pointF2.y *= (float) max;
          this.renderer.isDragging();
!         float f4 = this.renderer.isDragging() ? 0.72f : 0.8f;
          if (this.renderer.flingFactor() != 0.0f) {
!             if (((float) (System.currentTimeMillis() - this.renderer.upTime())) < this.renderer.flingFactor() * 350.0f) {
!                 z = true;
              }
          }
!         if (this.renderer.isDragging()) {
!             if (this.renderer.downPoint() == null || this.renderer.dragPoint() == null) {
!                 f = 0.0f;
!                 f2 = 0.0f;
!             } else {
!                 float f5 = (4 - i) * 0.03f;
!                 try {
!                     f2 = (this.renderer.dragPoint().x - this.renderer.downPoint().x) * f5;
!                 } catch (Exception unused) {
!                     f2 = 0.0f;
                  }
!                 try {
!                     f = f5 * (this.renderer.dragPoint().y - this.renderer.downPoint().y);
!                 } catch (Exception unused2) {
!                     f = 0.0f;
!                     MathUtil.pointOnCircle(MathUtil.clamp(MathUtil.getLength(f2, f), 0.0f, this.renderer.multiplier1440() * 27.5f * ((3 - i) / 3.0f)), MathUtil.getAngle(f2, f), this.dragOffsetTargets[i]);
!                     PointF[] pointFArr = this.dragOffsetVelocities;
!                     PointF pointF3 = pointFArr[i];
!                     float f6 = pointF3.x;
!                     PointF[] pointFArr2 = this.dragOffsetTargets;
!                     float f7 = pointFArr2[i].x;
!                     PointF[] pointFArr3 = this.dragOffsets;
!                     pointF3.x = f6 + ((f7 - pointFArr3[i].x) * 0.072f);
!                     pointFArr[i].y += (pointFArr2[i].y - pointFArr3[i].y) * 0.072f;
!                     pointFArr[i].x *= f4;
!                     pointFArr[i].y *= f4;
!                     pointFArr3[i].x += pointFArr[i].x;
!                     pointFArr3[i].y += pointFArr[i].y;
!                     PointF pointF4 = this.scratch;
!                     return new PointF(pointF4.x + pointFArr3[i].x, pointF4.y + pointFArr3[i].y);
                  }
              }
!             MathUtil.pointOnCircle(MathUtil.clamp(MathUtil.getLength(f2, f), 0.0f, this.renderer.multiplier1440() * 27.5f * ((3 - i) / 3.0f)), MathUtil.getAngle(f2, f), this.dragOffsetTargets[i]);
!         } else if (!z) {
!             PointF[] pointFArr4 = this.dragOffsetTargets;
!             pointFArr4[i].x = 0.0f;
!             pointFArr4[i].y = 0.0f;
!         }
!         PointF[] pointFArr5 = this.dragOffsetVelocities;
!         PointF pointF32 = pointFArr5[i];
!         float f62 = pointF32.x;
!         PointF[] pointFArr22 = this.dragOffsetTargets;
!         float f72 = pointFArr22[i].x;
!         PointF[] pointFArr32 = this.dragOffsets;
!         pointF32.x = f62 + ((f72 - pointFArr32[i].x) * 0.072f);
!         pointFArr5[i].y += (pointFArr22[i].y - pointFArr32[i].y) * 0.072f;
!         pointFArr5[i].x *= f4;
!         pointFArr5[i].y *= f4;
!         pointFArr32[i].x += pointFArr5[i].x;
!         pointFArr32[i].y += pointFArr5[i].y;
!         PointF pointF42 = this.scratch;
!         return new PointF(pointF42.x + pointFArr32[i].x, pointF42.y + pointFArr32[i].y);
! 
      }
***************
*** 317,322 ****
          final int[] mainColors = this.config.mainColors;
!         final int length = mainColors.length;
!         int i = 0;
!         int n = 0;
!         while (i < length) {
              final float[] intToRgb = ColUtil.intToRgb(mainColors[i]);
--- 241,244 ----
          final int[] mainColors = this.config.mainColors;
!         int n;
!         for (int length = mainColors.length, i = n = 0; i < length; ++i) {
              final float[] intToRgb = ColUtil.intToRgb(mainColors[i]);
***************
*** 328,330 ****
              n += 4;
-             ++i;
          }
--- 250,251 ----
***************
*** 388,390 ****
          for (int i = 0; i < 4; ++i) {
!             final int intValue = (int)new ArgbEvaluator().evaluate(baseShadowAlpha * calcOscillationAlphaFactor, (Object)Integer.valueOf(this.config.mainColors[i]), (Object)Integer.valueOf(ColUtil.multiply(this.config.mainColors[i], rgbToInt)));
              final float[] shadowColor = this.shadowColor;
--- 309,311 ----
          for (int i = 0; i < 4; ++i) {
!             final int intValue = (int)new ArgbEvaluator().evaluate(baseShadowAlpha * calcOscillationAlphaFactor, this.config.mainColors[i], ColUtil.multiply(this.config.mainColors[i], rgbToInt));
              final float[] shadowColor = this.shadowColor;
***************
*** 631,642 ****
          if (App.get().shadowTestSettings != null && App.get().shadowTestSettings.useFastRandomWeather) {
!             new Handler(Looper.getMainLooper()).post((Runnable)new Runnable(this, result) {
!                 final ShadowProgram this$0;
!                 final WeatherVo val$vo;
!                 
                  @Override
                  public void run() {
!                     final StringBuilder sb = new StringBuilder();
!                     sb.append("simulated weather: ");
!                     sb.append(WeatherVo.conditionString(this.val$vo.conditions[0]));
!                     Toast.makeText((Context)App.get(), (CharSequence)sb.toString(), 0).show();
                  }
--- 552,558 ----
          if (App.get().shadowTestSettings != null && App.get().shadowTestSettings.useFastRandomWeather) {
!             new Handler(Looper.getMainLooper()).post((Runnable) new Runnable() {
                  @Override
                  public void run() {
!                     String sb = "simulated weather: " + WeatherVo.conditionString(result.conditions[0]);
!                     Toast.makeText(App.get(), sb, Toast.LENGTH_SHORT).show();
                  }
diff '--context=1' --strip-trailing-cr -r app/src/main/java/com/ustwo/lwp/wallpapers/shadow/ShadowRenderer.java new/src/main/java/com/ustwo/lwp/wallpapers/shadow/ShadowRenderer.java
*** app/src/main/java/com/ustwo/lwp/wallpapers/shadow/ShadowRenderer.java	Wed May  1 13:02:05 2024
--- new/src/main/java/com/ustwo/lwp/wallpapers/shadow/ShadowRenderer.java	Wed May  1 21:25:05 2024
***************
*** 6,7 ****
--- 6,9 ----
  
+ import android.os.Build;
+ import androidx.annotation.RequiresApi;
  import com.ustwo.lwp.wallpapers.base.RenderNode;
***************
*** 49,60 ****
      public ShadowRenderer() {
-         final boolean b = true;
          this.isResting = true;
          this.weatherBroadcastReceiver = new BroadcastReceiver() {
-             final ShadowRenderer this$0;
-             
              public void onReceive(final Context context, final Intent intent) {
                  final boolean booleanExtra = intent.getBooleanExtra("weather_result", false);
!                 if (this.this$0.program != null && booleanExtra) {
                      L.v("ok");
!                     this.this$0.program.updateWeatherDependentParams();
                  }
--- 51,59 ----
      public ShadowRenderer() {
          this.isResting = true;
          this.weatherBroadcastReceiver = new BroadcastReceiver() {
              public void onReceive(final Context context, final Intent intent) {
                  final boolean booleanExtra = intent.getBooleanExtra("weather_result", false);
!                 if (ShadowRenderer.this.program != null && booleanExtra) {
                      L.v("ok");
!                     ShadowRenderer.this.program.updateWeatherDependentParams();
                  }
***************
*** 66,69 ****
          super.gravity.set(ShadowRenderer.RESTING_GRAVITY);
!         LocalBroadcastManager.getInstance((Context)App.get()).registerReceiver(this.weatherBroadcastReceiver, new IntentFilter("weather_result"));
!         this.isOscillationDisabled = (App.get().shadowTestSettings != null && App.get().shadowTestSettings.isPulseDisabled && b);
      }
--- 65,68 ----
          super.gravity.set(ShadowRenderer.RESTING_GRAVITY);
!         LocalBroadcastManager.getInstance(App.get()).registerReceiver(this.weatherBroadcastReceiver, new IntentFilter("weather_result"));
!         this.isOscillationDisabled = App.get().shadowTestSettings != null && App.get().shadowTestSettings.isPulseDisabled;
      }
***************
*** 105,107 ****
          final ShadowProgram program = this.program;
!         int n = 1;
          if (program == null) {
--- 104,106 ----
          final ShadowProgram program = this.program;
!         final int n = 1;
          if (program == null) {
***************
*** 110,127 ****
          final float unlockTransitionProgress = this.unlockTransitionProgress();
!         final int n2 = 3;
!         if (unlockTransitionProgress <= 0.0f || this.unlockTransitionProgress() >= 1.0f) {
!             if (!this.isResting) {
!                 n = n2;
!             }
!             else if (this.isDragging()) {
!                 n = n2;
!             }
!             else if (this.program.checkAndClearUpdateFlag()) {
!                 n = n2;
!             }
!             else {
!                 n = 20;
              }
          }
!         return n;
      }
--- 109,122 ----
          final float unlockTransitionProgress = this.unlockTransitionProgress();
!         int n2 = 3;
!         if (unlockTransitionProgress > 0.0f && this.unlockTransitionProgress() < 1.0f) {
!             n2 = n;
!         }
!         else if (this.isResting) {
!             if (!this.isDragging()) {
!                 if (!this.program.checkAndClearUpdateFlag()) {
!                     n2 = 20;
!                 }
              }
          }
!         return n2;
      }
***************
*** 137,138 ****
--- 132,134 ----
      @Override
+     @RequiresApi(Build.VERSION_CODES.O_MR1)
      public WallpaperColors onComputeWallpaperColors() {
***************
*** 153,156 ****
      @Override
!     protected void onFling(final MotionEvent motionEvent, final MotionEvent motionEvent2, float clamp, float f) {
!         f = new PointF(clamp, f).length() / ViewConfiguration.get((Context)App.get()).getScaledMaximumFlingVelocity();
          if (f < 0.05f) {
--- 149,152 ----
      @Override
!     protected void onFling(final MotionEvent motionEvent, final MotionEvent motionEvent2, float f, float clamp) {
!         f = new PointF(f, clamp).length() / ViewConfiguration.get((Context)App.get()).getScaledMaximumFlingVelocity();
          if (f < 0.05f) {
***************
*** 227,229 ****
          this.program = new ShadowProgram(this);
!         super.engine.notifyColorsChanged();
          this.addChildNode(this.program);
--- 223,227 ----
          this.program = new ShadowProgram(this);
!         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O_MR1) {
!             super.engine.notifyColorsChanged();
!         }
          this.addChildNode(this.program);
diff '--context=1' --strip-trailing-cr -r app/src/main/java/com/ustwo/lwp/wallpapers/shadow/ShadowTestSettings.java new/src/main/java/com/ustwo/lwp/wallpapers/shadow/ShadowTestSettings.java
*** app/src/main/java/com/ustwo/lwp/wallpapers/shadow/ShadowTestSettings.java	Wed May  1 13:02:09 2024
--- new/src/main/java/com/ustwo/lwp/wallpapers/shadow/ShadowTestSettings.java	Wed May  1 21:25:10 2024
***************
*** 16,19 ****
      {
-         private static final TimeType[] $VALUES;
-         
          DAYTIME, 
--- 16,17 ----
***************
*** 21,26 ****
          SUNRISE_SUNSET;
-         
-         static {
-             $VALUES = new TimeType[] { TimeType.DAYTIME, TimeType.SUNRISE_SUNSET, TimeType.NIGHTTIME };
-         }
      }
--- 19,20 ----
diff '--context=1' --strip-trailing-cr -r app/src/main/java/com/ustwo/lwp/wallpapers/shadow/ShadowWallpaperService.java new/src/main/java/com/ustwo/lwp/wallpapers/shadow/ShadowWallpaperService.java
*** app/src/main/java/com/ustwo/lwp/wallpapers/shadow/ShadowWallpaperService.java	Wed May  1 13:02:13 2024
--- new/src/main/java/com/ustwo/lwp/wallpapers/shadow/ShadowWallpaperService.java	Wed May  1 21:25:17 2024
***************
*** 6,9 ****
  
! import com.ustwo.lwp.wallpapers.PermissionsActivity;
! import android.content.IntentFilter;
  import androidx.localbroadcastmanager.content.LocalBroadcastManager;
--- 6,11 ----
  
! import android.Manifest;
! import android.os.Build;
! import androidx.core.content.PermissionChecker;
! import com.google.android.gms.common.GoogleApiAvailability;
  import androidx.localbroadcastmanager.content.LocalBroadcastManager;
***************
*** 20,21 ****
--- 22,25 ----
  
+ import static com.google.android.gms.common.ConnectionResult.SUCCESS;
+ 
  public abstract class ShadowWallpaperService extends UtWallpaperService
***************
*** 29,41 ****
          this.permissionReceiver = new BroadcastReceiver() {
-             final ShadowWallpaperService this$0;
-             
              public void onReceive(final Context context, final Intent intent) {
!                 final boolean b = ContextCompat.checkSelfPermission((Context)this.this$0, "android.permission.ACCESS_FINE_LOCATION") == 0;
!                 final StringBuilder sb = new StringBuilder();
!                 sb.append("got this - has permission? ");
!                 sb.append(b);
!                 L.v(sb.toString());
                  if (b) {
!                     this.this$0.weatherMan.start();
!                     this.this$0.sunriseUtil.get();
                  }
--- 33,42 ----
          this.permissionReceiver = new BroadcastReceiver() {
              public void onReceive(final Context context, final Intent intent) {
!                 final boolean b = ContextCompat.checkSelfPermission(
!                         ShadowWallpaperService.this,
!                         Manifest.permission.ACCESS_FINE_LOCATION) == 0;
!                 L.v("got this - has permission? " + b);
                  if (b) {
!                     ShadowWallpaperService.this.weatherMan.start();
!                     ShadowWallpaperService.this.sunriseUtil.get();
                  }
***************
*** 53,62 ****
          }
!         LocalBroadcastManager.getInstance((Context)App.get()).registerReceiver(this.permissionReceiver, new IntentFilter("permission_result"));
!         final boolean b = ContextCompat.checkSelfPermission((Context)this, "android.permission.ACCESS_FINE_LOCATION") == 0;
!         final StringBuilder sb = new StringBuilder();
!         sb.append("has fine location permissions? ");
!         sb.append(b);
!         L.d(sb.toString());
!         if (!b) {
!             PermissionsActivity.launchActivity((Context)this, 1);
          }
--- 54,80 ----
          }
!         boolean hasPermission = ContextCompat.checkSelfPermission(this,
!                 Manifest.permission.ACCESS_COARSE_LOCATION
!         ) == PermissionChecker.PERMISSION_GRANTED;
!         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {
!             hasPermission |=  ContextCompat.checkSelfPermission(
!                     this,
!                     Manifest.permission.ACCESS_BACKGROUND_LOCATION
!             ) == PermissionChecker.PERMISSION_GRANTED;
!         }
!         boolean isGoogleAvailable = false;
!         try {
!             int checkResult = GoogleApiAvailability.getInstance().isGooglePlayServicesAvailable(App.get());
!             isGoogleAvailable = (checkResult == SUCCESS);
!         } catch (NoClassDefFoundError ignored) {
!         }
!         if (!isGoogleAvailable) {
!             hasPermission |=  ContextCompat.checkSelfPermission(
!                     this,
!                     Manifest.permission.ACCESS_FINE_LOCATION
!             ) == PermissionChecker.PERMISSION_GRANTED;
!         }
!         L.d("has fine location permissions? " + hasPermission);
!         if (hasPermission) {
!             weatherMan.start();
!             sunriseUtil.get();
          }
***************
*** 95,97 ****
          super.onDestroy();
!         this.weatherMan.stop();
          LocalBroadcastManager.getInstance((Context)App.get()).unregisterReceiver(this.permissionReceiver);
--- 113,115 ----
          super.onDestroy();
!         this.weatherMan.destroy();
          LocalBroadcastManager.getInstance((Context)App.get()).unregisterReceiver(this.permissionReceiver);
diff '--context=1' --strip-trailing-cr -r app/src/main/java/com/ustwo/lwp/wallpapers/timelapse/GradientSet.java new/src/main/java/com/ustwo/lwp/wallpapers/timelapse/GradientSet.java
*** app/src/main/java/com/ustwo/lwp/wallpapers/timelapse/GradientSet.java	Wed May  1 13:02:29 2024
--- new/src/main/java/com/ustwo/lwp/wallpapers/timelapse/GradientSet.java	Mon Apr 29 14:25:40 2024
***************
*** 1,4 ****
- // 
- // Decompiled by Procyon v0.6.0
- // 
  
--- 1 ----
***************
*** 9,11 ****
  import com.ustwo.lwp.util.Terps;
- import java.util.Collection;
  import java.util.ArrayList;
--- 6,7 ----
***************
*** 17,32 ****
      private static final String[] labels;
!     private Range dawn;
!     private Range dawnToSunrise;
!     private Range daytime;
!     private Range daytimeToSunset;
!     private Range dusk;
!     private Range duskToNight;
!     private List<Gradient> list;
!     private Range night1;
!     private Range night2;
!     private Range nightToDawn;
!     private Range sunrise;
!     private Range sunriseToDaytime;
!     private Range sunset;
!     private Range sunsetToDusk;
      
--- 13,28 ----
      private static final String[] labels;
!     private final Range dawn;
!     private final Range dawnToSunrise;
!     private final Range daytime;
!     private final Range daytimeToSunset;
!     private final Range dusk;
!     private final Range duskToNight;
!     private final List<Gradient> list;
!     private final Range night1;
!     private final Range night2;
!     private final Range nightToDawn;
!     private final Range sunrise;
!     private final Range sunriseToDaytime;
!     private final Range sunset;
!     private final Range sunsetToDusk;
      
***************
*** 50,105 ****
          this.night2 = new Range();
!         this.list = new ArrayList<Gradient>(Arrays.asList(gradient, gradient2, gradient3, gradient4, gradient5, gradient6));
      }
!     
!     public float calcSlidingIndex(float n) {
!         final boolean contains = this.night1.contains(n);
!         final float n2 = 5.0f;
!         if (!contains) {
!             if (this.nightToDawn.contains(n)) {
!                 n = this.nightToDawn.normalize(n) + 0.0f;
!                 return n;
!             }
!             if (this.dawn.contains(n)) {
!                 n = 1.0f;
!                 return n;
!             }
!             if (this.dawnToSunrise.contains(n)) {
!                 n = this.dawnToSunrise.normalize(n) + 1.0f;
!                 return n;
!             }
!             if (this.sunrise.contains(n)) {
!                 n = 2.0f;
!                 return n;
!             }
!             if (this.sunriseToDaytime.contains(n)) {
!                 n = this.sunriseToDaytime.normalize(n) + 2.0f;
!                 return n;
!             }
!             if (this.daytime.contains(n)) {
!                 n = 3.0f;
!                 return n;
!             }
!             if (this.daytimeToSunset.contains(n)) {
!                 n = this.daytimeToSunset.normalize(n) + 3.0f;
!                 return n;
!             }
!             if (this.sunset.contains(n)) {
!                 n = 4.0f;
!                 return n;
!             }
!             if (this.sunsetToDusk.contains(n)) {
!                 n = this.sunsetToDusk.normalize(n) + 4.0f;
!                 return n;
!             }
!             if (this.dusk.contains(n)) {
!                 n = n2;
!                 return n;
!             }
!             if (this.duskToNight.contains(n)) {
!                 n = 5.0f + this.duskToNight.normalize(n);
!                 return n;
!             }
          }
!         n = 0.0f;
!         return n;
      }
--- 46,88 ----
          this.night2 = new Range();
!         this.list = new ArrayList<>(Arrays.asList(gradient, gradient2, gradient3, gradient4, gradient5, gradient6));
      }
! 
!     public float calcSlidingIndex(float timeValue) {
!         if (this.night1.contains(timeValue)) {
!             return 0.0f;
!         }
!         if (this.nightToDawn.contains(timeValue)) {
!             return this.nightToDawn.normalize(timeValue) + 0.0f;
!         }
!         if (this.dawn.contains(timeValue)) {
!             return 1.0f;
!         }
!         if (this.dawnToSunrise.contains(timeValue)) {
!             return this.dawnToSunrise.normalize(timeValue) + 1.0f;
!         }
!         if (this.sunrise.contains(timeValue)) {
!             return 2.0f;
!         }
!         if (this.sunriseToDaytime.contains(timeValue)) {
!             return this.sunriseToDaytime.normalize(timeValue) + 2.0f;
!         }
!         if (this.daytime.contains(timeValue)) {
!             return 3.0f;
!         }
!         if (this.daytimeToSunset.contains(timeValue)) {
!             return this.daytimeToSunset.normalize(timeValue) + 3.0f;
          }
!         if (this.sunset.contains(timeValue)) {
!             return 4.0f;
!         }
!         if (this.sunsetToDusk.contains(timeValue)) {
!             return this.sunsetToDusk.normalize(timeValue) + 4.0f;
!         }
!         if (this.dusk.contains(timeValue)) {
!             return 5.0f;
!         }
!         if (this.duskToNight.contains(timeValue)) {
!             return 5.0f + this.duskToNight.normalize(timeValue);
!         }
!         return 0.0f;
      }
***************
*** 109,132 ****
      }
!     
!     public void lerpUsingSlidingIndex(float interpolation, final boolean b, final Gradient gradient) {
!         float n = interpolation;
!         if (b) {
!             interpolation += GradientSetManager.oscillationOffset();
!             if (interpolation < 0.0f) {
!                 n = interpolation + 6.0f;
!             }
!             else {
!                 n = interpolation;
!                 if (interpolation >= 6.0f) {
!                     n = interpolation - 6.0f;
!                 }
!             }
!         }
!         final int n2 = (int)n;
!         int n3;
!         if ((n3 = (int)(n + 1.0f)) >= 6) {
!             n3 = 0;
!         }
!         interpolation = Terps.inOut().getInterpolation(n % 1.0f);
!         Gradient.lerp(this.list.get(n2), this.list.get(n3), interpolation, gradient);
      }
--- 92,107 ----
      }
!     public void lerpUsingSlidingIndex(final float f,boolean b, Gradient gradient) {
!        float t = f + GradientSetManager.oscillationOffset();
!        if (b) {
!            if (t < 0.0f) {
!                t += 6.0f;
!            } else if (t >= 6.0f) {
!                t -= 6.0f;
!            }
!        }
!         int i = (int) (t + 1.0f);
!         Gradient.lerp(
!                 this.list.get((int) t),
!                 this.list.get(i >= 6 ? 0 : i),
!                 Terps.inOut().getInterpolation(t % 1.0f), gradient);
      }
***************
*** 136,174 ****
      }
!     
      public void updateRanges() {
!         final float sunriseDayPercent = TimeUtil.sunriseDayPercent();
!         final float sunsetDayPercent = TimeUtil.sunsetDayPercent();
!         final Range night1 = this.night1;
!         final float n = sunriseDayPercent - 0.041666668f;
!         night1.set(0.0f, n);
!         final Range nightToDawn = this.nightToDawn;
!         final float n2 = sunriseDayPercent - 0.027777778f;
!         nightToDawn.set(n, n2);
!         final Range dawn = this.dawn;
!         final float n3 = sunriseDayPercent - 0.013888889f;
!         dawn.set(n2, n3);
!         this.dawnToSunrise.set(n3, sunriseDayPercent - 0.0f);
!         final Range sunrise = this.sunrise;
!         final float n4 = sunriseDayPercent + 0.013888889f;
!         sunrise.set(sunriseDayPercent + 0.0f, n4);
!         final Range sunriseToDaytime = this.sunriseToDaytime;
!         final float n5 = sunriseDayPercent + 0.027777778f;
!         sunriseToDaytime.set(n4, n5);
!         final Range daytime = this.daytime;
!         final float n6 = sunsetDayPercent - 0.027777778f;
!         daytime.set(n5, n6);
!         final Range daytimeToSunset = this.daytimeToSunset;
!         final float n7 = sunsetDayPercent - 0.013888889f;
!         daytimeToSunset.set(n6, n7);
!         this.sunset.set(n7, sunsetDayPercent - 0.0f);
!         final Range sunsetToDusk = this.sunsetToDusk;
!         final float n8 = 0.013888889f + sunsetDayPercent;
!         sunsetToDusk.set(0.0f + sunsetDayPercent, n8);
!         final Range dusk = this.dusk;
!         final float n9 = 0.027777778f + sunsetDayPercent;
!         dusk.set(n8, n9);
!         final Range duskToNight = this.duskToNight;
!         final float n10 = sunsetDayPercent + 0.041666668f;
!         duskToNight.set(n9, n10);
!         this.night2.set(n10, 1.01f);
      }
--- 111,139 ----
      }
! 
      public void updateRanges() {
!         float sunriseDayPercent = TimeUtil.sunriseDayPercent();
!         float sunsetDayPercent = TimeUtil.sunsetDayPercent();
!         float night = sunriseDayPercent - 0.041666668f;
!         this.night1.set(0.0f, night);
!         float nightToDawn = sunriseDayPercent - 0.027777778f;
!         this.nightToDawn.set(night, nightToDawn);
!         float dawn = sunriseDayPercent - 0.013888889f;
!         this.dawn.set(nightToDawn, dawn);
!         this.dawnToSunrise.set(dawn, sunriseDayPercent - 0.0f);
!         float sunrise = sunriseDayPercent + 0.013888889f;
!         this.sunrise.set(sunriseDayPercent + 0.0f, sunrise);
!         float sunriseToDaytime = sunriseDayPercent + 0.027777778f;
!         this.sunriseToDaytime.set(sunrise, sunriseToDaytime);
!         float daytime = sunsetDayPercent - 0.027777778f;
!         this.daytime.set(sunriseToDaytime, daytime);
!         float daytimeToSunset = sunsetDayPercent - 0.013888889f;
!         this.daytimeToSunset.set(daytime, daytimeToSunset);
!         this.sunset.set(daytimeToSunset, sunsetDayPercent - 0.0f);
!         float sunsetToDusk = 0.013888889f + sunsetDayPercent;
!         this.sunsetToDusk.set(0.0f + sunsetDayPercent, sunsetToDusk);
!         float dusk = 0.027777778f + sunsetDayPercent;
!         this.dusk.set(sunsetToDusk, dusk);
!         float duskToNight = sunsetDayPercent + 0.041666668f;
!         this.duskToNight.set(dusk, duskToNight);
!         this.night2.set(duskToNight, 1.01f);
      }
diff '--context=1' --strip-trailing-cr -r app/src/main/java/com/ustwo/lwp/wallpapers/timelapse/GradientSetManager.java new/src/main/java/com/ustwo/lwp/wallpapers/timelapse/GradientSetManager.java
*** app/src/main/java/com/ustwo/lwp/wallpapers/timelapse/GradientSetManager.java	Wed May  1 13:02:32 2024
--- new/src/main/java/com/ustwo/lwp/wallpapers/timelapse/GradientSetManager.java	Wed May  1 21:26:04 2024
***************
*** 8,10 ****
  import com.ustwo.lwp.util.MathUtil;
! import java.util.Collection;
  import java.util.ArrayList;
--- 8,10 ----
  import com.ustwo.lwp.util.MathUtil;
! 
  import java.util.ArrayList;
***************
*** 16,19 ****
      public List<GradientSet> gradientSets;
!     private Gradient scratch1;
!     private Gradient scratch2;
      
--- 16,19 ----
      public List<GradientSet> gradientSets;
!     private final Gradient scratch1;
!     private final Gradient scratch2;
      
***************
*** 22,49 ****
          this.scratch2 = new Gradient();
!         this.gradientSets = new ArrayList<GradientSet>(Arrays.asList(new GradientSet(new Gradient("#F8C66F", "#CE93D8", "#0F284C", "#455A64", "#212121"), new Gradient("#CE93D8", "#F48FB1", "#2B1780", "#0D47A1", "#0A3880"), new Gradient("#8EF6D6", "#FFF59D", "#1A1885", "#9575CD", "#006BC3"), new Gradient("#64B5F6", "#81D4FA", "#303F9F", "#279CAC", "#1A237E"), new Gradient("#FFAB91", "#CE93D8", "#311B92", "#1976D2", "#1A237E"), new Gradient("#DC5A7A", "#9739B2", "#311B92", "#6A189A", "#311B92")), new GradientSet(new Gradient("#F8C66F", "#CE93D8", "#0F284C", "#455A64", "#212121"), new Gradient("#CE93D8", "#F48FB1", "#2B1780", "#0D47A1", "#0A3880"), new Gradient("#8EF6D6", "#FFF59D", "#1A1885", "#9575CD", "#006BC3"), new Gradient("#4fadf6", "#93c7fa", "#303f9f", "#52b6b3", "#1a3da3"), new Gradient("#FFAB91", "#CE93D8", "#311B92", "#1976D2", "#1A237E"), new Gradient("#DC5A7A", "#9739B2", "#311B92", "#6A189A", "#311B92")), new GradientSet(new Gradient("#263238", "#CE93D8", "#0F284C", "#455A64", "#212121"), new Gradient("#CE93D8", "#F48FB1", "#2B1780", "#337283", "#003333"), new Gradient("#FFCDD2", "#F0F4C3", "#455A64", "#279CAA", "#546E7A"), new Gradient("#CAD3DA", "#E4E0D1", "#455A64", "#A3ADAC", "#546E7A"), new Gradient("#607D8B", "#FFAB91", "#3E2723", "#99615F", "#2F2A3D"), new Gradient("#474C61", "#E67864", "#333333", "#006064", "#221A45")), new GradientSet(new Gradient("#263238", "#01579B", "#0F284C", "#195A64", "#212121"), new Gradient("#B39DDB", "#F48FB1", "#2B1780", "#50728C", "#263238"), new Gradient("#F3C276", "#BB89AE", "#575A8C", "#A3ADAC", "#BB89AE"), new Gradient("#BBDEFB", "#E4E0D1", "#455A64", "#A3ADAC", "#546E7A"), new Gradient("#F3C276", "#BB89AE", "#575A8C", "#586DA2", "#A9629A"), new Gradient("#474C61", "#E67864", "#333333", "#455A64", "#221A45")), new GradientSet(new Gradient("#263238", "#01579B", "#0F284C", "#195A64", "#212121"), new Gradient("#B39DDB", "#F48FB1", "#2B1780", "#50728C", "#263238"), new Gradient("#F3C276", "#BB89AE", "#575A8C", "#A3ADAC", "#BB89AE"), new Gradient("#BBDEFB", "#E4E0D1", "#455A64", "#A3ADAC", "#546E7A"), new Gradient("#F3C276", "#BB89AE", "#575A8C", "#586DA2", "#A9629A"), new Gradient("#474C61", "#E67864", "#333333", "#455A64", "#221A45")), new GradientSet(new Gradient("#37474F", "#607D8B", "#263238", "#455A64", "#212121"), new Gradient("#5C6BC0", "#F48FB1", "#2B1780", "#607D8B", "#0A3880"), new Gradient("#CAD3DA", "#FFF59D", "#78909C", "#CFD8DC", "#F0F4C3"), new Gradient("#9FA8DA", "#FFFDE7", "#5C6BC0", "#BBDEFB", "#5C6BC0"), new Gradient("#78909C", "#FF7043", "#311B92", "#546E7A", "#311B92"), new Gradient("#546E7A", "#DC5A7A", "#311B92", "#6A189A", "#311B92")), new GradientSet(new Gradient("#607D8B", "#0D47A1", "#333333", "#311B92", "#2F2A3D"), new Gradient("#C096F5", "#CD89D4", "#2C3A95", "#1A658D", "#053440"), new Gradient("#FFF8E1", "#B0BEC5", "#455A64", "#004857", "#546E7A"), new Gradient("#607D8B", "#9FE0FF", "#455A64", "#5AADD2", "#546E7A"), new Gradient("#474C61", "#E57373", "#333333", "#303BA6", "#221A45"), new Gradient("#546E7A", "#DC5A7A", "#311B92", "#6A189A", "#311B92")), new GradientSet(new Gradient("#37474F", "#607D8B", "#263238", "#455A64", "#212121"), new Gradient("#5C6BC0", "#F48FB1", "#2B1780", "#607D8B", "#0A3880"), new Gradient("#CAD3DA", "#FFF59D", "#78909C", "#CFD8DC", "#F0F4C3"), new Gradient("#9FA8DA", "#FFFDE7", "#5C6BC0", "#BBDEFB", "#5C6BC0"), new Gradient("#78909C", "#FF7043", "#311B92", "#546E7A", "#311B92"), new Gradient("#546E7A", "#DC5A7A", "#311B92", "#6A189A", "#311B92")), new GradientSet(new Gradient("#1D272C", "#00796B", "#0F284C", "#30403D", "#212121"), new Gradient("#816581", "#FFF9C4", "#2b1780", "#337283", "#003333"), new Gradient("#FFCDD2", "#DCEDC8", "#48388f", "#1A8491", "#546E7A"), new Gradient("#B7B3B3", "#DAD4FF", "#1E3132", "#535D4B", "#546E7A"), new Gradient("#485352", "#E67864", "#3E2723", "#4E5A58", "#263230"), new Gradient("#353A52", "#6F297B", "#333333", "#006064", "#221A45")), new GradientSet(new Gradient("#F8C66F", "#CE93D8", "#0F284C", "#455A64", "#212121"), new Gradient("#CE93D8", "#F48FB1", "#2B1780", "#0D47A1", "#0A3880"), new Gradient("#8EF6D6", "#FFF59D", "#1A1885", "#9575CD", "#006BC3"), new Gradient("#64B5F6", "#81D4FA", "#303F9F", "#279CAC", "#1A237E"), new Gradient("#FFAB91", "#CE93D8", "#311B92", "#1976D2", "#1A237E"), new Gradient("#DC5A7A", "#9739B2", "#311B92", "#6A189A", "#311B92"))));
          this.updateAllRanges();
      }
!     
      public static float oscillationOffset() {
!         final long n = System.currentTimeMillis() % 20000L;
!         float n2 = 0.0f;
!         if (n >= 1000L) {
!             if (n < 5000L) {
!                 n2 = MathUtil.map((float)n, 1000.0f, 5000.0f, 0.0f, 1.0f, true);
!             }
!             else if (n < 6000L) {
!                 n2 = 1.0f;
!             }
!             else if (n < 10000L) {
!                 n2 = MathUtil.map((float)n, 6000.0f, 10000.0f, 1.0f, 0.0f, true);
!             }
!             else if (n >= 11000L) {
!                 if (n < 15000L) {
!                     n2 = MathUtil.map((float)n, 11000.0f, 15000.0f, 0.0f, -1.0f, true);
!                 }
!                 else if (n < 16000L) {
!                     n2 = -1.0f;
!                 }
!                 else {
!                     n2 = MathUtil.map((float)n, 16000.0f, 20000.0f, -1.0f, 0.0f, true);
                  }
--- 22,63 ----
          this.scratch2 = new Gradient();
!         GradientSet gradientSet = new GradientSet(new Gradient("#F8C66F", "#CE93D8", "#0F284C", "#455A64", "#212121"), new Gradient("#CE93D8", "#F48FB1", "#2B1780", "#0D47A1", "#0A3880"), new Gradient("#8EF6D6", "#FFF59D", "#1A1885", "#9575CD", "#006BC3"), new Gradient("#4fadf6", "#93c7fa", "#303f9f", "#52b6b3", "#1a3da3"), new Gradient("#FFAB91", "#CE93D8", "#311B92", "#1976D2", "#1A237E"), new Gradient("#DC5A7A", "#9739B2", "#311B92", "#6A189A", "#311B92"));
!         GradientSet gradientSet2 = new GradientSet(new Gradient("#F8C66F", "#CE93D8", "#0F284C", "#455A64", "#212121"), new Gradient("#CE93D8", "#F48FB1", "#2B1780", "#0D47A1", "#0A3880"), new Gradient("#8EF6D6", "#FFF59D", "#1A1885", "#9575CD", "#006BC3"), new Gradient("#64B5F6", "#81D4FA", "#303F9F", "#279CAC", "#1A237E"), new Gradient("#FFAB91", "#CE93D8", "#311B92", "#1976D2", "#1A237E"), new Gradient("#DC5A7A", "#9739B2", "#311B92", "#6A189A", "#311B92"));
!         GradientSet gradientSet3 = new GradientSet(new Gradient("#F8C66F", "#CE93D8", "#0F284C", "#455A64", "#212121"), new Gradient("#CE93D8", "#F48FB1", "#2B1780", "#0D47A1", "#0A3880"), new Gradient("#8EF6D6", "#FFF59D", "#1A1885", "#9575CD", "#006BC3"), new Gradient("#64B5F6", "#81D4FA", "#303F9F", "#279CAC", "#1A237E"), new Gradient("#FFAB91", "#CE93D8", "#311B92", "#1976D2", "#1A237E"), new Gradient("#DC5A7A", "#9739B2", "#311B92", "#6A189A", "#311B92"));
!         GradientSet gradientSet4 = new GradientSet(new Gradient("#263238", "#CE93D8", "#0F284C", "#455A64", "#212121"), new Gradient("#CE93D8", "#F48FB1", "#2B1780", "#337283", "#003333"), new Gradient("#FFCDD2", "#F0F4C3", "#455A64", "#279CAA", "#546E7A"), new Gradient("#CAD3DA", "#E4E0D1", "#455A64", "#A3ADAC", "#546E7A"), new Gradient("#607D8B", "#FFAB91", "#3E2723", "#99615F", "#2F2A3D"), new Gradient("#474C61", "#E67864", "#333333", "#006064", "#221A45"));
!         GradientSet gradientSet5 = new GradientSet(new Gradient("#263238", "#01579B", "#0F284C", "#195A64", "#212121"), new Gradient("#B39DDB", "#F48FB1", "#2B1780", "#50728C", "#263238"), new Gradient("#F3C276", "#BB89AE", "#575A8C", "#A3ADAC", "#BB89AE"), new Gradient("#BBDEFB", "#E4E0D1", "#455A64", "#A3ADAC", "#546E7A"), new Gradient("#F3C276", "#BB89AE", "#575A8C", "#586DA2", "#A9629A"), new Gradient("#474C61", "#E67864", "#333333", "#455A64", "#221A45"));
!         GradientSet gradientSet6 = new GradientSet(new Gradient("#263238", "#01579B", "#0F284C", "#195A64", "#212121"), new Gradient("#B39DDB", "#F48FB1", "#2B1780", "#50728C", "#263238"), new Gradient("#F3C276", "#BB89AE", "#575A8C", "#A3ADAC", "#BB89AE"), new Gradient("#BBDEFB", "#E4E0D1", "#455A64", "#A3ADAC", "#546E7A"), new Gradient("#F3C276", "#BB89AE", "#575A8C", "#586DA2", "#A9629A"), new Gradient("#474C61", "#E67864", "#333333", "#455A64", "#221A45"));
!         GradientSet gradientSet7 = new GradientSet(new Gradient("#607D8B", "#0D47A1", "#333333", "#311B92", "#2F2A3D"), new Gradient("#C096F5", "#CD89D4", "#2C3A95", "#1A658D", "#053440"), new Gradient("#FFF8E1", "#B0BEC5", "#455A64", "#004857", "#546E7A"), new Gradient("#607D8B", "#9FE0FF", "#455A64", "#5AADD2", "#546E7A"), new Gradient("#474C61", "#E57373", "#333333", "#303BA6", "#221A45"), new Gradient("#546E7A", "#DC5A7A", "#311B92", "#6A189A", "#311B92"));
!         GradientSet gradientSet8 = new GradientSet(new Gradient("#1D272C", "#00796B", "#0F284C", "#30403D", "#212121"), new Gradient("#816581", "#FFF9C4", "#2b1780", "#337283", "#003333"), new Gradient("#FFCDD2", "#DCEDC8", "#48388f", "#1A8491", "#546E7A"), new Gradient("#B7B3B3", "#DAD4FF", "#1E3132", "#535D4B", "#546E7A"), new Gradient("#485352", "#E67864", "#3E2723", "#4E5A58", "#263230"), new Gradient("#353A52", "#6F297B", "#333333", "#006064", "#221A45"));
!         GradientSet gradientSet9 = new GradientSet(new Gradient("#37474F", "#607D8B", "#263238", "#455A64", "#212121"), new Gradient("#5C6BC0", "#F48FB1", "#2B1780", "#607D8B", "#0A3880"), new Gradient("#CAD3DA", "#FFF59D", "#78909C", "#CFD8DC", "#F0F4C3"), new Gradient("#9FA8DA", "#FFFDE7", "#5C6BC0", "#BBDEFB", "#5C6BC0"), new Gradient("#78909C", "#FF7043", "#311B92", "#546E7A", "#311B92"), new Gradient("#546E7A", "#DC5A7A", "#311B92", "#6A189A", "#311B92"));
!         GradientSet gradientSet1 = new GradientSet(new Gradient("#37474F", "#607D8B", "#263238", "#455A64", "#212121"), new Gradient("#5C6BC0", "#F48FB1", "#2B1780", "#607D8B", "#0A3880"), new Gradient("#CAD3DA", "#FFF59D", "#78909C", "#CFD8DC", "#F0F4C3"), new Gradient("#9FA8DA", "#FFFDE7", "#5C6BC0", "#BBDEFB", "#5C6BC0"), new Gradient("#78909C", "#FF7043", "#311B92", "#546E7A", "#311B92"), new Gradient("#546E7A", "#DC5A7A", "#311B92", "#6A189A", "#311B92"));
! 
!         this.gradientSets = new ArrayList<>(
!                 Arrays.asList(
!                         gradientSet2, gradientSet,
!                         gradientSet4, gradientSet5,
!                         gradientSet6, gradientSet1,
!                         gradientSet7, gradientSet9,
!                         gradientSet8, gradientSet3));
          this.updateAllRanges();
      }
! 
      public static float oscillationOffset() {
!         long l = System.currentTimeMillis() % 20000L;
!         float f = 0.0f;
!         if (l >= 1000L) {
!             if (l < 5000L) {
!                 f = MathUtil.map(l, 1000.0f, 5000.0f, 0.0f, 1.0f, true);
!             } else if (l < 6000L) {
!                 f = 1.0f;
!             } else if (l < 10000L) {
!                 f = MathUtil.map(l, 6000.0f, 10000.0f, 1.0f, 0.0f, true);
!             } else if (l >= 11000L) {
!                 if (l < 15000L){
!                     f = MathUtil.map(l, 11000.0f, 15000.0f, 0.0f, -1.0f, true);
!                 } else {
!                     if (l < 16000L){
!                         f = -1.0f;
!                     } else {
!                         f  = MathUtil.map(l, 16000.0f, 20000.0f, -1.0f, 0.0f, true);
!                     }
                  }
***************
*** 51,53 ****
          }
!         return n2 * 0.4f;
      }
--- 65,67 ----
          }
!         return f * 0.4f;
      }
diff '--context=1' --strip-trailing-cr -r app/src/main/java/com/ustwo/lwp/wallpapers/timelapse/TimelapseProgram.java new/src/main/java/com/ustwo/lwp/wallpapers/timelapse/TimelapseProgram.java
*** app/src/main/java/com/ustwo/lwp/wallpapers/timelapse/TimelapseProgram.java	Wed May  1 13:02:37 2024
--- new/src/main/java/com/ustwo/lwp/wallpapers/timelapse/TimelapseProgram.java	Wed May  1 21:26:20 2024
***************
*** 7,8 ****
--- 7,9 ----
  import android.opengl.Matrix;
+ import com.ustwo.lwp.R;
  import com.ustwo.lwp.wallpapers.base.RenderNode;
***************
*** 34,36 ****
      public TimelapseProgram(final TimelapseRenderer renderer) {
!         super((Context)App.get(), 2131558407, 2131558406);
          this.matrix = new float[16];
--- 35,37 ----
      public TimelapseProgram(final TimelapseRenderer renderer) {
!         super(App.get(), R.raw.timelapse_vertex_shader, R.raw.timelapse_fragment_shader);
          this.matrix = new float[16];
***************
*** 47,52 ****
          if (this.renderer.displayShortSide() > 1080) {
!             n = 2131165355;
          }
          else {
!             n = 2131165354;
          }
--- 48,53 ----
          if (this.renderer.displayShortSide() > 1080) {
!             n = R.drawable.timelapse_top_gradient_1440;
          }
          else {
!             n = R.drawable.timelapse_top_gradient_1080;
          }
***************
*** 55,60 ****
          if (this.renderer.displayShortSide() > 1080) {
!             n2 = 2131165352;
          }
          else {
!             n2 = 2131165351;
          }
--- 56,61 ----
          if (this.renderer.displayShortSide() > 1080) {
!             n2 = R.drawable.timelapse_bottom_gradient_1440;
          }
          else {
!             n2 = R.drawable.timelapse_bottom_gradient_1080;
          }
diff '--context=1' --strip-trailing-cr -r app/src/main/java/com/ustwo/lwp/wallpapers/timelapse/TimelapseRenderer.java new/src/main/java/com/ustwo/lwp/wallpapers/timelapse/TimelapseRenderer.java
*** app/src/main/java/com/ustwo/lwp/wallpapers/timelapse/TimelapseRenderer.java	Wed May  1 13:02:43 2024
--- new/src/main/java/com/ustwo/lwp/wallpapers/timelapse/TimelapseRenderer.java	Wed May  1 21:26:25 2024
***************
*** 6,7 ****
--- 6,9 ----
  
+ import android.os.Build;
+ import androidx.annotation.RequiresApi;
  import com.ustwo.lwp.wallpapers.base.RenderNode;
***************
*** 61,71 ****
          this.sunriseReceiver = new BroadcastReceiver() {
-             final TimelapseRenderer this$0;
-             
              public void onReceive(final Context context, final Intent intent) {
                  final boolean booleanExtra = intent.getBooleanExtra("sunrise_result", false);
!                 final StringBuilder sb = new StringBuilder();
!                 sb.append("got sunrise broadcast - ");
!                 sb.append(booleanExtra);
!                 L.v(sb.toString());
!                 this.this$0.gradientMan.updateAllRanges();
              }
--- 63,68 ----
          this.sunriseReceiver = new BroadcastReceiver() {
              public void onReceive(final Context context, final Intent intent) {
                  final boolean booleanExtra = intent.getBooleanExtra("sunrise_result", false);
!                 L.v( "got sunrise broadcast - " + booleanExtra);
!                 TimelapseRenderer.this.gradientMan.updateAllRanges();
              }
***************
*** 73,79 ****
          this.weatherBroadcastReceiver = new BroadcastReceiver() {
-             final TimelapseRenderer this$0;
-             
              public void onReceive(final Context context, final Intent intent) {
                  if (intent.getBooleanExtra("weather_result", false)) {
!                     this.this$0.updateWeatherCondition();
                  }
--- 70,74 ----
          this.weatherBroadcastReceiver = new BroadcastReceiver() {
              public void onReceive(final Context context, final Intent intent) {
                  if (intent.getBooleanExtra("weather_result", false)) {
!                     TimelapseRenderer.this.updateWeatherCondition();
                  }
***************
*** 132,134 ****
              if (this.weatherTransitionPercent != weatherTransitionPercent) {
!                 super.engine.notifyColorsChanged();
              }
--- 127,131 ----
              if (this.weatherTransitionPercent != weatherTransitionPercent) {
!                 if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O_MR1) {
!                     super.engine.notifyColorsChanged();
!                 }
              }
***************
*** 262,265 ****
      @Override
      public WallpaperColors onComputeWallpaperColors() {
!         return new WallpaperColors(Color.valueOf(ColUtil.rgbToInt(this.gradient.lower2)), Color.valueOf(ColUtil.rgbToInt(this.gradient.lower1)), Color.valueOf(ColUtil.rgbToInt(this.gradient.middle)), 0);
      }
--- 259,266 ----
      @Override
+     @RequiresApi(Build.VERSION_CODES.O_MR1)
      public WallpaperColors onComputeWallpaperColors() {
!         return ColUtil.newColors(
!                 ColUtil.rgbToInt(this.gradient.lower2),
!                 ColUtil.rgbToInt(this.gradient.lower1),
!                 ColUtil.rgbToInt(this.gradient.middle), 0);
      }
diff '--context=1' --strip-trailing-cr -r app/src/main/java/com/ustwo/lwp/wallpapers/timelapse/TimelapseWallpaperService.java new/src/main/java/com/ustwo/lwp/wallpapers/timelapse/TimelapseWallpaperService.java
*** app/src/main/java/com/ustwo/lwp/wallpapers/timelapse/TimelapseWallpaperService.java	Wed May  1 13:02:49 2024
--- new/src/main/java/com/ustwo/lwp/wallpapers/timelapse/TimelapseWallpaperService.java	Wed May  1 21:27:02 2024
***************
*** 6,9 ****
  
! import com.ustwo.lwp.wallpapers.PermissionsActivity;
! import android.content.IntentFilter;
  import androidx.localbroadcastmanager.content.LocalBroadcastManager;
--- 6,11 ----
  
! import android.Manifest;
! import android.os.Build;
! import androidx.core.content.PermissionChecker;
! import com.google.android.gms.common.GoogleApiAvailability;
  import androidx.localbroadcastmanager.content.LocalBroadcastManager;
***************
*** 19,20 ****
--- 21,23 ----
  import com.ustwo.lwp.wallpapers.base.UtWallpaperService;
+ import static com.google.android.gms.common.ConnectionResult.SUCCESS;
  
***************
*** 23,25 ****
      private static TimelapseWallpaperService instance;
!     private BroadcastReceiver permissionReceiver;
      private SunriseUtil sunriseUtil;
--- 26,28 ----
      private static TimelapseWallpaperService instance;
!     private final BroadcastReceiver permissionReceiver;
      private SunriseUtil sunriseUtil;
***************
*** 29,41 ****
          this.permissionReceiver = new BroadcastReceiver() {
-             final TimelapseWallpaperService this$0;
-             
              public void onReceive(final Context context, final Intent intent) {
!                 final boolean b = ContextCompat.checkSelfPermission((Context)this.this$0, "android.permission.ACCESS_FINE_LOCATION") == 0;
!                 final StringBuilder sb = new StringBuilder();
!                 sb.append("got this - has permission? ");
!                 sb.append(b);
!                 L.v(sb.toString());
                  if (b) {
!                     this.this$0.weatherMan.start();
!                     this.this$0.sunriseUtil.get();
                  }
--- 32,41 ----
          this.permissionReceiver = new BroadcastReceiver() {
              public void onReceive(final Context context, final Intent intent) {
!                 final boolean b = ContextCompat.checkSelfPermission(
!                                 TimelapseWallpaperService.this,
!                                 Manifest.permission.ACCESS_FINE_LOCATION) == PermissionChecker.PERMISSION_GRANTED;
!                 L.v("got this - has permission? " + b);
                  if (b) {
!                     TimelapseWallpaperService.this.weatherMan.start();
!                     TimelapseWallpaperService.this.sunriseUtil.get();
                  }
***************
*** 53,62 ****
          }
!         LocalBroadcastManager.getInstance((Context)App.get()).registerReceiver(this.permissionReceiver, new IntentFilter("permission_result"));
!         final boolean b = ContextCompat.checkSelfPermission((Context)this, "android.permission.ACCESS_FINE_LOCATION") == 0;
!         final StringBuilder sb = new StringBuilder();
!         sb.append("has fine location permissions? ");
!         sb.append(b);
!         L.d(sb.toString());
!         if (!b) {
!             PermissionsActivity.launchActivity((Context)this, 2);
          }
--- 53,79 ----
          }
!         boolean hasPermission = ContextCompat.checkSelfPermission(this,
!                         Manifest.permission.ACCESS_COARSE_LOCATION
!                 ) == PermissionChecker.PERMISSION_GRANTED;
!         if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {
!             hasPermission |=  ContextCompat.checkSelfPermission(
!                     this,
!                     Manifest.permission.ACCESS_BACKGROUND_LOCATION
!             ) == PermissionChecker.PERMISSION_GRANTED;
!         }
!         boolean isGoogleAvailable = false;
!         try {
!             int checkResult = GoogleApiAvailability.getInstance().isGooglePlayServicesAvailable(App.get());
!             isGoogleAvailable = (checkResult == SUCCESS);
!         } catch (NoClassDefFoundError ignored) {
!         }
!         if (!isGoogleAvailable) {
!             hasPermission |=  ContextCompat.checkSelfPermission(
!                     this,
!                     Manifest.permission.ACCESS_FINE_LOCATION
!             ) == PermissionChecker.PERMISSION_GRANTED;
!         }
!         L.d("has fine location permissions? " + hasPermission);
!         if (hasPermission) {
!             weatherMan.start();
!             sunriseUtil.get();
          }
***************
*** 91,93 ****
          super.onDestroy();
!         this.weatherMan.stop();
          LocalBroadcastManager.getInstance((Context)App.get()).unregisterReceiver(this.permissionReceiver);
--- 108,110 ----
          super.onDestroy();
!         this.weatherMan.destroy();
          LocalBroadcastManager.getInstance((Context)App.get()).unregisterReceiver(this.permissionReceiver);
diff '--context=1' --strip-trailing-cr -r app/src/main/java/com/ustwo/lwp/wallpapers/util/AbstractSunriseUtil.java new/src/main/java/com/ustwo/lwp/wallpapers/util/AbstractSunriseUtil.java
*** app/src/main/java/com/ustwo/lwp/wallpapers/util/AbstractSunriseUtil.java	Wed May  1 13:02:55 2024
--- new/src/main/java/com/ustwo/lwp/wallpapers/util/AbstractSunriseUtil.java	Wed May  1 21:28:26 2024
***************
*** 20,34 ****
      
!     public static float[] getSunriseSunset(final float n, final float n2) {
!         final CalendarAstronomer calendarAstronomer = new CalendarAstronomer(n2, n);
!         final long sunRiseSet = calendarAstronomer.getSunRiseSet(true);
!         final long sunRiseSet2 = calendarAstronomer.getSunRiseSet(false);
!         final StringBuilder sb = new StringBuilder();
!         sb.append("sunrise : ");
!         sb.append(new Date(sunRiseSet));
!         L.v(sb.toString());
!         final StringBuilder sb2 = new StringBuilder();
!         sb2.append("sunset  : ");
!         sb2.append(new Date(sunRiseSet2));
!         L.v(sb2.toString());
!         return new float[] { TimeUtil.epochMsToDayPercent(sunRiseSet), TimeUtil.epochMsToDayPercent(sunRiseSet2) };
      }
--- 20,28 ----
      
!     protected static float[] getSunriseSunset(float latitude, float longitude) {
!         CalendarAstronomer calendarAstronomer = new CalendarAstronomer(longitude, latitude);
!         long sunRise = calendarAstronomer.getSunRiseSet(true);
!         long sunSet = calendarAstronomer.getSunRiseSet(false);
!         L.v("sunrise : " + new Date(sunRise));
!         L.v("sunset  : " + new Date(sunSet));
!         return new float[]{TimeUtil.epochMsToDayPercent(sunRise), TimeUtil.epochMsToDayPercent(sunSet)};
      }
***************
*** 49,52 ****
      {
-         private static final Result[] $VALUES;
-         
          FAILED, 
--- 43,44 ----
***************
*** 55,60 ****
          STOPPED;
-         
-         static {
-             $VALUES = new Result[] { Result.OKAY, Result.FAILED, Result.FAILED_NO_PERMISSION, Result.STOPPED };
-         }
      }
--- 47,48 ----
diff '--context=1' --strip-trailing-cr -r app/src/main/java/com/ustwo/lwp/wallpapers/util/AbstractWeatherManager.java new/src/main/java/com/ustwo/lwp/wallpapers/util/AbstractWeatherManager.java
*** app/src/main/java/com/ustwo/lwp/wallpapers/util/AbstractWeatherManager.java	Wed May  1 13:03:02 2024
--- new/src/main/java/com/ustwo/lwp/wallpapers/util/AbstractWeatherManager.java	Mon Apr 29 14:25:40 2024
***************
*** 6,8 ****
  
- import java.util.Iterator;
  import com.ustwo.lwp.util.L;
--- 6,7 ----
***************
*** 14,16 ****
  import java.util.Set;
- import com.google.android.collect.Sets;
  import android.os.Looper;
--- 13,14 ----
***************
*** 18,20 ****
  import android.os.Handler;
- import android.content.SharedPreferences;
  
--- 16,17 ----
***************
*** 22,24 ****
  {
-     private final SharedPreferences cachePrefs;
      protected boolean isStopped;
--- 19,20 ----
***************
*** 32,44 ****
          this.isStopped = false;
!         this.runnable = new Runnable() {
!             final AbstractWeatherManager this$0;
!             
!             @Override
!             public void run() {
!                 this.this$0.get();
!             }
!         };
          this.pollHandler = new Handler(Looper.getMainLooper());
!         this.cachePrefs = context.createDeviceProtectedStorageContext().getSharedPreferences("cache", 0);
!         this.result = this.stringSetToWeather(this.cachePrefs.getStringSet("weather_condition", (Set)Sets.newArraySet((Object[])new String[] { Integer.toString(1) })));
          this.resultTime = TimeUtil.nowMs();
--- 28,33 ----
          this.isStopped = false;
!         this.runnable = () -> AbstractWeatherManager.this.get();
          this.pollHandler = new Handler(Looper.getMainLooper());
!         this.result = this.stringSetToWeather(
!         App.preferences().getStringSet("weather_condition", newArraySet(Integer.toString(1))));
          this.resultTime = TimeUtil.nowMs();
***************
*** 46,89 ****
      }
!     
!     private WeatherVo stringSetToWeather(Set<String> iterator) {
!         final ArrayList list = new ArrayList<Integer>(((Set)iterator).size());
!         iterator = ((Set)iterator).iterator();
!         String s;
!         int index;
!         int size;
!         Label_0090_Outer:Block_4_Outer:
!         while (true) {
!             Label_0059: {
!                 if (!((Iterator)iterator).hasNext()) {
!                     break Label_0059;
!                 }
!                 s = (String)((Iterator)iterator).next();
!                 try {
!                     list.add(Integer.valueOf(Integer.parseInt(s)));
!                     continue Label_0090_Outer;
!                     Label_0123: {
!                         ((WeatherVo)iterator).conditions = new int[] { 1 };
!                     }
!                     return (WeatherVo)iterator;
!                     while (true) {
!                         while (true) {
!                             iftrue(Label_0134:)(index >= list.size());
!                             ((WeatherVo)iterator).conditions[index] = Integer.valueOf(list.get(index));
!                             ++index;
!                             continue Block_4_Outer;
!                             ((WeatherVo)iterator).conditions = new int[list.size()];
!                             continue Block_4_Outer;
!                         }
!                         Label_0134:
!                         return (WeatherVo)iterator;
!                         iterator = new WeatherVo();
!                         size = list.size();
!                         index = 0;
!                         iftrue(Label_0123:)(size <= 0);
!                         continue;
!                     }
!                 }
!                 catch (final NumberFormatException ex) {}
              }
          }
      }
--- 35,90 ----
      }
!     public static  ArraySet<String> newArraySet(String str) {
!         ArraySet<String> set = new ArraySet<>();
!         set.add(str);
!         return set;
!     }
!     private WeatherVo stringToWeather(String result) {
!         ArrayList<Integer> resultInteger = new ArrayList<>(1);
!         try {
!             resultInteger.add(Integer.parseInt(result));
!         } catch (NumberFormatException ignored) {
!         }
! 
!         WeatherVo weatherVo = new WeatherVo();
!         if (!resultInteger.isEmpty()) {
!             weatherVo.conditions = new int[resultInteger.size()];
!             for (int i = 0; i < resultInteger.size(); i++) {
!                 weatherVo.conditions[i] = resultInteger.get(i);
!             }
!         } else {
!             weatherVo.conditions = new int[]{1};
!         }
!         return weatherVo;
!     }
! 
!     private String weatherToString(WeatherVo weatherVo) {
!         String result = "";
!         for (int i = 0; i < weatherVo.conditions.length; ++i) {
!             result = Integer.toString(weatherVo.conditions[i]);
!         }
!         return result;
!     }
! 
!     private WeatherVo stringSetToWeather(Set<String> var1) {
!         ArrayList<Integer> var2 = new ArrayList<>(var1.size());
! 
!         for (String var3 : var1) {
!             try {
!                 var2.add(Integer.parseInt(var3));
!             } catch (NumberFormatException ignored) {
!             }
!         }
! 
!         WeatherVo var8 = new WeatherVo();
!         int var4 = var2.size();
!         int var5 = 0;
!         if (var4 > 0) {
!             for(var8.conditions = new int[var2.size()]; var5 < var2.size(); ++var5) {
!                 var8.conditions[var5] = var2.get(var5);
              }
+         } else {
+             var8.conditions = new int[]{1};
          }
+ 
+         return var8;
      }
***************
*** 91,93 ****
      private Set<String> weatherToStringSet(final WeatherVo weatherVo) {
!         final ArraySet set = new ArraySet();
          int n = 0;
--- 92,94 ----
      private Set<String> weatherToStringSet(final WeatherVo weatherVo) {
!         final ArraySet<String> set = new ArraySet<>();
          int n = 0;
***************
*** 98,103 ****
              }
!             set.add((Object)Integer.toString(conditions[n]));
              ++n;
          }
!         return (Set<String>)set;
      }
--- 99,104 ----
              }
!             set.add(Integer.toString(conditions[n]));
              ++n;
          }
!         return set;
      }
***************
*** 111,113 ****
          intent.putExtra("weather_result", result == Result.OKAY);
!         LocalBroadcastManager.getInstance((Context)App.get()).sendBroadcast(intent);
          this.pollHandler.removeCallbacks(this.runnable);
--- 112,114 ----
          intent.putExtra("weather_result", result == Result.OKAY);
!         LocalBroadcastManager.getInstance(App.get()).sendBroadcast(intent);
          this.pollHandler.removeCallbacks(this.runnable);
***************
*** 115,117 ****
          if (result == Result.OKAY && weatherVo != null) {
!             this.cachePrefs.edit().putStringSet("weather_condition", (Set)this.weatherToStringSet(weatherVo)).apply();
          }
--- 116,118 ----
          if (result == Result.OKAY && weatherVo != null) {
!             App.preferences().edit().putStringSet("weather_condition", this.weatherToStringSet(weatherVo)).apply();
          }
***************
*** 145,146 ****
--- 146,150 ----
      }
+     public void destroy() {
+         this.isStopped = true;
+     }
      
***************
*** 152,155 ****
      {
-         private static final Result[] $VALUES;
-         
          FAILED, 
--- 156,157 ----
***************
*** 157,163 ****
          OKAY, 
!         STOPPED;
!         
!         static {
!             $VALUES = new Result[] { Result.OKAY, Result.FAILED, Result.FAILED_NO_PERMISSION, Result.STOPPED };
!         }
      }
--- 159,162 ----
          OKAY, 
!         STOPPED,
!         TOO_MANY_REQUESTS;
      }
diff '--context=1' --strip-trailing-cr -r app/src/main/java/com/ustwo/lwp/wallpapers/util/SunriseUtil.java new/src/main/java/com/ustwo/lwp/wallpapers/util/SunriseUtil.java
*** app/src/main/java/com/ustwo/lwp/wallpapers/util/SunriseUtil.java	Wed May  1 13:03:21 2024
--- new/src/main/java/com/ustwo/lwp/wallpapers/util/SunriseUtil.java	Wed May  1 21:28:53 2024
***************
*** 6,23 ****
  
- import com.google.android.gms.common.api.Result;
- import android.location.Location;
- import android.graphics.PointF;
- import com.google.android.gms.awareness.snapshot.LocationResult;
- import com.google.android.gms.common.api.ResultCallback;
- import androidx.core.content.ContextCompat;
- import com.google.android.gms.awareness.Awareness;
- import android.content.Context;
- import com.google.android.gms.common.api.GoogleApiClient$Builder;
- import com.ustwo.lwp.App;
- import com.google.android.gms.common.ConnectionResult;
  import com.ustwo.lwp.util.L;
- import android.os.Bundle;
- import com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener;
- import com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks;
- import com.google.android.gms.common.api.GoogleApiClient;
  
--- 6,8 ----
***************
*** 25,70 ****
  {
-     private GoogleApiClient client;
-     private GoogleApiClient$ConnectionCallbacks connectionCallbacks;
-     private GoogleApiClient$OnConnectionFailedListener connectionFailedListener;
-     private boolean isGetting;
-     private int numConnectFails;
      
      public SunriseUtil() {
-         this.connectionCallbacks = (GoogleApiClient$ConnectionCallbacks)new GoogleApiClient$ConnectionCallbacks() {
-             final SunriseUtil this$0;
-             
-             public void onConnected(final Bundle bundle) {
-                 L.d("connected");
-                 this.this$0.numConnectFails = 0;
-                 this.this$0.get();
-             }
-             
-             public void onConnectionSuspended(final int n) {
-                 L.d();
-             }
-         };
-         this.connectionFailedListener = (GoogleApiClient$OnConnectionFailedListener)new GoogleApiClient$OnConnectionFailedListener() {
-             final SunriseUtil this$0;
-             
-             public void onConnectionFailed(final ConnectionResult obj) {
-                 this.this$0.numConnectFails++;
-                 final StringBuilder sb = new StringBuilder();
-                 sb.append("failed ");
-                 sb.append(obj);
-                 sb.append("; num: ");
-                 sb.append(this.this$0.numConnectFails);
-                 L.w(sb.toString());
-                 if (this.this$0.numConnectFails < 5) {
-                     L.w("re-calling get()");
-                     this.this$0.get();
-                 }
-                 else {
-                     L.w("giving up");
-                 }
-             }
-         };
-         final GoogleApiClient$Builder googleApiClient$Builder = new GoogleApiClient$Builder((Context)App.get());
-         googleApiClient$Builder.addApi(Awareness.API);
-         (this.client = googleApiClient$Builder.build()).registerConnectionCallbacks(this.connectionCallbacks);
-         this.client.registerConnectionFailedListener(this.connectionFailedListener);
      }
--- 10,13 ----
***************
*** 73,139 ****
      protected void doGet() {
!         if (ContextCompat.checkSelfPermission((Context)App.get(), "android.permission.ACCESS_FINE_LOCATION") != 0) {
!             L.w("no permissions");
!             this.afterResult(Result.FAILED_NO_PERMISSION);
!             return;
!         }
!         if (this.isGetting) {
!             L.v("get already in progress, aborting");
!             return;
!         }
!         if (this.client.isConnecting()) {
!             L.v("is currently connecting; aborting");
!             return;
!         }
!         if (!this.client.isConnecting() && !this.client.isConnected()) {
!             L.v("going to connect() first, so aborting");
!             this.client.connect();
!             return;
!         }
!         this.isGetting = true;
!         try {
!             L.v("getting location from Awareness");
!             Awareness.SnapshotApi.getLocation(this.client).setResultCallback((ResultCallback)new ResultCallback<LocationResult>(this) {
!                 final SunriseUtil this$0;
!                 
!                 public void onResult(final LocationResult locationResult) {
!                     this.this$0.isGetting = false;
!                     final Location location = locationResult.getLocation();
!                     if (location == null) {
!                         L.w("location is null");
!                         this.this$0.afterResult(Result.FAILED);
!                         return;
!                     }
!                     final float f = (float)location.getLatitude();
!                     final float f2 = (float)location.getLongitude();
!                     final StringBuilder sb = new StringBuilder();
!                     sb.append("location: ");
!                     sb.append(f);
!                     sb.append(", ");
!                     sb.append(f2);
!                     L.v(sb.toString());
!                     final float[] sunriseSunset = AbstractSunriseUtil.getSunriseSunset(f, f2);
!                     if (sunriseSunset == null) {
!                         L.w("sunrise values from lat lon failed");
!                         this.this$0.afterResult(Result.FAILED);
!                         return;
!                     }
!                     final StringBuilder sb2 = new StringBuilder();
!                     sb2.append("sunrise/sunset: ");
!                     sb2.append(sunriseSunset[0]);
!                     sb2.append(", ");
!                     sb2.append(sunriseSunset[1]);
!                     L.v(sb2.toString());
!                     this.this$0.latLon = new PointF(f, f2);
!                     final SunriseUtil this$0 = this.this$0;
!                     this$0.sunriseDayPercent = sunriseSunset[0];
!                     this$0.sunsetDayPercent = sunriseSunset[1];
!                     TimeUtil.setSunriseSunsetPercents(sunriseSunset[0], sunriseSunset[1]);
!                     this.this$0.afterResult(Result.OKAY);
!                 }
!             });
!         }
!         catch (final SecurityException ex) {
!             L.w("no permissions");
!             this.afterResult(Result.FAILED_NO_PERMISSION);
!         }
      }
--- 16,23 ----
      protected void doGet() {
!         float latitude = (float) LocationManger.get().getCoord().getLat();
!         float longitude = (float) LocationManger.get().getCoord().getLon();
!         float[] sunriseSunsetTime = getSunriseSunset(latitude, longitude);
!         L.v("sunrise/sunset: " + sunriseSunsetTime[0] + ", " + sunriseSunsetTime[1]);
!         TimeUtil.setSunriseSunsetPercents(sunriseSunsetTime[0], sunriseSunsetTime[1]);
!         afterResult(Result.OKAY);
      }
diff '--context=1' --strip-trailing-cr -r app/src/main/java/com/ustwo/lwp/wallpapers/util/TimeUtil.java new/src/main/java/com/ustwo/lwp/wallpapers/util/TimeUtil.java
*** app/src/main/java/com/ustwo/lwp/wallpapers/util/TimeUtil.java	Wed May  1 13:03:24 2024
--- new/src/main/java/com/ustwo/lwp/wallpapers/util/TimeUtil.java	Wed May  1 21:29:02 2024
***************
*** 8,12 ****
  import android.content.Context;
  import com.ustwo.lwp.wallpapers.Constants;
  import com.ustwo.lwp.util.MathUtil;
- import android.content.SharedPreferences;
  
--- 8,12 ----
  import android.content.Context;
+ import com.ustwo.lwp.App;
  import com.ustwo.lwp.wallpapers.Constants;
  import com.ustwo.lwp.util.MathUtil;
  
***************
*** 14,16 ****
  {
-     private static SharedPreferences cachePrefs;
      private static float sunriseDayPercent;
--- 14,15 ----
***************
*** 46,51 ****
          updateTimezone();
-         TimeUtil.cachePrefs = context.createDeviceProtectedStorageContext().getSharedPreferences("cache", 0);
          setUnlockTime();
!         TimeUtil.sunriseDayPercent = TimeUtil.cachePrefs.getFloat("Sunrise", 0.25f);
!         TimeUtil.sunsetDayPercent = TimeUtil.cachePrefs.getFloat("Sunset", 0.75f);
      }
--- 45,49 ----
          updateTimezone();
          setUnlockTime();
!         TimeUtil.sunriseDayPercent = App.preferences().getFloat("Sunrise", 0.25f);
!         TimeUtil.sunsetDayPercent = App.preferences().getFloat("Sunset", 0.75f);
      }
***************
*** 93,95 ****
          TimeUtil.sunsetDayPercent = sunsetDayPercent;
!         TimeUtil.cachePrefs.edit().putFloat("Sunrise", sunriseDayPercent).putFloat("Sunset", sunsetDayPercent).apply();
      }
--- 91,93 ----
          TimeUtil.sunsetDayPercent = sunsetDayPercent;
!         App.preferences().edit().putFloat("Sunrise", sunriseDayPercent).putFloat("Sunset", sunsetDayPercent).apply();
      }
diff '--context=1' --strip-trailing-cr -r app/src/main/java/com/ustwo/lwp/wallpapers/util/WeatherManager.java new/src/main/java/com/ustwo/lwp/wallpapers/util/WeatherManager.java
*** app/src/main/java/com/ustwo/lwp/wallpapers/util/WeatherManager.java	Wed May  1 13:03:32 2024
--- new/src/main/java/com/ustwo/lwp/wallpapers/util/WeatherManager.java	Wed May  1 21:29:08 2024
***************
*** 6,148 ****
  
! import androidx.core.content.ContextCompat;
! import com.google.android.gms.awareness.Awareness;
! import com.google.android.gms.common.api.GoogleApiClient$Builder;
  import com.ustwo.lwp.App;
! import com.google.android.gms.common.api.Result;
! import com.google.android.gms.awareness.state.Weather;
! import com.google.android.gms.common.ConnectionResult;
  import com.ustwo.lwp.util.L;
! import android.os.Bundle;
! import android.content.Context;
! import com.google.android.gms.awareness.snapshot.WeatherResult;
! import com.google.android.gms.common.api.ResultCallback;
! import com.google.android.gms.common.api.GoogleApiClient$OnConnectionFailedListener;
! import com.google.android.gms.common.api.GoogleApiClient$ConnectionCallbacks;
! import com.google.android.gms.common.api.GoogleApiClient;
! 
! public class WeatherManager extends AbstractWeatherManager
! {
!     private GoogleApiClient client;
!     private GoogleApiClient$ConnectionCallbacks connectionCallbacks;
!     private GoogleApiClient$OnConnectionFailedListener connectionFailedListener;
!     private boolean isGetting;
!     private int numConnectFails;
!     private ResultCallback<WeatherResult> onWeatherResult;
!     
!     public WeatherManager(final Context context) {
!         super(context);
!         this.connectionCallbacks = (GoogleApiClient$ConnectionCallbacks)new GoogleApiClient$ConnectionCallbacks() {
!             final WeatherManager this$0;
!             
!             public void onConnected(final Bundle bundle) {
!                 L.d("connected");
!                 this.this$0.numConnectFails = 0;
!                 this.this$0.get();
!             }
!             
!             public void onConnectionSuspended(final int n) {
!                 L.d();
!             }
!         };
!         this.connectionFailedListener = (GoogleApiClient$OnConnectionFailedListener)new GoogleApiClient$OnConnectionFailedListener() {
!             final WeatherManager this$0;
!             
!             public void onConnectionFailed(final ConnectionResult obj) {
!                 this.this$0.numConnectFails++;
!                 final StringBuilder sb = new StringBuilder();
!                 sb.append("failed ");
!                 sb.append(obj);
!                 sb.append("; num: ");
!                 sb.append(this.this$0.numConnectFails);
!                 L.w(sb.toString());
!                 if (this.this$0.numConnectFails < 5) {
!                     L.w("re-calling get()");
!                     this.this$0.get();
!                 }
!                 else {
!                     L.w("giving up");
!                 }
!             }
!         };
!         this.onWeatherResult = (ResultCallback<WeatherResult>)new ResultCallback<WeatherResult>() {
!             final WeatherManager this$0;
!             
!             public void onResult(final WeatherResult weatherResult) {
!                 this.this$0.isGetting = false;
!                 if (this.this$0.isStopped) {
!                     L.v("is stopped, so not committing result");
!                     this.this$0.afterResult(Result.STOPPED);
!                     return;
!                 }
!                 final Weather weather = weatherResult.getWeather();
!                 if (weather == null) {
!                     L.w("result is null");
!                     final StringBuilder sb = new StringBuilder();
!                     sb.append("Status code=");
!                     sb.append(((com.google.android.gms.common.api.Result)weatherResult).getStatus().getStatusCode());
!                     sb.append(" message=");
!                     sb.append(((com.google.android.gms.common.api.Result)weatherResult).getStatus().getStatusMessage());
!                     L.w(sb.toString());
!                     final StringBuilder sb2 = new StringBuilder();
!                     sb2.append("sanitycheck: is client connected? ");
!                     sb2.append(this.this$0.client.isConnected());
!                     L.w(sb2.toString());
!                     this.this$0.afterResult(Result.FAILED);
!                     return;
!                 }
!                 final WeatherManager this$0 = this.this$0;
!                 this$0.previousResult = this$0.result;
!                 this$0.result = this$0.weatherVoFromWeather(weather);
!                 this.this$0.resultTime = TimeUtil.nowMs();
!                 final StringBuilder sb3 = new StringBuilder();
!                 sb3.append("successful result: ");
!                 sb3.append(this.this$0.result.toString());
!                 L.v(sb3.toString());
!                 final WeatherManager this$2 = this.this$0;
!                 this$2.afterResult(Result.OKAY, this$2.result);
              }
-         };
-         final GoogleApiClient$Builder googleApiClient$Builder = new GoogleApiClient$Builder((Context)App.get());
-         googleApiClient$Builder.addApi(Awareness.API);
-         (this.client = googleApiClient$Builder.build()).registerConnectionCallbacks(this.connectionCallbacks);
-         this.client.registerConnectionFailedListener(this.connectionFailedListener);
-     }
-     
-     private WeatherVo weatherVoFromWeather(final Weather weather) {
-         final WeatherVo weatherVo = new WeatherVo();
-         weatherVo.conditions = weather.getConditions();
-         final int[] conditions = weatherVo.conditions;
-         if (conditions == null || conditions.length == 0) {
-             L.w("bad value was returned; using 'UNKNOWN");
-             weatherVo.conditions = new int[] { 0 };
          }
!         return weatherVo;
      }
!     
!     @Override
!     protected void doGet() {
!         if (ContextCompat.checkSelfPermission((Context)App.get(), "android.permission.ACCESS_FINE_LOCATION") != 0) {
!             L.w("no permissions");
!             this.afterResult(Result.FAILED_NO_PERMISSION);
              return;
          }
!         if (this.isGetting) {
!             L.v("get already in progress, aborting");
              return;
          }
!         if (this.client.isConnecting()) {
!             L.v("is currently connecting; aborting");
!             return;
          }
!         if (!this.client.isConnecting() && !this.client.isConnected()) {
!             L.v("going to connect() first, so aborting");
!             this.client.connect();
              return;
          }
-         this.isGetting = true;
          try {
!             L.v("getting weather from Awareness");
!             Awareness.SnapshotApi.getWeather(this.client).setResultCallback((ResultCallback)this.onWeatherResult);
!         }
!         catch (final SecurityException ex) {
              L.w("no permissions");
--- 6,100 ----
  
! 
! import android.content.BroadcastReceiver;
! import android.content.Context;
! import android.content.Intent;
! import android.content.IntentFilter;
! import androidx.localbroadcastmanager.content.LocalBroadcastManager;
  import com.ustwo.lwp.App;
! import com.ustwo.lwp.BuildConfig;
! import com.ustwo.lwp.R;
  import com.ustwo.lwp.util.L;
! import com.ustwo.lwp.wallpapers.util.owm.HttpUrlConnector;
! import com.ustwo.lwp.wallpapers.util.owm.OWMConnectorException;
! import com.ustwo.lwp.wallpapers.util.owm.OWMWeatherCode;
! import com.ustwo.lwp.wallpapers.util.owm.Util;
! 
! public class WeatherManager extends AbstractWeatherManager {
! 
!     private static final int WEATHER_THROTTLE_MS = 30 * 60 * 1000;
! 
!     private String API_KEY;
!     private OWMWeatherCode weather = null;
!     private final BroadcastReceiver apiKeyUpdateReciever = new BroadcastReceiver() {
!         @Override
!         public void onReceive(Context context, Intent intent) {
!             final String apiKey = intent.getStringExtra("api_key");
!             if (apiKey!= null) {
!                 L.v("got preferences_api_key_update - " + apiKey);
!                 API_KEY = apiKey;
              }
          }
!     };
! 
!     public WeatherManager(Context ctx) {
!         super(ctx);
!         LocalBroadcastManager.getInstance(App.get()).registerReceiver(apiKeyUpdateReciever,
!                 new IntentFilter("api_key_update"));
!         if (BuildConfig.DEBUG) {
!             API_KEY = App.preferences().getString("API_KEY", App.get().getResources().getString(R.string.OWM_API_KEY));
!         } else {
!             API_KEY = App.preferences().getString("API_KEY", "");
!         }
!         if (API_KEY.isEmpty()) {
!             L.w("API key not set");
!         }
!         L.v("Using API Key: " + API_KEY);
      }
! 
!     private void getWeather(double lat, double lon) {
!         if (API_KEY == null) {
!             weather = null;
              return;
          }
!         if (API_KEY.isEmpty()) {
!             weather = null;
              return;
          }
!         try {
!             OWMWeatherCode code = HttpUrlConnector.getWeatherCode(API_KEY, lat, lon);
!             L.v("Got weather " + code.getDescription());
! 
!             weather = code;
!         } catch (OWMConnectorException e) {
!             L.e("Error retrieving weather: " + e.getMessage());
! 
!             weather = null;
          }
!     }
! 
!     @Override
!     protected void doGet() {
!         long tempTime = TimeUtil.elapsedRealTimeSince(App.preferences().getLong("prevUpdateTime", 0L));
!         if (tempTime < WEATHER_THROTTLE_MS) {
!             L.d("Weather Throttling");
!             this.afterResult(Result.TOO_MANY_REQUESTS);
              return;
          }
          try {
!             double latitude = LocationManger.get().getCoord().getLat();
!             double longitude = LocationManger.get().getCoord().getLon();
!             getWeather(latitude, longitude);
!             if (weather != null) {
!                 result = weather.getWeatherVo();
!                 this.resultTime = TimeUtil.nowMs();
!                 App.preferences().edit().putLong("prevUpdateTime", resultTime).apply();
!                 App.preferences().edit().putString("current_weather_condition", weather.getDescription()).apply();
!                 App.preferences().edit().putString("current_weather_update_time", Util.epochToString(resultTime)).apply();
!                 L.v("successful result: " + result.toString());
!                 afterResult(Result.OKAY, result);
!             } else {
!                 L.v("failed");
!                 afterResult(Result.FAILED);
!             }
!         } catch (SecurityException var3) {
              L.w("no permissions");
***************
*** 151,152 ****
--- 103,109 ----
      }
+     @Override
+     public void destroy() {
+         super.destroy();
+         LocalBroadcastManager.getInstance(App.get()).unregisterReceiver(apiKeyUpdateReciever);
+     }
  }
diff '--context=1' --strip-trailing-cr -r app/src/main/java/com/ustwo/lwp/wallpapers/util/WeatherVo.java new/src/main/java/com/ustwo/lwp/wallpapers/util/WeatherVo.java
*** app/src/main/java/com/ustwo/lwp/wallpapers/util/WeatherVo.java	Wed May  1 13:03:34 2024
--- new/src/main/java/com/ustwo/lwp/wallpapers/util/WeatherVo.java	Wed May  1 21:29:18 2024
***************
*** 8,53 ****
  {
!     private static final String[] conditionStrings;
      public int[] conditions;
      
-     static {
-         conditionStrings = new String[] { "UNKNOWN", "CLEAR", "CLOUDY", "FOGGY", "HAZY", "ICY", "RAINY", "SNOWY", "STORMY", "WINDY" };
-     }
-     
      public static String conditionString(final int n) {
!         return WeatherVo.conditionStrings[n];
      }
!     
!     private String printConditions() {
!         String str = "";
!         int n = 0;
!         while (true) {
!             final int[] conditions = this.conditions;
!             if (n >= conditions.length) {
!                 break;
!             }
!             final int i = conditions[n];
!             final StringBuilder sb = new StringBuilder();
!             sb.append(str);
!             sb.append(WeatherVo.conditionStrings[i]);
!             sb.append(" (");
!             sb.append(i);
!             sb.append(")");
!             final String str2 = str = sb.toString();
!             if (n < this.conditions.length - 1) {
!                 final StringBuilder sb2 = new StringBuilder();
!                 sb2.append(str2);
!                 sb2.append(", ");
!                 str = sb2.toString();
!             }
!             ++n;
!         }
!         return str;
!     }
!     
      @Override
      public String toString() {
!         final StringBuilder sb = new StringBuilder();
!         sb.append("[WeatherVo] conditions: ");
!         sb.append(this.printConditions());
!         return sb.toString();
      }
--- 8,36 ----
  {
!     private static final String[] conditionStrings =
!             new String[]{
!                     "UNKNOWN",
!                     "CLEAR",
!                     "CLOUDY",
!                     "FOGGY",
!                     "HAZY",
!                     "ICY",
!                     "RAINY",
!                     "SNOWY",
!                     "STORMY",
!                     "WINDY"
!             };
      public int[] conditions;
      
      public static String conditionString(final int n) {
!         return conditionStrings[n];
      }
! 
      @Override
      public String toString() {
!         StringBuilder output = new StringBuilder();
!         output.append("[WeatherVo] conditions: ");
!         for (int condition : conditions) {
!             output.append(conditionStrings[condition]).append(" (").append(condition).append("), ");
!         }
!         return output.toString();
      }
diff '--context=1' --strip-trailing-cr -r app/src/main/res/values/strings.xml new/src/main/res/values/strings.xml
*** app/src/main/res/values/strings.xml	Wed May  1 12:59:54 2024
--- new/src/main/res/values/strings.xml	Mon Apr 29 14:25:40 2024
***************
*** 2,87 ****
  <resources>
-     <string name="abc_action_bar_home_description">Navigate home</string>
-     <string name="abc_action_bar_up_description">Navigate up</string>
-     <string name="abc_action_menu_overflow_description">More options</string>
-     <string name="abc_action_mode_done">Done</string>
-     <string name="abc_activity_chooser_view_see_all">See all</string>
-     <string name="abc_activitychooserview_choose_application">Choose an app</string>
-     <string name="abc_capital_off">OFF</string>
-     <string name="abc_capital_on">ON</string>
-     <string name="abc_menu_alt_shortcut_label">Alt+</string>
-     <string name="abc_menu_ctrl_shortcut_label">Ctrl+</string>
-     <string name="abc_menu_delete_shortcut_label">delete</string>
-     <string name="abc_menu_enter_shortcut_label">enter</string>
-     <string name="abc_menu_function_shortcut_label">Function+</string>
-     <string name="abc_menu_meta_shortcut_label">Meta+</string>
-     <string name="abc_menu_shift_shortcut_label">Shift+</string>
-     <string name="abc_menu_space_shortcut_label">space</string>
-     <string name="abc_menu_sym_shortcut_label">Sym+</string>
-     <string name="abc_prepend_shortcut_label">Menu+</string>
-     <string name="abc_search_hint">Search…</string>
-     <string name="abc_searchview_description_clear">Clear query</string>
-     <string name="abc_searchview_description_query">Search query</string>
-     <string name="abc_searchview_description_search">Search</string>
-     <string name="abc_searchview_description_submit">Submit query</string>
-     <string name="abc_searchview_description_voice">Voice search</string>
-     <string name="abc_shareactionprovider_share_with">Share with</string>
-     <string name="abc_shareactionprovider_share_with_application">Share with %s</string>
-     <string name="abc_toolbar_collapse_description">Collapse</string>
      <string name="app_label">Live data wallpapers</string>
      <string name="collection_label">Live data series</string>
-     <string name="common_google_play_services_api_unavailable_text">%1$s requires one or more Google Play services that are not currently available. Please contact the developer for assistance.</string>
-     <string name="common_google_play_services_enable_button">Enable Google Play services</string>
-     <string name="common_google_play_services_enable_text">"%1$s won't work unless you enable Google Play services."</string>
-     <string name="common_google_play_services_enable_title">Enable Google Play services</string>
-     <string name="common_google_play_services_install_button">Get Google Play services</string>
-     <string name="common_google_play_services_install_text_phone">"%1$s won't run without Google Play services, which are missing from your phone."</string>
-     <string name="common_google_play_services_install_text_tablet">"%1$s won't run without Google Play services, which are missing from your tablet."</string>
-     <string name="common_google_play_services_install_title">Get Google Play services</string>
-     <string name="common_google_play_services_invalid_account_text">The specified account does not exist on this device. Please choose a different account.</string>
-     <string name="common_google_play_services_invalid_account_title">Invalid Account</string>
-     <string name="common_google_play_services_network_error_text">A data connection is required to connect to Google Play services.</string>
-     <string name="common_google_play_services_network_error_title">Network Error</string>
-     <string name="common_google_play_services_notification_ticker">Google Play services error</string>
-     <string name="common_google_play_services_resolution_required_text">Please complete action required by %1$s.</string>
-     <string name="common_google_play_services_resolution_required_title">Google Play services requires an action</string>
-     <string name="common_google_play_services_restricted_profile_text">Accessing accounts from a restricted profile is not supported.</string>
-     <string name="common_google_play_services_restricted_profile_title">Restricted Profile</string>
-     <string name="common_google_play_services_sign_in_failed_text">Error signing in the specified account. Please choose a different account.</string>
-     <string name="common_google_play_services_sign_in_failed_title">Sign in failed</string>
-     <string name="common_google_play_services_unknown_issue">%1$s is having trouble with Google Play services. If the problem persists, please contact the developer for assistance.</string>
-     <string name="common_google_play_services_unsupported_text">%1$s relies on Google Play services, which is not supported by your device. Contact the manufacturer for assistance.</string>
-     <string name="common_google_play_services_unsupported_title">Google Play services</string>
-     <string name="common_google_play_services_update_button">Update</string>
-     <string name="common_google_play_services_update_text">"%1$s won't run unless you update Google Play services."</string>
-     <string name="common_google_play_services_update_title">Update Google Play services</string>
-     <string name="common_google_play_services_updating_text">"%1$s won't run without Google Play services, which are currently updating."</string>
-     <string name="common_google_play_services_updating_title">Google Play services are updating</string>
-     <string name="common_google_play_services_wear_update_text">New version of Google Play services needed. It will update itself shortly.</string>
-     <string name="common_open_on_phone">Open on phone</string>
-     <string name="common_signin_button_text">Sign in</string>
-     <string name="common_signin_button_text_long">Sign in with Google</string>
-     <string name="debug_activity_label">Live Wallpaper Dev UI</string>
-     <string name="debug_awareness_log_button">AWARE LOG</string>
-     <string name="debug_awareness_log_clear">CLEAR</string>
-     <string name="debug_bench">BENCH</string>
-     <string name="debug_message" />
-     <string name="debug_orbit_button">Orbit</string>
-     <string name="debug_orbit_desc">"- Removed 'white/red' and 'black b' from build"</string>
-     <string name="debug_orbit_last_updated">Last updated: 6/23</string>
-     <string name="debug_shadow_button">Shadow</string>
-     <string name="debug_shadow_desc">"- Clear condition has slightly softer shadow
- 
- - Refined motion (unlock anim, plus user touch)
- 
- - Replaced all colorways
- 
- - Lowered framerate
- 
- - Major code refactor, performance improvements"</string>
-     <string name="debug_shadow_last_updated">Last updated: 6/15</string>
-     <string name="debug_timelapse_button">Timelapse</string>
-     <string name="debug_timelapse_desc">"- Unlock transition shortened by half a second
- 
- - Unlock transition now 60fps"</string>
-     <string name="debug_timelapse_last_updated">Last updated: 6/23</string>
      <string name="orbit_description">"These shapes aren't lost in space. Follow along as they move around the screen, hinting at the current time."</string>
--- 2,5 ----
***************
*** 90,108 ****
      <string name="orbit_label_3">Orbit, Radiant blue</string>
-     <string name="orbit_tester_accel">Accelerated time</string>
-     <string name="orbit_tester_activity_label">Orbit tester</string>
-     <string name="orbit_tester_config_1">white</string>
-     <string name="orbit_tester_config_2">black</string>
-     <string name="orbit_tester_config_3">blue</string>
-     <string name="orbit_tester_config_header">Configurations</string>
-     <string name="orbit_tester_time_1">10:10</string>
-     <string name="orbit_tester_time_2">12:00</string>
-     <string name="orbit_tester_time_3">2:25</string>
-     <string name="orbit_tester_time_4">8:53</string>
-     <string name="orbit_tester_time_5">12:20</string>
-     <string name="orbit_tester_time_header">Time</string>
-     <string name="orbit_tester_time_now">now</string>
-     <string name="permissions_activity_label" />
-     <string name="place_autocomplete_clear_button">Clear search</string>
-     <string name="place_autocomplete_search_hint">Search</string>
-     <string name="search_menu_title">Search</string>
      <string name="shadow_description">Watch as shadows move across your screen, responding to your current time and weather conditions.</string>
--- 8,9 ----
***************
*** 114,163 ****
      <string name="shadow_label_6">Shadow, Twilight blue</string>
-     <string name="shadow_tester_accel_heading">(3) Run with accelerated time + fast-changing, random weather</string>
-     <string name="shadow_tester_activity_label">Shadow tester</string>
-     <string name="shadow_tester_colors_1">white</string>
-     <string name="shadow_tester_colors_2">black</string>
-     <string name="shadow_tester_colors_3">blue</string>
-     <string name="shadow_tester_colors_4">green</string>
-     <string name="shadow_tester_colors_5">rose</string>
-     <string name="shadow_tester_colors_6">dark blue</string>
-     <string name="shadow_tester_colors_header">Colorway</string>
-     <string name="shadow_tester_cust_heading">(1) Run with custom settings</string>
-     <string name="shadow_tester_cust_tod_day">daytime</string>
-     <string name="shadow_tester_cust_tod_night">nighttime</string>
-     <string name="shadow_tester_cust_tod_sub">Time of day</string>
-     <string name="shadow_tester_cust_tod_sunrise">sunrise/sunset</string>
-     <string name="shadow_tester_cust_weather_sub">Weather condition</string>
-     <string name="shadow_tester_disable_osc">Disable shadow opacity oscillation</string>
-     <string name="shadow_tester_realtime_heading">(2) Run with realtime settings</string>
-     <string name="shadow_tester_realtime_sub">(Real weather data only possible w/ special Android system build ATM)</string>
-     <string name="status_bar_notification_info_overflow">999+</string>
-     <string name="tester_button_start">start</string>
-     <string name="tester_weather_clear">clear</string>
-     <string name="tester_weather_cloudy">cloudy</string>
-     <string name="tester_weather_foggy">foggy</string>
-     <string name="tester_weather_hazy">hazy</string>
-     <string name="tester_weather_icy">icy</string>
-     <string name="tester_weather_rainy">rainy</string>
-     <string name="tester_weather_snowy">snowy</string>
-     <string name="tester_weather_stormy">stormy</string>
-     <string name="tester_weather_unknown">unknown</string>
-     <string name="tester_weather_windy">windy</string>
      <string name="timelapse_description">Watch your day unfold in beautiful gradients as Time Lapse reacts to time and weather conditions.</string>
      <string name="timelapse_label">Aurora, Time lapse</string>
!     <string name="timelapse_tester_activity_label">Timelapse tester</string>
!     <string name="timelapse_tester_custom_disable_osc">Disable color oscillation</string>
!     <string name="timelapse_tester_custom_header">Run with custom settings</string>
!     <string name="timelapse_tester_custom_options_header">(3) Optional</string>
!     <string name="timelapse_tester_custom_options_next_tod">Animate to next time of day, or</string>
!     <string name="timelapse_tester_custom_options_next_weather">Animate to this weather condition...</string>
!     <string name="timelapse_tester_custom_tod_header">(2) Choose time of day</string>
!     <string name="timelapse_tester_custom_weather_header">(1) Choose weather conditions</string>
!     <string name="timelapse_tester_realtime_header">Run with realtime settings</string>
!     <string name="timelapse_tester_realtime_sub">(Real weather data only possible w/ special Android system build ATM)</string>
!     <string name="timelapse_tester_tod_dawn">dawn</string>
!     <string name="timelapse_tester_tod_daytime">daytime</string>
!     <string name="timelapse_tester_tod_dusk">dusk</string>
!     <string name="timelapse_tester_tod_night">night</string>
!     <string name="timelapse_tester_tod_sunrise">sunrise</string>
!     <string name="timelapse_tester_tod_sunset">sunset</string>
  </resources>
--- 15,29 ----
      <string name="shadow_label_6">Shadow, Twilight blue</string>
      <string name="timelapse_description">Watch your day unfold in beautiful gradients as Time Lapse reacts to time and weather conditions.</string>
      <string name="timelapse_label">Aurora, Time lapse</string>
! 
!     <string name="OWM_API_KEY"></string>
!     <string name="button_location_dialog">Permit location access</string>
!     <string name="button_set_api_key">Set API KEY</string>
!     <string name="button_update_weather">Update weather conditions now</string>
!     <string name="api_key_apply_success">Api key apply success</string>
!     <string name="api_key_apply_failed">Invalid api key</string>
!     <string name="required_setup">Additional setup required, check wallpaper settings</string>
!     <string name="open_weather_map_api_key_static">Open Weather Map API Key:</string>
!     <string name="unknown_static">unknown</string>
!     <string name="api_key_hint_static">API KEY</string>
  </resources>
diff '--context=1' --strip-trailing-cr -r app/src/main/res/values/styles.xml new/src/main/res/values/styles.xml
*** app/src/main/res/values/styles.xml	Wed May  1 12:59:54 2024
--- new/src/main/res/values/styles.xml	Mon Apr 29 14:25:40 2024
***************
*** 2,1133 ****
  <resources>
!     <style name="AlertDialog.AppCompat" parent="@style/Base.AlertDialog.AppCompat" />
!     <style name="AlertDialog.AppCompat.Light" parent="@style/Base.AlertDialog.AppCompat.Light" />
!     <style name="Animation.AppCompat.Dialog" parent="@style/Base.Animation.AppCompat.Dialog" />
!     <style name="Animation.AppCompat.DropDownUp" parent="@style/Base.Animation.AppCompat.DropDownUp" />
!     <style name="Animation.AppCompat.Tooltip" parent="@style/Base.Animation.AppCompat.Tooltip" />
!     <style name="AppTheme" parent="@style/Theme.AppCompat.Light.DarkActionBar">
!         <item name="colorAccent">#ffff4081</item>
!         <item name="colorPrimary">#ff3f51b5</item>
!         <item name="colorPrimaryDark">#ff303f9f</item>
!     </style>
!     <style name="Base.AlertDialog.AppCompat" parent="@android:style/Widget">
!         <item name="android:layout">@layout/abc_alert_dialog_material</item>
!         <item name="buttonIconDimen">@dimen/abc_alert_dialog_button_dimen</item>
!         <item name="listItemLayout">@layout/select_dialog_item_material</item>
!         <item name="listLayout">@layout/abc_select_dialog_material</item>
!         <item name="multiChoiceItemLayout">@layout/select_dialog_multichoice_material</item>
!         <item name="singleChoiceItemLayout">@layout/select_dialog_singlechoice_material</item>
!     </style>
!     <style name="Base.AlertDialog.AppCompat.Light" parent="@style/Base.AlertDialog.AppCompat" />
!     <style name="Base.Animation.AppCompat.Dialog" parent="@android:style/Animation">
!         <item name="android:windowEnterAnimation">@anim/abc_popup_enter</item>
!         <item name="android:windowExitAnimation">@anim/abc_popup_exit</item>
!     </style>
!     <style name="Base.Animation.AppCompat.DropDownUp" parent="@android:style/Animation">
!         <item name="android:windowEnterAnimation">@anim/abc_grow_fade_in_from_bottom</item>
!         <item name="android:windowExitAnimation">@anim/abc_shrink_fade_out_from_bottom</item>
!     </style>
!     <style name="Base.Animation.AppCompat.Tooltip" parent="@android:style/Animation">
!         <item name="android:windowEnterAnimation">@anim/abc_tooltip_enter</item>
!         <item name="android:windowExitAnimation">@anim/abc_tooltip_exit</item>
!     </style>
!     <style name="Base.DialogWindowTitle.AppCompat" parent="@android:style/Widget">
!         <item name="android:textAppearance">@style/TextAppearance.AppCompat.Title</item>
!         <item name="android:maxLines">1</item>
!         <item name="android:scrollHorizontally">true</item>
!     </style>
!     <style name="Base.DialogWindowTitleBackground.AppCompat" parent="@android:style/Widget">
!         <item name="android:background">@null</item>
!         <item name="android:paddingLeft">?dialogPreferredPadding</item>
!         <item name="android:paddingTop">@dimen/abc_dialog_padding_top_material</item>
!         <item name="android:paddingRight">?dialogPreferredPadding</item>
!     </style>
!     <style name="Base.TextAppearance.AppCompat" parent="@android:style/TextAppearance.Material" />
!     <style name="Base.TextAppearance.AppCompat.Body1" parent="@android:style/TextAppearance.Material.Body1" />
!     <style name="Base.TextAppearance.AppCompat.Body2" parent="@android:style/TextAppearance.Material.Body2" />
!     <style name="Base.TextAppearance.AppCompat.Button" parent="@android:style/TextAppearance.Material.Button" />
!     <style name="Base.TextAppearance.AppCompat.Caption" parent="@android:style/TextAppearance.Material.Caption" />
!     <style name="Base.TextAppearance.AppCompat.Display1" parent="@android:style/TextAppearance.Material.Display1" />
!     <style name="Base.TextAppearance.AppCompat.Display2" parent="@android:style/TextAppearance.Material.Display2" />
!     <style name="Base.TextAppearance.AppCompat.Display3" parent="@android:style/TextAppearance.Material.Display3" />
!     <style name="Base.TextAppearance.AppCompat.Display4" parent="@android:style/TextAppearance.Material.Display4" />
!     <style name="Base.TextAppearance.AppCompat.Headline" parent="@android:style/TextAppearance.Material.Headline" />
!     <style name="Base.TextAppearance.AppCompat.Inverse" parent="@android:style/TextAppearance.Material.Inverse" />
!     <style name="Base.TextAppearance.AppCompat.Large" parent="@android:style/TextAppearance.Material.Large" />
!     <style name="Base.TextAppearance.AppCompat.Large.Inverse" parent="@android:style/TextAppearance.Material.Large.Inverse" />
!     <style name="Base.TextAppearance.AppCompat.Light.Widget.PopupMenu.Large" parent="@android:style/TextAppearance.Material.Widget.PopupMenu.Large" />
!     <style name="Base.TextAppearance.AppCompat.Light.Widget.PopupMenu.Small" parent="@android:style/TextAppearance.Material.Widget.PopupMenu.Small" />
!     <style name="Base.TextAppearance.AppCompat.Medium" parent="@android:style/TextAppearance.Material.Medium" />
!     <style name="Base.TextAppearance.AppCompat.Medium.Inverse" parent="@android:style/TextAppearance.Material.Medium.Inverse" />
!     <style name="Base.TextAppearance.AppCompat.Menu" parent="@android:style/TextAppearance.Material.Menu" />
!     <style name="Base.TextAppearance.AppCompat.SearchResult" parent="">
!         <item name="android:textStyle">normal</item>
!         <item name="android:textColor">?android:textColorPrimary</item>
!         <item name="android:textColorHint">?android:textColorHint</item>
!     </style>
!     <style name="Base.TextAppearance.AppCompat.SearchResult.Subtitle" parent="@android:style/TextAppearance.Material.SearchResult.Subtitle" />
!     <style name="Base.TextAppearance.AppCompat.SearchResult.Title" parent="@android:style/TextAppearance.Material.SearchResult.Title" />
!     <style name="Base.TextAppearance.AppCompat.Small" parent="@android:style/TextAppearance.Material.Small" />
!     <style name="Base.TextAppearance.AppCompat.Small.Inverse" parent="@android:style/TextAppearance.Material.Small.Inverse" />
!     <style name="Base.TextAppearance.AppCompat.Subhead" parent="@android:style/TextAppearance.Material.Subhead" />
!     <style name="Base.TextAppearance.AppCompat.Subhead.Inverse" parent="@style/Base.TextAppearance.AppCompat.Subhead">
!         <item name="android:textColor">?android:textColorPrimaryInverse</item>
!         <item name="android:textColorHighlight">?android:textColorHighlightInverse</item>
!         <item name="android:textColorHint">?android:textColorHintInverse</item>
!         <item name="android:textColorLink">?android:textColorLinkInverse</item>
!     </style>
!     <style name="Base.TextAppearance.AppCompat.Title" parent="@android:style/TextAppearance.Material.Title" />
!     <style name="Base.TextAppearance.AppCompat.Title.Inverse" parent="@style/Base.TextAppearance.AppCompat.Title">
!         <item name="android:textColor">?android:textColorPrimaryInverse</item>
!         <item name="android:textColorHighlight">?android:textColorHighlightInverse</item>
!         <item name="android:textColorHint">?android:textColorHintInverse</item>
!         <item name="android:textColorLink">?android:textColorLinkInverse</item>
!     </style>
!     <style name="Base.TextAppearance.AppCompat.Tooltip" parent="@style/Base.TextAppearance.AppCompat">
!         <item name="android:textSize">14.0sp</item>
!     </style>
!     <style name="Base.TextAppearance.AppCompat.Widget.ActionBar.Menu" parent="@android:style/TextAppearance.Material.Widget.ActionBar.Menu" />
!     <style name="Base.TextAppearance.AppCompat.Widget.ActionBar.Subtitle" parent="@android:style/TextAppearance.Material.Widget.ActionBar.Subtitle" />
!     <style name="Base.TextAppearance.AppCompat.Widget.ActionBar.Subtitle.Inverse" parent="@android:style/TextAppearance.Material.Widget.ActionBar.Subtitle.Inverse" />
!     <style name="Base.TextAppearance.AppCompat.Widget.ActionBar.Title" parent="@android:style/TextAppearance.Material.Widget.ActionBar.Title" />
!     <style name="Base.TextAppearance.AppCompat.Widget.ActionBar.Title.Inverse" parent="@android:style/TextAppearance.Material.Widget.ActionBar.Title.Inverse" />
!     <style name="Base.TextAppearance.AppCompat.Widget.ActionMode.Subtitle" parent="@android:style/TextAppearance.Material.Widget.ActionMode.Subtitle" />
!     <style name="Base.TextAppearance.AppCompat.Widget.ActionMode.Title" parent="@android:style/TextAppearance.Material.Widget.ActionMode.Title" />
!     <style name="Base.TextAppearance.AppCompat.Widget.Button" parent="@android:style/TextAppearance.Material.Widget.Button" />
!     <style name="Base.TextAppearance.AppCompat.Widget.Button.Borderless.Colored" parent="@android:style/TextAppearance.Material.Widget.Button.Borderless.Colored" />
!     <style name="Base.TextAppearance.AppCompat.Widget.Button.Colored" parent="@android:style/TextAppearance.Material.Widget.Button.Colored" />
!     <style name="Base.TextAppearance.AppCompat.Widget.Button.Inverse" parent="@android:style/TextAppearance.Material.Widget.Button.Inverse" />
!     <style name="Base.TextAppearance.AppCompat.Widget.DropDownItem" parent="@android:style/TextAppearance.Small">
!         <item name="android:textColor">?android:textColorPrimaryDisableOnly</item>
!     </style>
!     <style name="Base.TextAppearance.AppCompat.Widget.PopupMenu.Header" parent="@style/TextAppearance.AppCompat">
!         <item name="android:textSize">@dimen/abc_text_size_menu_header_material</item>
!         <item name="android:textColor">?android:textColorSecondary</item>
!         <item name="android:fontFamily">sans-serif-medium</item>
!     </style>
!     <style name="Base.TextAppearance.AppCompat.Widget.PopupMenu.Large" parent="@android:style/TextAppearance.Material.Widget.PopupMenu.Large" />
!     <style name="Base.TextAppearance.AppCompat.Widget.PopupMenu.Small" parent="@android:style/TextAppearance.Material.Widget.PopupMenu.Small" />
!     <style name="Base.TextAppearance.AppCompat.Widget.Switch" parent="@android:style/TextAppearance.Material.Button" />
!     <style name="Base.TextAppearance.AppCompat.Widget.TextView.SpinnerItem" parent="@android:style/TextAppearance.Material.Widget.TextView.SpinnerItem" />
!     <style name="Base.TextAppearance.Widget.AppCompat.ExpandedMenu.Item" parent="@android:style/TextAppearance.Medium">
!         <item name="android:textColor">?android:textColorPrimaryDisableOnly</item>
!     </style>
!     <style name="Base.TextAppearance.Widget.AppCompat.Toolbar.Subtitle" parent="@android:style/TextAppearance.Material.Widget.ActionBar.Subtitle" />
!     <style name="Base.TextAppearance.Widget.AppCompat.Toolbar.Title" parent="@android:style/TextAppearance.Material.Widget.ActionBar.Title" />
!     <style name="Base.Theme.AppCompat" parent="@style/Base.V28.Theme.AppCompat" />
!     <style name="Base.Theme.AppCompat.CompactMenu" parent="">
!         <item name="android:listViewStyle">@style/Widget.AppCompat.ListView.Menu</item>
!         <item name="android:windowAnimationStyle">@style/Animation.AppCompat.DropDownUp</item>
!         <item name="android:itemTextAppearance">?android:textAppearanceMedium</item>
!     </style>
!     <style name="Base.Theme.AppCompat.Dialog" parent="@style/Base.V21.Theme.AppCompat.Dialog" />
!     <style name="Base.Theme.AppCompat.Dialog.Alert" parent="@style/Base.Theme.AppCompat.Dialog">
!         <item name="android:windowMinWidthMajor">@dimen/abc_dialog_min_width_major</item>
!         <item name="android:windowMinWidthMinor">@dimen/abc_dialog_min_width_minor</item>
!     </style>
!     <style name="Base.Theme.AppCompat.Dialog.FixedSize" parent="@style/Base.Theme.AppCompat.Dialog">
!         <item name="windowFixedHeightMajor">@dimen/abc_dialog_fixed_height_major</item>
!         <item name="windowFixedHeightMinor">@dimen/abc_dialog_fixed_height_minor</item>
!         <item name="windowFixedWidthMajor">@dimen/abc_dialog_fixed_width_major</item>
!         <item name="windowFixedWidthMinor">@dimen/abc_dialog_fixed_width_minor</item>
!     </style>
!     <style name="Base.Theme.AppCompat.Dialog.MinWidth" parent="@style/Base.Theme.AppCompat.Dialog">
!         <item name="android:windowMinWidthMajor">@dimen/abc_dialog_min_width_major</item>
!         <item name="android:windowMinWidthMinor">@dimen/abc_dialog_min_width_minor</item>
!     </style>
!     <style name="Base.Theme.AppCompat.DialogWhenLarge" parent="@style/Theme.AppCompat" />
!     <style name="Base.Theme.AppCompat.Light" parent="@style/Base.V28.Theme.AppCompat.Light" />
!     <style name="Base.Theme.AppCompat.Light.DarkActionBar" parent="@style/Base.Theme.AppCompat.Light">
!         <item name="actionBarPopupTheme">@style/ThemeOverlay.AppCompat.Light</item>
!         <item name="actionBarTheme">@style/ThemeOverlay.AppCompat.Dark.ActionBar</item>
!         <item name="actionBarWidgetTheme">@null</item>
!         <item name="colorPrimary">@color/primary_material_dark</item>
!         <item name="colorPrimaryDark">@color/primary_dark_material_dark</item>
!         <item name="listChoiceBackgroundIndicator">@drawable/abc_list_selector_holo_dark</item>
!     </style>
!     <style name="Base.Theme.AppCompat.Light.Dialog" parent="@style/Base.V21.Theme.AppCompat.Light.Dialog" />
!     <style name="Base.Theme.AppCompat.Light.Dialog.Alert" parent="@style/Base.Theme.AppCompat.Light.Dialog">
!         <item name="android:windowMinWidthMajor">@dimen/abc_dialog_min_width_major</item>
!         <item name="android:windowMinWidthMinor">@dimen/abc_dialog_min_width_minor</item>
!     </style>
!     <style name="Base.Theme.AppCompat.Light.Dialog.FixedSize" parent="@style/Base.Theme.AppCompat.Light.Dialog">
!         <item name="windowFixedHeightMajor">@dimen/abc_dialog_fixed_height_major</item>
!         <item name="windowFixedHeightMinor">@dimen/abc_dialog_fixed_height_minor</item>
!         <item name="windowFixedWidthMajor">@dimen/abc_dialog_fixed_width_major</item>
!         <item name="windowFixedWidthMinor">@dimen/abc_dialog_fixed_width_minor</item>
!     </style>
!     <style name="Base.Theme.AppCompat.Light.Dialog.MinWidth" parent="@style/Base.Theme.AppCompat.Light.Dialog">
!         <item name="android:windowMinWidthMajor">@dimen/abc_dialog_min_width_major</item>
!         <item name="android:windowMinWidthMinor">@dimen/abc_dialog_min_width_minor</item>
!     </style>
!     <style name="Base.Theme.AppCompat.Light.DialogWhenLarge" parent="@style/Theme.AppCompat.Light" />
!     <style name="Base.ThemeOverlay.AppCompat" parent="@style/Platform.ThemeOverlay.AppCompat" />
!     <style name="Base.ThemeOverlay.AppCompat.ActionBar" parent="@style/Base.ThemeOverlay.AppCompat">
!         <item name="colorControlNormal">?android:textColorPrimary</item>
!         <item name="searchViewStyle">@style/Widget.AppCompat.SearchView.ActionBar</item>
!     </style>
!     <style name="Base.ThemeOverlay.AppCompat.Dark" parent="@style/Platform.ThemeOverlay.AppCompat.Dark">
!         <item name="android:colorForeground">@color/foreground_material_dark</item>
!         <item name="android:colorBackground">@color/background_material_dark</item>
!         <item name="android:textColorPrimary">@color/abc_primary_text_material_dark</item>
!         <item name="android:textColorPrimaryDisableOnly">@color/abc_primary_text_disable_only_material_dark</item>
!         <item name="android:textColorSecondary">@color/abc_secondary_text_material_dark</item>
!         <item name="android:textColorPrimaryInverse">@color/abc_primary_text_material_light</item>
!         <item name="android:textColorSecondaryInverse">@color/abc_secondary_text_material_light</item>
!         <item name="android:textColorHintInverse">@color/abc_hint_foreground_material_light</item>
!         <item name="android:windowBackground">@color/background_material_dark</item>
!         <item name="android:textColorHighlight">@color/highlighted_text_material_dark</item>
!         <item name="android:textColorHint">@color/abc_hint_foreground_material_dark</item>
!         <item name="android:colorForegroundInverse">@color/foreground_material_light</item>
!         <item name="android:textColorTertiary">@color/abc_secondary_text_material_dark</item>
!         <item name="android:textColorTertiaryInverse">@color/abc_secondary_text_material_light</item>
!         <item name="android:colorBackgroundCacheHint">@color/abc_background_cache_hint_selector_material_dark</item>
!         <item name="colorBackgroundFloating">@color/background_floating_material_dark</item>
!         <item name="colorButtonNormal">@color/button_material_dark</item>
!         <item name="colorControlHighlight">@color/ripple_material_dark</item>
!         <item name="colorControlNormal">?android:textColorSecondary</item>
!         <item name="colorSwitchThumbNormal">@color/switch_thumb_material_dark</item>
!         <item name="isLightTheme">false</item>
!     </style>
!     <style name="Base.ThemeOverlay.AppCompat.Dark.ActionBar" parent="@style/Base.ThemeOverlay.AppCompat.Dark">
!         <item name="colorControlNormal">?android:textColorPrimary</item>
!         <item name="searchViewStyle">@style/Widget.AppCompat.SearchView.ActionBar</item>
!     </style>
!     <style name="Base.ThemeOverlay.AppCompat.Dialog" parent="@style/Base.V21.ThemeOverlay.AppCompat.Dialog" />
!     <style name="Base.ThemeOverlay.AppCompat.Dialog.Alert" parent="@style/Base.ThemeOverlay.AppCompat.Dialog">
!         <item name="android:windowMinWidthMajor">@dimen/abc_dialog_min_width_major</item>
!         <item name="android:windowMinWidthMinor">@dimen/abc_dialog_min_width_minor</item>
!     </style>
!     <style name="Base.ThemeOverlay.AppCompat.Light" parent="@style/Platform.ThemeOverlay.AppCompat.Light">
!         <item name="android:colorForeground">@color/foreground_material_light</item>
!         <item name="android:colorBackground">@color/background_material_light</item>
!         <item name="android:textColorPrimary">@color/abc_primary_text_material_light</item>
!         <item name="android:textColorPrimaryDisableOnly">@color/abc_primary_text_disable_only_material_light</item>
!         <item name="android:textColorSecondary">@color/abc_secondary_text_material_light</item>
!         <item name="android:textColorPrimaryInverse">@color/abc_primary_text_material_dark</item>
!         <item name="android:textColorSecondaryInverse">@color/abc_secondary_text_material_dark</item>
!         <item name="android:textColorHintInverse">@color/abc_hint_foreground_material_dark</item>
!         <item name="android:windowBackground">@color/background_material_light</item>
!         <item name="android:textColorHighlight">@color/highlighted_text_material_light</item>
!         <item name="android:textColorHint">@color/abc_hint_foreground_material_light</item>
!         <item name="android:colorForegroundInverse">@color/foreground_material_dark</item>
!         <item name="android:textColorTertiary">@color/abc_secondary_text_material_light</item>
!         <item name="android:textColorTertiaryInverse">@color/abc_secondary_text_material_dark</item>
!         <item name="android:textColorPrimaryInverseDisableOnly">@color/abc_primary_text_disable_only_material_dark</item>
!         <item name="android:colorBackgroundCacheHint">@color/abc_background_cache_hint_selector_material_light</item>
!         <item name="colorBackgroundFloating">@color/background_floating_material_light</item>
!         <item name="colorButtonNormal">@color/button_material_light</item>
!         <item name="colorControlHighlight">@color/ripple_material_light</item>
!         <item name="colorControlNormal">?android:textColorSecondary</item>
!         <item name="colorSwitchThumbNormal">@color/switch_thumb_material_light</item>
!         <item name="isLightTheme">true</item>
!     </style>
!     <style name="Base.V21.Theme.AppCompat" parent="@style/Base.V7.Theme.AppCompat">
!         <item name="android:colorControlNormal">?colorControlNormal</item>
!         <item name="android:colorControlActivated">?colorControlActivated</item>
!         <item name="android:colorButtonNormal">?colorButtonNormal</item>
!         <item name="android:colorControlHighlight">?colorControlHighlight</item>
!         <item name="android:colorPrimary">?colorPrimary</item>
!         <item name="android:colorPrimaryDark">?colorPrimaryDark</item>
!         <item name="android:colorAccent">?colorAccent</item>
!         <item name="actionBarDivider">?android:actionBarDivider</item>
!         <item name="actionBarItemBackground">@drawable/abc_action_bar_item_background_material</item>
!         <item name="actionBarSize">?android:actionBarSize</item>
!         <item name="actionButtonStyle">?android:actionButtonStyle</item>
!         <item name="actionModeBackground">?android:actionModeBackground</item>
!         <item name="actionModeCloseDrawable">?android:actionModeCloseDrawable</item>
!         <item name="borderlessButtonStyle">?android:borderlessButtonStyle</item>
!         <item name="buttonStyle">?android:buttonStyle</item>
!         <item name="buttonStyleSmall">?android:buttonStyleSmall</item>
!         <item name="checkboxStyle">?android:checkboxStyle</item>
!         <item name="checkedTextViewStyle">?android:checkedTextViewStyle</item>
!         <item name="dividerHorizontal">?android:dividerHorizontal</item>
!         <item name="dividerVertical">?android:dividerVertical</item>
!         <item name="editTextBackground">@drawable/abc_edit_text_material</item>
!         <item name="editTextColor">?android:editTextColor</item>
!         <item name="homeAsUpIndicator">?android:homeAsUpIndicator</item>
!         <item name="listChoiceBackgroundIndicator">?android:listChoiceBackgroundIndicator</item>
!         <item name="listPreferredItemHeightSmall">?android:listPreferredItemHeightSmall</item>
!         <item name="radioButtonStyle">?android:radioButtonStyle</item>
!         <item name="ratingBarStyle">?android:ratingBarStyle</item>
!         <item name="selectableItemBackground">?android:selectableItemBackground</item>
!         <item name="selectableItemBackgroundBorderless">?android:selectableItemBackgroundBorderless</item>
!         <item name="spinnerStyle">?android:spinnerStyle</item>
!         <item name="textAppearanceLargePopupMenu">?android:textAppearanceLargePopupMenu</item>
!         <item name="textAppearanceSmallPopupMenu">?android:textAppearanceSmallPopupMenu</item>
!     </style>
!     <style name="Base.V21.Theme.AppCompat.Dialog" parent="@style/Base.V7.Theme.AppCompat.Dialog">
!         <item name="android:windowElevation">@dimen/abc_floating_window_z</item>
!     </style>
!     <style name="Base.V21.Theme.AppCompat.Light" parent="@style/Base.V7.Theme.AppCompat.Light">
!         <item name="android:colorControlNormal">?colorControlNormal</item>
!         <item name="android:colorControlActivated">?colorControlActivated</item>
!         <item name="android:colorButtonNormal">?colorButtonNormal</item>
!         <item name="android:colorControlHighlight">?colorControlHighlight</item>
!         <item name="android:colorPrimary">?colorPrimary</item>
!         <item name="android:colorPrimaryDark">?colorPrimaryDark</item>
!         <item name="android:colorAccent">?colorAccent</item>
!         <item name="actionBarDivider">?android:actionBarDivider</item>
!         <item name="actionBarItemBackground">@drawable/abc_action_bar_item_background_material</item>
!         <item name="actionBarSize">?android:actionBarSize</item>
!         <item name="actionButtonStyle">?android:actionButtonStyle</item>
!         <item name="actionModeBackground">?android:actionModeBackground</item>
!         <item name="actionModeCloseDrawable">?android:actionModeCloseDrawable</item>
!         <item name="borderlessButtonStyle">?android:borderlessButtonStyle</item>
!         <item name="buttonStyle">?android:buttonStyle</item>
!         <item name="buttonStyleSmall">?android:buttonStyleSmall</item>
!         <item name="checkboxStyle">?android:checkboxStyle</item>
!         <item name="checkedTextViewStyle">?android:checkedTextViewStyle</item>
!         <item name="dividerHorizontal">?android:dividerHorizontal</item>
!         <item name="dividerVertical">?android:dividerVertical</item>
!         <item name="editTextBackground">@drawable/abc_edit_text_material</item>
!         <item name="editTextColor">?android:editTextColor</item>
!         <item name="homeAsUpIndicator">?android:homeAsUpIndicator</item>
!         <item name="listChoiceBackgroundIndicator">?android:listChoiceBackgroundIndicator</item>
!         <item name="listPreferredItemHeightSmall">?android:listPreferredItemHeightSmall</item>
!         <item name="radioButtonStyle">?android:radioButtonStyle</item>
!         <item name="ratingBarStyle">?android:ratingBarStyle</item>
!         <item name="selectableItemBackground">?android:selectableItemBackground</item>
!         <item name="selectableItemBackgroundBorderless">?android:selectableItemBackgroundBorderless</item>
!         <item name="spinnerStyle">?android:spinnerStyle</item>
!         <item name="textAppearanceLargePopupMenu">?android:textAppearanceLargePopupMenu</item>
!         <item name="textAppearanceSmallPopupMenu">?android:textAppearanceSmallPopupMenu</item>
!     </style>
!     <style name="Base.V21.Theme.AppCompat.Light.Dialog" parent="@style/Base.V7.Theme.AppCompat.Light.Dialog">
!         <item name="android:windowElevation">@dimen/abc_floating_window_z</item>
!     </style>
!     <style name="Base.V21.ThemeOverlay.AppCompat.Dialog" parent="@style/Base.V7.ThemeOverlay.AppCompat.Dialog">
!         <item name="android:windowElevation">@dimen/abc_floating_window_z</item>
!     </style>
!     <style name="Base.V22.Theme.AppCompat" parent="@style/Base.V21.Theme.AppCompat">
!         <item name="actionModeShareDrawable">?android:actionModeShareDrawable</item>
!         <item name="editTextBackground">?android:editTextBackground</item>
!     </style>
!     <style name="Base.V22.Theme.AppCompat.Light" parent="@style/Base.V21.Theme.AppCompat.Light">
!         <item name="actionModeShareDrawable">?android:actionModeShareDrawable</item>
!         <item name="editTextBackground">?android:editTextBackground</item>
!     </style>
!     <style name="Base.V23.Theme.AppCompat" parent="@style/Base.V22.Theme.AppCompat">
!         <item name="actionBarItemBackground">?android:actionBarItemBackground</item>
!         <item name="actionMenuTextAppearance">?android:actionMenuTextAppearance</item>
!         <item name="actionMenuTextColor">?android:actionMenuTextColor</item>
!         <item name="actionOverflowButtonStyle">?android:actionOverflowButtonStyle</item>
!         <item name="controlBackground">@drawable/abc_control_background_material</item>
!         <item name="ratingBarStyleIndicator">?android:ratingBarStyleIndicator</item>
!         <item name="ratingBarStyleSmall">?android:ratingBarStyleSmall</item>
!     </style>
!     <style name="Base.V23.Theme.AppCompat.Light" parent="@style/Base.V22.Theme.AppCompat.Light">
!         <item name="actionBarItemBackground">?android:actionBarItemBackground</item>
!         <item name="actionMenuTextAppearance">?android:actionMenuTextAppearance</item>
!         <item name="actionMenuTextColor">?android:actionMenuTextColor</item>
!         <item name="actionOverflowButtonStyle">?android:actionOverflowButtonStyle</item>
!         <item name="controlBackground">@drawable/abc_control_background_material</item>
!         <item name="ratingBarStyleIndicator">?android:ratingBarStyleIndicator</item>
!         <item name="ratingBarStyleSmall">?android:ratingBarStyleSmall</item>
!     </style>
!     <style name="Base.V26.Theme.AppCompat" parent="@style/Base.V23.Theme.AppCompat">
!         <item name="colorError">?android:colorError</item>
!     </style>
!     <style name="Base.V26.Theme.AppCompat.Light" parent="@style/Base.V23.Theme.AppCompat.Light">
!         <item name="colorError">?android:colorError</item>
!     </style>
!     <style name="Base.V26.Widget.AppCompat.Toolbar" parent="@style/Base.V7.Widget.AppCompat.Toolbar">
!         <item name="android:touchscreenBlocksFocus">true</item>
!         <item name="android:keyboardNavigationCluster">true</item>
!     </style>
!     <style name="Base.V28.Theme.AppCompat" parent="@style/Base.V26.Theme.AppCompat">
!         <item name="dialogCornerRadius">?android:dialogCornerRadius</item>
!     </style>
!     <style name="Base.V28.Theme.AppCompat.Light" parent="@style/Base.V26.Theme.AppCompat.Light">
!         <item name="dialogCornerRadius">?android:dialogCornerRadius</item>
!     </style>
!     <style name="Base.V7.Theme.AppCompat" parent="@style/Platform.AppCompat">
!         <item name="android:panelBackground">@android:color/transparent</item>
!         <item name="android:dropDownListViewStyle">@style/Widget.AppCompat.ListView.DropDown</item>
!         <item name="android:textViewStyle">@style/Widget.AppCompat.TextView</item>
!         <item name="android:dropDownItemStyle">@style/Widget.AppCompat.DropDownItem.Spinner</item>
!         <item name="android:spinnerItemStyle">@style/Widget.AppCompat.TextView.SpinnerItem</item>
!         <item name="android:textAppearanceButton">@style/TextAppearance.AppCompat.Widget.Button</item>
!         <item name="actionBarDivider">?dividerVertical</item>
!         <item name="actionBarItemBackground">?selectableItemBackgroundBorderless</item>
!         <item name="actionBarPopupTheme">@null</item>
!         <item name="actionBarSize">@dimen/abc_action_bar_default_height_material</item>
!         <item name="actionBarSplitStyle">?actionBarStyle</item>
!         <item name="actionBarStyle">@style/Widget.AppCompat.ActionBar.Solid</item>
!         <item name="actionBarTabBarStyle">@style/Widget.AppCompat.ActionBar.TabBar</item>
!         <item name="actionBarTabStyle">@style/Widget.AppCompat.ActionBar.TabView</item>
!         <item name="actionBarTabTextStyle">@style/Widget.AppCompat.ActionBar.TabText</item>
!         <item name="actionBarTheme">@style/ThemeOverlay.AppCompat.ActionBar</item>
!         <item name="actionBarWidgetTheme">@null</item>
!         <item name="actionButtonStyle">@style/Widget.AppCompat.ActionButton</item>
!         <item name="actionDropDownStyle">@style/Widget.AppCompat.Spinner.DropDown.ActionBar</item>
!         <item name="actionMenuTextAppearance">@style/TextAppearance.AppCompat.Widget.ActionBar.Menu</item>
!         <item name="actionMenuTextColor">?android:textColorPrimaryDisableOnly</item>
!         <item name="actionModeBackground">@drawable/abc_cab_background_top_material</item>
!         <item name="actionModeCloseButtonStyle">@style/Widget.AppCompat.ActionButton.CloseMode</item>
!         <item name="actionModeCloseDrawable">@drawable/abc_ic_ab_back_material</item>
!         <item name="actionModeCopyDrawable">@drawable/abc_ic_menu_copy_mtrl_am_alpha</item>
!         <item name="actionModeCutDrawable">@drawable/abc_ic_menu_cut_mtrl_alpha</item>
!         <item name="actionModePasteDrawable">@drawable/abc_ic_menu_paste_mtrl_am_alpha</item>
!         <item name="actionModeSelectAllDrawable">@drawable/abc_ic_menu_selectall_mtrl_alpha</item>
!         <item name="actionModeShareDrawable">@drawable/abc_ic_menu_share_mtrl_alpha</item>
!         <item name="actionModeSplitBackground">?colorPrimaryDark</item>
!         <item name="actionModeStyle">@style/Widget.AppCompat.ActionMode</item>
!         <item name="actionOverflowButtonStyle">@style/Widget.AppCompat.ActionButton.Overflow</item>
!         <item name="actionOverflowMenuStyle">@style/Widget.AppCompat.PopupMenu.Overflow</item>
!         <item name="activityChooserViewStyle">@style/Widget.AppCompat.ActivityChooserView</item>
!         <item name="alertDialogCenterButtons">false</item>
!         <item name="alertDialogStyle">@style/AlertDialog.AppCompat</item>
!         <item name="alertDialogTheme">@style/ThemeOverlay.AppCompat.Dialog.Alert</item>
!         <item name="autoCompleteTextViewStyle">@style/Widget.AppCompat.AutoCompleteTextView</item>
!         <item name="borderlessButtonStyle">@style/Widget.AppCompat.Button.Borderless</item>
!         <item name="buttonBarButtonStyle">@style/Widget.AppCompat.Button.ButtonBar.AlertDialog</item>
!         <item name="buttonBarNegativeButtonStyle">?buttonBarButtonStyle</item>
!         <item name="buttonBarNeutralButtonStyle">?buttonBarButtonStyle</item>
!         <item name="buttonBarPositiveButtonStyle">?buttonBarButtonStyle</item>
!         <item name="buttonBarStyle">@style/Widget.AppCompat.ButtonBar</item>
!         <item name="buttonStyle">@style/Widget.AppCompat.Button</item>
!         <item name="buttonStyleSmall">@style/Widget.AppCompat.Button.Small</item>
!         <item name="checkboxStyle">@style/Widget.AppCompat.CompoundButton.CheckBox</item>
!         <item name="colorAccent">@color/accent_material_dark</item>
!         <item name="colorBackgroundFloating">@color/background_floating_material_dark</item>
!         <item name="colorButtonNormal">@color/button_material_dark</item>
!         <item name="colorControlActivated">?colorAccent</item>
!         <item name="colorControlHighlight">@color/ripple_material_dark</item>
!         <item name="colorControlNormal">?android:textColorSecondary</item>
!         <item name="colorError">@color/error_color_material_dark</item>
!         <item name="colorPrimary">@color/primary_material_dark</item>
!         <item name="colorPrimaryDark">@color/primary_dark_material_dark</item>
!         <item name="colorSwitchThumbNormal">@color/switch_thumb_material_dark</item>
!         <item name="controlBackground">?selectableItemBackgroundBorderless</item>
!         <item name="dialogCornerRadius">@dimen/abc_dialog_corner_radius_material</item>
!         <item name="dialogPreferredPadding">@dimen/abc_dialog_padding_material</item>
!         <item name="dialogTheme">@style/ThemeOverlay.AppCompat.Dialog</item>
!         <item name="dividerHorizontal">@drawable/abc_list_divider_mtrl_alpha</item>
!         <item name="dividerVertical">@drawable/abc_list_divider_mtrl_alpha</item>
!         <item name="drawerArrowStyle">@style/Widget.AppCompat.DrawerArrowToggle</item>
!         <item name="dropDownListViewStyle">?android:dropDownListViewStyle</item>
!         <item name="dropdownListPreferredItemHeight">?listPreferredItemHeightSmall</item>
!         <item name="editTextBackground">@drawable/abc_edit_text_material</item>
!         <item name="editTextColor">?android:textColorPrimary</item>
!         <item name="editTextStyle">@style/Widget.AppCompat.EditText</item>
!         <item name="homeAsUpIndicator">@drawable/abc_ic_ab_back_material</item>
!         <item name="imageButtonStyle">@style/Widget.AppCompat.ImageButton</item>
!         <item name="isLightTheme">false</item>
!         <item name="listChoiceBackgroundIndicator">@drawable/abc_list_selector_holo_dark</item>
!         <item name="listDividerAlertDialog">@null</item>
!         <item name="listMenuViewStyle">@style/Widget.AppCompat.ListMenuView</item>
!         <item name="listPopupWindowStyle">@style/Widget.AppCompat.ListPopupWindow</item>
!         <item name="listPreferredItemHeight">@dimen/abc_list_item_height_material</item>
!         <item name="listPreferredItemHeightLarge">@dimen/abc_list_item_height_large_material</item>
!         <item name="listPreferredItemHeightSmall">@dimen/abc_list_item_height_small_material</item>
!         <item name="listPreferredItemPaddingEnd">@dimen/abc_list_item_padding_horizontal_material</item>
!         <item name="listPreferredItemPaddingLeft">@dimen/abc_list_item_padding_horizontal_material</item>
!         <item name="listPreferredItemPaddingRight">@dimen/abc_list_item_padding_horizontal_material</item>
!         <item name="listPreferredItemPaddingStart">@dimen/abc_list_item_padding_horizontal_material</item>
!         <item name="panelBackground">@drawable/abc_menu_hardkey_panel_mtrl_mult</item>
!         <item name="panelMenuListTheme">@style/Theme.AppCompat.CompactMenu</item>
!         <item name="panelMenuListWidth">@dimen/abc_panel_menu_list_width</item>
!         <item name="popupMenuStyle">@style/Widget.AppCompat.PopupMenu</item>
!         <item name="radioButtonStyle">@style/Widget.AppCompat.CompoundButton.RadioButton</item>
!         <item name="ratingBarStyle">@style/Widget.AppCompat.RatingBar</item>
!         <item name="ratingBarStyleIndicator">@style/Widget.AppCompat.RatingBar.Indicator</item>
!         <item name="ratingBarStyleSmall">@style/Widget.AppCompat.RatingBar.Small</item>
!         <item name="searchViewStyle">@style/Widget.AppCompat.SearchView</item>
!         <item name="seekBarStyle">@style/Widget.AppCompat.SeekBar</item>
!         <item name="selectableItemBackground">@drawable/abc_item_background_holo_dark</item>
!         <item name="selectableItemBackgroundBorderless">?selectableItemBackground</item>
!         <item name="spinnerDropDownItemStyle">@style/Widget.AppCompat.DropDownItem.Spinner</item>
!         <item name="spinnerStyle">@style/Widget.AppCompat.Spinner</item>
!         <item name="switchStyle">@style/Widget.AppCompat.CompoundButton.Switch</item>
!         <item name="textAppearanceLargePopupMenu">@style/TextAppearance.AppCompat.Widget.PopupMenu.Large</item>
!         <item name="textAppearanceListItem">@style/TextAppearance.AppCompat.Subhead</item>
!         <item name="textAppearanceListItemSecondary">@style/TextAppearance.AppCompat.Body1</item>
!         <item name="textAppearanceListItemSmall">@style/TextAppearance.AppCompat.Subhead</item>
!         <item name="textAppearancePopupMenuHeader">@style/TextAppearance.AppCompat.Widget.PopupMenu.Header</item>
!         <item name="textAppearanceSearchResultSubtitle">@style/TextAppearance.AppCompat.SearchResult.Subtitle</item>
!         <item name="textAppearanceSearchResultTitle">@style/TextAppearance.AppCompat.SearchResult.Title</item>
!         <item name="textAppearanceSmallPopupMenu">@style/TextAppearance.AppCompat.Widget.PopupMenu.Small</item>
!         <item name="textColorAlertDialogListItem">@color/abc_primary_text_material_dark</item>
!         <item name="textColorSearchUrl">@color/abc_search_url_text</item>
!         <item name="toolbarNavigationButtonStyle">@style/Widget.AppCompat.Toolbar.Button.Navigation</item>
!         <item name="toolbarStyle">@style/Widget.AppCompat.Toolbar</item>
!         <item name="tooltipForegroundColor">@color/foreground_material_light</item>
!         <item name="tooltipFrameBackground">@drawable/tooltip_frame_light</item>
!         <item name="viewInflaterClass">androidx.appcompat.app.AppCompatViewInflater</item>
!         <item name="windowActionBar">true</item>
!         <item name="windowActionBarOverlay">false</item>
!         <item name="windowActionModeOverlay">false</item>
!         <item name="windowFixedHeightMajor">@null</item>
!         <item name="windowFixedHeightMinor">@null</item>
!         <item name="windowFixedWidthMajor">@null</item>
!         <item name="windowFixedWidthMinor">@null</item>
!         <item name="windowNoTitle">false</item>
!     </style>
!     <style name="Base.V7.Theme.AppCompat.Dialog" parent="@style/Base.Theme.AppCompat">
!         <item name="android:colorBackground">?colorBackgroundFloating</item>
!         <item name="android:windowBackground">@drawable/abc_dialog_material_background</item>
!         <item name="android:windowFrame">@null</item>
!         <item name="android:windowIsFloating">true</item>
!         <item name="android:windowContentOverlay">@null</item>
!         <item name="android:windowTitleStyle">@style/RtlOverlay.DialogWindowTitle.AppCompat</item>
!         <item name="android:windowTitleBackgroundStyle">@style/Base.DialogWindowTitleBackground.AppCompat</item>
!         <item name="android:windowAnimationStyle">@style/Animation.AppCompat.Dialog</item>
!         <item name="android:listDivider">@null</item>
!         <item name="android:backgroundDimEnabled">true</item>
!         <item name="android:windowSoftInputMode">adjustPan</item>
!         <item name="android:colorBackgroundCacheHint">@null</item>
!         <item name="android:borderlessButtonStyle">@style/Widget.AppCompat.Button.Borderless</item>
!         <item name="android:buttonBarStyle">@style/Widget.AppCompat.ButtonBar.AlertDialog</item>
!         <item name="android:windowCloseOnTouchOutside">true</item>
!         <item name="listPreferredItemPaddingLeft">24.0dip</item>
!         <item name="listPreferredItemPaddingRight">24.0dip</item>
!         <item name="windowActionBar">false</item>
!         <item name="windowActionModeOverlay">true</item>
!     </style>
!     <style name="Base.V7.Theme.AppCompat.Light" parent="@style/Platform.AppCompat.Light">
!         <item name="android:panelBackground">@android:color/transparent</item>
!         <item name="android:dropDownListViewStyle">@style/Widget.AppCompat.ListView.DropDown</item>
!         <item name="android:textViewStyle">@style/Widget.AppCompat.TextView</item>
!         <item name="android:dropDownItemStyle">@style/Widget.AppCompat.DropDownItem.Spinner</item>
!         <item name="android:spinnerItemStyle">@style/Widget.AppCompat.TextView.SpinnerItem</item>
!         <item name="android:textAppearanceButton">@style/TextAppearance.AppCompat.Widget.Button</item>
!         <item name="actionBarDivider">?dividerVertical</item>
!         <item name="actionBarItemBackground">?selectableItemBackgroundBorderless</item>
!         <item name="actionBarPopupTheme">@null</item>
!         <item name="actionBarSize">@dimen/abc_action_bar_default_height_material</item>
!         <item name="actionBarSplitStyle">?actionBarStyle</item>
!         <item name="actionBarStyle">@style/Widget.AppCompat.Light.ActionBar.Solid</item>
!         <item name="actionBarTabBarStyle">@style/Widget.AppCompat.Light.ActionBar.TabBar</item>
!         <item name="actionBarTabStyle">@style/Widget.AppCompat.Light.ActionBar.TabView</item>
!         <item name="actionBarTabTextStyle">@style/Widget.AppCompat.Light.ActionBar.TabText</item>
!         <item name="actionBarTheme">@style/ThemeOverlay.AppCompat.ActionBar</item>
!         <item name="actionBarWidgetTheme">@null</item>
!         <item name="actionButtonStyle">@style/Widget.AppCompat.Light.ActionButton</item>
!         <item name="actionDropDownStyle">@style/Widget.AppCompat.Light.Spinner.DropDown.ActionBar</item>
!         <item name="actionMenuTextAppearance">@style/TextAppearance.AppCompat.Widget.ActionBar.Menu</item>
!         <item name="actionMenuTextColor">?android:textColorPrimaryDisableOnly</item>
!         <item name="actionModeBackground">@drawable/abc_cab_background_top_material</item>
!         <item name="actionModeCloseButtonStyle">@style/Widget.AppCompat.ActionButton.CloseMode</item>
!         <item name="actionModeCloseDrawable">@drawable/abc_ic_ab_back_material</item>
!         <item name="actionModeCopyDrawable">@drawable/abc_ic_menu_copy_mtrl_am_alpha</item>
!         <item name="actionModeCutDrawable">@drawable/abc_ic_menu_cut_mtrl_alpha</item>
!         <item name="actionModePasteDrawable">@drawable/abc_ic_menu_paste_mtrl_am_alpha</item>
!         <item name="actionModeSelectAllDrawable">@drawable/abc_ic_menu_selectall_mtrl_alpha</item>
!         <item name="actionModeShareDrawable">@drawable/abc_ic_menu_share_mtrl_alpha</item>
!         <item name="actionModeSplitBackground">?colorPrimaryDark</item>
!         <item name="actionModeStyle">@style/Widget.AppCompat.ActionMode</item>
!         <item name="actionOverflowButtonStyle">@style/Widget.AppCompat.Light.ActionButton.Overflow</item>
!         <item name="actionOverflowMenuStyle">@style/Widget.AppCompat.Light.PopupMenu.Overflow</item>
!         <item name="activityChooserViewStyle">@style/Widget.AppCompat.ActivityChooserView</item>
!         <item name="alertDialogCenterButtons">false</item>
!         <item name="alertDialogStyle">@style/AlertDialog.AppCompat.Light</item>
!         <item name="alertDialogTheme">@style/ThemeOverlay.AppCompat.Dialog.Alert</item>
!         <item name="autoCompleteTextViewStyle">@style/Widget.AppCompat.AutoCompleteTextView</item>
!         <item name="borderlessButtonStyle">@style/Widget.AppCompat.Button.Borderless</item>
!         <item name="buttonBarButtonStyle">@style/Widget.AppCompat.Button.ButtonBar.AlertDialog</item>
!         <item name="buttonBarNegativeButtonStyle">?buttonBarButtonStyle</item>
!         <item name="buttonBarNeutralButtonStyle">?buttonBarButtonStyle</item>
!         <item name="buttonBarPositiveButtonStyle">?buttonBarButtonStyle</item>
!         <item name="buttonBarStyle">@style/Widget.AppCompat.ButtonBar</item>
!         <item name="buttonStyle">@style/Widget.AppCompat.Button</item>
!         <item name="buttonStyleSmall">@style/Widget.AppCompat.Button.Small</item>
!         <item name="checkboxStyle">@style/Widget.AppCompat.CompoundButton.CheckBox</item>
!         <item name="colorAccent">@color/accent_material_light</item>
!         <item name="colorBackgroundFloating">@color/background_floating_material_light</item>
!         <item name="colorButtonNormal">@color/button_material_light</item>
!         <item name="colorControlActivated">?colorAccent</item>
!         <item name="colorControlHighlight">@color/ripple_material_light</item>
!         <item name="colorControlNormal">?android:textColorSecondary</item>
!         <item name="colorError">@color/error_color_material_light</item>
!         <item name="colorPrimary">@color/primary_material_light</item>
!         <item name="colorPrimaryDark">@color/primary_dark_material_light</item>
!         <item name="colorSwitchThumbNormal">@color/switch_thumb_material_light</item>
!         <item name="controlBackground">?selectableItemBackgroundBorderless</item>
!         <item name="dialogCornerRadius">@dimen/abc_dialog_corner_radius_material</item>
!         <item name="dialogPreferredPadding">@dimen/abc_dialog_padding_material</item>
!         <item name="dialogTheme">@style/ThemeOverlay.AppCompat.Dialog</item>
!         <item name="dividerHorizontal">@drawable/abc_list_divider_mtrl_alpha</item>
!         <item name="dividerVertical">@drawable/abc_list_divider_mtrl_alpha</item>
!         <item name="drawerArrowStyle">@style/Widget.AppCompat.DrawerArrowToggle</item>
!         <item name="dropDownListViewStyle">?android:dropDownListViewStyle</item>
!         <item name="dropdownListPreferredItemHeight">?listPreferredItemHeightSmall</item>
!         <item name="editTextBackground">@drawable/abc_edit_text_material</item>
!         <item name="editTextColor">?android:textColorPrimary</item>
!         <item name="editTextStyle">@style/Widget.AppCompat.EditText</item>
!         <item name="homeAsUpIndicator">@drawable/abc_ic_ab_back_material</item>
!         <item name="imageButtonStyle">@style/Widget.AppCompat.ImageButton</item>
!         <item name="isLightTheme">true</item>
!         <item name="listChoiceBackgroundIndicator">@drawable/abc_list_selector_holo_light</item>
!         <item name="listDividerAlertDialog">@null</item>
!         <item name="listMenuViewStyle">@style/Widget.AppCompat.ListMenuView</item>
!         <item name="listPopupWindowStyle">@style/Widget.AppCompat.ListPopupWindow</item>
!         <item name="listPreferredItemHeight">@dimen/abc_list_item_height_material</item>
!         <item name="listPreferredItemHeightLarge">@dimen/abc_list_item_height_large_material</item>
!         <item name="listPreferredItemHeightSmall">@dimen/abc_list_item_height_small_material</item>
!         <item name="listPreferredItemPaddingEnd">@dimen/abc_list_item_padding_horizontal_material</item>
!         <item name="listPreferredItemPaddingLeft">@dimen/abc_list_item_padding_horizontal_material</item>
!         <item name="listPreferredItemPaddingRight">@dimen/abc_list_item_padding_horizontal_material</item>
!         <item name="listPreferredItemPaddingStart">@dimen/abc_list_item_padding_horizontal_material</item>
!         <item name="panelBackground">@drawable/abc_menu_hardkey_panel_mtrl_mult</item>
!         <item name="panelMenuListTheme">@style/Theme.AppCompat.CompactMenu</item>
!         <item name="panelMenuListWidth">@dimen/abc_panel_menu_list_width</item>
!         <item name="popupMenuStyle">@style/Widget.AppCompat.Light.PopupMenu</item>
!         <item name="radioButtonStyle">@style/Widget.AppCompat.CompoundButton.RadioButton</item>
!         <item name="ratingBarStyle">@style/Widget.AppCompat.RatingBar</item>
!         <item name="ratingBarStyleIndicator">@style/Widget.AppCompat.RatingBar.Indicator</item>
!         <item name="ratingBarStyleSmall">@style/Widget.AppCompat.RatingBar.Small</item>
!         <item name="searchViewStyle">@style/Widget.AppCompat.Light.SearchView</item>
!         <item name="seekBarStyle">@style/Widget.AppCompat.SeekBar</item>
!         <item name="selectableItemBackground">@drawable/abc_item_background_holo_light</item>
!         <item name="selectableItemBackgroundBorderless">?selectableItemBackground</item>
!         <item name="spinnerDropDownItemStyle">@style/Widget.AppCompat.DropDownItem.Spinner</item>
!         <item name="spinnerStyle">@style/Widget.AppCompat.Spinner</item>
!         <item name="switchStyle">@style/Widget.AppCompat.CompoundButton.Switch</item>
!         <item name="textAppearanceLargePopupMenu">@style/TextAppearance.AppCompat.Light.Widget.PopupMenu.Large</item>
!         <item name="textAppearanceListItem">@style/TextAppearance.AppCompat.Subhead</item>
!         <item name="textAppearanceListItemSecondary">@style/TextAppearance.AppCompat.Body1</item>
!         <item name="textAppearanceListItemSmall">@style/TextAppearance.AppCompat.Subhead</item>
!         <item name="textAppearancePopupMenuHeader">@style/TextAppearance.AppCompat.Widget.PopupMenu.Header</item>
!         <item name="textAppearanceSearchResultSubtitle">@style/TextAppearance.AppCompat.SearchResult.Subtitle</item>
!         <item name="textAppearanceSearchResultTitle">@style/TextAppearance.AppCompat.SearchResult.Title</item>
!         <item name="textAppearanceSmallPopupMenu">@style/TextAppearance.AppCompat.Light.Widget.PopupMenu.Small</item>
!         <item name="textColorAlertDialogListItem">@color/abc_primary_text_material_light</item>
!         <item name="textColorSearchUrl">@color/abc_search_url_text</item>
!         <item name="toolbarNavigationButtonStyle">@style/Widget.AppCompat.Toolbar.Button.Navigation</item>
!         <item name="toolbarStyle">@style/Widget.AppCompat.Toolbar</item>
!         <item name="tooltipForegroundColor">@color/foreground_material_dark</item>
!         <item name="tooltipFrameBackground">@drawable/tooltip_frame_dark</item>
!         <item name="viewInflaterClass">androidx.appcompat.app.AppCompatViewInflater</item>
!         <item name="windowActionBar">true</item>
!         <item name="windowActionBarOverlay">false</item>
!         <item name="windowActionModeOverlay">false</item>
!         <item name="windowFixedHeightMajor">@null</item>
!         <item name="windowFixedHeightMinor">@null</item>
!         <item name="windowFixedWidthMajor">@null</item>
!         <item name="windowFixedWidthMinor">@null</item>
!         <item name="windowNoTitle">false</item>
!     </style>
!     <style name="Base.V7.Theme.AppCompat.Light.Dialog" parent="@style/Base.Theme.AppCompat.Light">
!         <item name="android:colorBackground">?colorBackgroundFloating</item>
!         <item name="android:windowBackground">@drawable/abc_dialog_material_background</item>
!         <item name="android:windowFrame">@null</item>
!         <item name="android:windowIsFloating">true</item>
!         <item name="android:windowContentOverlay">@null</item>
!         <item name="android:windowTitleStyle">@style/RtlOverlay.DialogWindowTitle.AppCompat</item>
!         <item name="android:windowTitleBackgroundStyle">@style/Base.DialogWindowTitleBackground.AppCompat</item>
!         <item name="android:windowAnimationStyle">@style/Animation.AppCompat.Dialog</item>
!         <item name="android:listDivider">@null</item>
!         <item name="android:backgroundDimEnabled">true</item>
!         <item name="android:windowSoftInputMode">adjustPan</item>
!         <item name="android:colorBackgroundCacheHint">@null</item>
!         <item name="android:borderlessButtonStyle">@style/Widget.AppCompat.Button.Borderless</item>
!         <item name="android:buttonBarStyle">@style/Widget.AppCompat.ButtonBar.AlertDialog</item>
!         <item name="android:windowCloseOnTouchOutside">true</item>
!         <item name="listPreferredItemPaddingLeft">24.0dip</item>
!         <item name="listPreferredItemPaddingRight">24.0dip</item>
!         <item name="windowActionBar">false</item>
!         <item name="windowActionModeOverlay">true</item>
!     </style>
!     <style name="Base.V7.ThemeOverlay.AppCompat.Dialog" parent="@style/Base.ThemeOverlay.AppCompat">
!         <item name="android:colorBackground">?colorBackgroundFloating</item>
!         <item name="android:windowBackground">@drawable/abc_dialog_material_background</item>
!         <item name="android:windowFrame">@null</item>
!         <item name="android:windowIsFloating">true</item>
!         <item name="android:windowContentOverlay">@null</item>
!         <item name="android:windowTitleStyle">@style/RtlOverlay.DialogWindowTitle.AppCompat</item>
!         <item name="android:windowTitleBackgroundStyle">@style/Base.DialogWindowTitleBackground.AppCompat</item>
!         <item name="android:windowAnimationStyle">@style/Animation.AppCompat.Dialog</item>
!         <item name="android:listDivider">@null</item>
!         <item name="android:backgroundDimEnabled">true</item>
!         <item name="android:windowSoftInputMode">adjustPan</item>
!         <item name="android:colorBackgroundCacheHint">@null</item>
!         <item name="android:borderlessButtonStyle">@style/Widget.AppCompat.Button.Borderless</item>
!         <item name="android:buttonBarStyle">@style/Widget.AppCompat.ButtonBar.AlertDialog</item>
!         <item name="android:windowCloseOnTouchOutside">true</item>
!         <item name="listPreferredItemPaddingLeft">24.0dip</item>
!         <item name="listPreferredItemPaddingRight">24.0dip</item>
!         <item name="windowActionBar">false</item>
!         <item name="windowActionModeOverlay">true</item>
!         <item name="windowFixedHeightMajor">@null</item>
!         <item name="windowFixedHeightMinor">@null</item>
!         <item name="windowFixedWidthMajor">@null</item>
!         <item name="windowFixedWidthMinor">@null</item>
!     </style>
!     <style name="Base.V7.Widget.AppCompat.AutoCompleteTextView" parent="@android:style/Widget.AutoCompleteTextView">
!         <item name="android:textAppearance">?android:textAppearanceMediumInverse</item>
!         <item name="android:textColor">?editTextColor</item>
!         <item name="android:background">?editTextBackground</item>
!         <item name="android:dropDownSelector">?listChoiceBackgroundIndicator</item>
!         <item name="android:popupBackground">@drawable/abc_popup_background_mtrl_mult</item>
!         <item name="android:textCursorDrawable">@drawable/abc_text_cursor_material</item>
!     </style>
!     <style name="Base.V7.Widget.AppCompat.EditText" parent="@android:style/Widget.EditText">
!         <item name="android:textAppearance">?android:textAppearanceMediumInverse</item>
!         <item name="android:textColor">?editTextColor</item>
!         <item name="android:background">?editTextBackground</item>
!         <item name="android:textCursorDrawable">@drawable/abc_text_cursor_material</item>
!     </style>
!     <style name="Base.V7.Widget.AppCompat.Toolbar" parent="@android:style/Widget">
!         <item name="android:paddingLeft">@dimen/abc_action_bar_default_padding_start_material</item>
!         <item name="android:paddingRight">@dimen/abc_action_bar_default_padding_end_material</item>
!         <item name="android:minHeight">?actionBarSize</item>
!         <item name="buttonGravity">top</item>
!         <item name="collapseContentDescription">@string/abc_toolbar_collapse_description</item>
!         <item name="collapseIcon">?homeAsUpIndicator</item>
!         <item name="contentInsetStart">16.0dip</item>
!         <item name="contentInsetStartWithNavigation">@dimen/abc_action_bar_content_inset_with_nav</item>
!         <item name="maxButtonHeight">@dimen/abc_action_bar_default_height_material</item>
!         <item name="subtitleTextAppearance">@style/TextAppearance.Widget.AppCompat.Toolbar.Subtitle</item>
!         <item name="titleMargin">4.0dip</item>
!         <item name="titleTextAppearance">@style/TextAppearance.Widget.AppCompat.Toolbar.Title</item>
!     </style>
!     <style name="Base.Widget.AppCompat.ActionBar" parent="">
!         <item name="android:gravity">center_vertical</item>
!         <item name="actionButtonStyle">@style/Widget.AppCompat.ActionButton</item>
!         <item name="actionOverflowButtonStyle">@style/Widget.AppCompat.ActionButton.Overflow</item>
!         <item name="background">@null</item>
!         <item name="backgroundSplit">@null</item>
!         <item name="backgroundStacked">@null</item>
!         <item name="contentInsetEnd">@dimen/abc_action_bar_content_inset_material</item>
!         <item name="contentInsetStart">@dimen/abc_action_bar_content_inset_material</item>
!         <item name="contentInsetStartWithNavigation">@dimen/abc_action_bar_content_inset_with_nav</item>
!         <item name="displayOptions">showTitle</item>
!         <item name="divider">?dividerVertical</item>
!         <item name="elevation">@dimen/abc_action_bar_elevation_material</item>
!         <item name="height">?actionBarSize</item>
!         <item name="popupTheme">?actionBarPopupTheme</item>
!         <item name="subtitleTextStyle">@style/TextAppearance.AppCompat.Widget.ActionBar.Subtitle</item>
!         <item name="titleTextStyle">@style/TextAppearance.AppCompat.Widget.ActionBar.Title</item>
!     </style>
!     <style name="Base.Widget.AppCompat.ActionBar.Solid" parent="@style/Base.Widget.AppCompat.ActionBar">
!         <item name="background">?colorPrimary</item>
!         <item name="backgroundSplit">?colorPrimary</item>
!         <item name="backgroundStacked">?colorPrimary</item>
!     </style>
!     <style name="Base.Widget.AppCompat.ActionBar.TabBar" parent="">
!         <item name="divider">?actionBarDivider</item>
!         <item name="dividerPadding">8.0dip</item>
!         <item name="showDividers">middle</item>
!     </style>
!     <style name="Base.Widget.AppCompat.ActionBar.TabText" parent="@android:style/Widget.Material.ActionBar.TabText" />
!     <style name="Base.Widget.AppCompat.ActionBar.TabView" parent="@android:style/Widget.Material.ActionBar.TabView" />
!     <style name="Base.Widget.AppCompat.ActionButton" parent="@android:style/Widget.Material.ActionButton" />
!     <style name="Base.Widget.AppCompat.ActionButton.CloseMode" parent="@android:style/Widget.Material.ActionButton.CloseMode">
!         <item name="android:minWidth">56.0dip</item>
!     </style>
!     <style name="Base.Widget.AppCompat.ActionButton.Overflow" parent="@android:style/Widget.Material.ActionButton.Overflow" />
!     <style name="Base.Widget.AppCompat.ActionMode" parent="">
!         <item name="background">?actionModeBackground</item>
!         <item name="backgroundSplit">?actionModeSplitBackground</item>
!         <item name="closeItemLayout">@layout/abc_action_mode_close_item_material</item>
!         <item name="height">?actionBarSize</item>
!         <item name="subtitleTextStyle">@style/TextAppearance.AppCompat.Widget.ActionMode.Subtitle</item>
!         <item name="titleTextStyle">@style/TextAppearance.AppCompat.Widget.ActionMode.Title</item>
!     </style>
!     <style name="Base.Widget.AppCompat.ActivityChooserView" parent="">
!         <item name="android:gravity">center</item>
!         <item name="android:background">@drawable/abc_ab_share_pack_mtrl_alpha</item>
!         <item name="divider">?dividerVertical</item>
!         <item name="dividerPadding">6.0dip</item>
!         <item name="showDividers">middle</item>
!     </style>
!     <style name="Base.Widget.AppCompat.AutoCompleteTextView" parent="@android:style/Widget.Material.AutoCompleteTextView">
!         <item name="android:background">?editTextBackground</item>
!     </style>
!     <style name="Base.Widget.AppCompat.Button" parent="@android:style/Widget.Material.Button" />
!     <style name="Base.Widget.AppCompat.Button.Borderless" parent="@android:style/Widget.Material.Button.Borderless" />
!     <style name="Base.Widget.AppCompat.Button.Borderless.Colored" parent="@android:style/Widget.Material.Button.Borderless.Colored" />
!     <style name="Base.Widget.AppCompat.Button.ButtonBar.AlertDialog" parent="@style/Widget.AppCompat.Button.Borderless.Colored">
!         <item name="android:minWidth">64.0dip</item>
!         <item name="android:minHeight">@dimen/abc_alert_dialog_button_bar_height</item>
!     </style>
!     <style name="Base.Widget.AppCompat.Button.Colored" parent="@android:style/Widget.Material.Button.Colored" />
!     <style name="Base.Widget.AppCompat.Button.Small" parent="@android:style/Widget.Material.Button.Small" />
!     <style name="Base.Widget.AppCompat.ButtonBar" parent="@android:style/Widget.Material.ButtonBar" />
!     <style name="Base.Widget.AppCompat.ButtonBar.AlertDialog" parent="@style/Base.Widget.AppCompat.ButtonBar" />
!     <style name="Base.Widget.AppCompat.CompoundButton.CheckBox" parent="@android:style/Widget.Material.CompoundButton.CheckBox" />
!     <style name="Base.Widget.AppCompat.CompoundButton.RadioButton" parent="@android:style/Widget.Material.CompoundButton.RadioButton" />
!     <style name="Base.Widget.AppCompat.CompoundButton.Switch" parent="@android:style/Widget.CompoundButton">
!         <item name="android:background">?controlBackground</item>
!         <item name="android:textOn">@string/abc_capital_on</item>
!         <item name="android:textOff">@string/abc_capital_off</item>
!         <item name="android:thumb">@drawable/abc_switch_thumb_material</item>
!         <item name="showText">false</item>
!         <item name="switchPadding">@dimen/abc_switch_padding</item>
!         <item name="switchTextAppearance">@style/TextAppearance.AppCompat.Widget.Switch</item>
!         <item name="track">@drawable/abc_switch_track_mtrl_alpha</item>
!     </style>
!     <style name="Base.Widget.AppCompat.DrawerArrowToggle" parent="@style/Base.Widget.AppCompat.DrawerArrowToggle.Common">
!         <item name="barLength">18.0dip</item>
!         <item name="drawableSize">24.0dip</item>
!         <item name="gapBetweenBars">3.0dip</item>
!     </style>
!     <style name="Base.Widget.AppCompat.DrawerArrowToggle.Common" parent="">
!         <item name="arrowHeadLength">8.0dip</item>
!         <item name="arrowShaftLength">16.0dip</item>
!         <item name="color">?android:textColorSecondary</item>
!         <item name="spinBars">true</item>
!         <item name="thickness">2.0dip</item>
!     </style>
!     <style name="Base.Widget.AppCompat.DropDownItem.Spinner" parent="@android:style/Widget.Material.DropDownItem.Spinner" />
!     <style name="Base.Widget.AppCompat.EditText" parent="@android:style/Widget.Material.EditText">
!         <item name="android:breakStrategy">simple</item>
!         <item name="android:hyphenationFrequency">none</item>
!     </style>
!     <style name="Base.Widget.AppCompat.ImageButton" parent="@android:style/Widget.Material.ImageButton" />
!     <style name="Base.Widget.AppCompat.Light.ActionBar" parent="@style/Base.Widget.AppCompat.ActionBar">
!         <item name="actionButtonStyle">@style/Widget.AppCompat.Light.ActionButton</item>
!         <item name="actionOverflowButtonStyle">@style/Widget.AppCompat.Light.ActionButton.Overflow</item>
!     </style>
!     <style name="Base.Widget.AppCompat.Light.ActionBar.Solid" parent="@style/Base.Widget.AppCompat.Light.ActionBar">
!         <item name="background">?colorPrimary</item>
!         <item name="backgroundSplit">?colorPrimary</item>
!         <item name="backgroundStacked">?colorPrimary</item>
!     </style>
!     <style name="Base.Widget.AppCompat.Light.ActionBar.TabBar" parent="@style/Base.Widget.AppCompat.ActionBar.TabBar" />
!     <style name="Base.Widget.AppCompat.Light.ActionBar.TabText" parent="@android:style/Widget.Material.Light.ActionBar.TabText" />
!     <style name="Base.Widget.AppCompat.Light.ActionBar.TabText.Inverse" parent="@android:style/Widget.Material.Light.ActionBar.TabText" />
!     <style name="Base.Widget.AppCompat.Light.ActionBar.TabView" parent="@android:style/Widget.Material.Light.ActionBar.TabView" />
!     <style name="Base.Widget.AppCompat.Light.PopupMenu" parent="@android:style/Widget.Material.Light.PopupMenu" />
!     <style name="Base.Widget.AppCompat.Light.PopupMenu.Overflow" parent="@style/Base.Widget.AppCompat.Light.PopupMenu">
!         <item name="android:dropDownHorizontalOffset">-4.0dip</item>
!         <item name="android:overlapAnchor">true</item>
!     </style>
!     <style name="Base.Widget.AppCompat.ListMenuView" parent="@android:style/Widget">
!         <item name="subMenuArrow">@drawable/abc_ic_arrow_drop_right_black_24dp</item>
!     </style>
!     <style name="Base.Widget.AppCompat.ListPopupWindow" parent="@android:style/Widget.Material.ListPopupWindow" />
!     <style name="Base.Widget.AppCompat.ListView" parent="@android:style/Widget.Material.ListView" />
!     <style name="Base.Widget.AppCompat.ListView.DropDown" parent="@android:style/Widget.Material.ListView.DropDown" />
!     <style name="Base.Widget.AppCompat.ListView.Menu" parent="@style/Base.Widget.AppCompat.ListView" />
!     <style name="Base.Widget.AppCompat.PopupMenu" parent="@android:style/Widget.Material.PopupMenu" />
!     <style name="Base.Widget.AppCompat.PopupMenu.Overflow" parent="@style/Base.Widget.AppCompat.PopupMenu">
!         <item name="android:dropDownHorizontalOffset">-4.0dip</item>
!         <item name="android:overlapAnchor">true</item>
!     </style>
!     <style name="Base.Widget.AppCompat.PopupWindow" parent="@android:style/Widget.PopupWindow" />
!     <style name="Base.Widget.AppCompat.ProgressBar" parent="@android:style/Widget.Material.ProgressBar" />
!     <style name="Base.Widget.AppCompat.ProgressBar.Horizontal" parent="@android:style/Widget.Material.ProgressBar.Horizontal" />
!     <style name="Base.Widget.AppCompat.RatingBar" parent="@android:style/Widget.Material.RatingBar" />
!     <style name="Base.Widget.AppCompat.RatingBar.Indicator" parent="@android:style/Widget.Material.RatingBar.Indicator" />
!     <style name="Base.Widget.AppCompat.RatingBar.Small" parent="@android:style/Widget.Material.RatingBar.Small" />
!     <style name="Base.Widget.AppCompat.SearchView" parent="@android:style/Widget">
!         <item name="closeIcon">@drawable/abc_ic_clear_material</item>
!         <item name="commitIcon">@drawable/abc_ic_commit_search_api_mtrl_alpha</item>
!         <item name="goIcon">@drawable/abc_ic_go_search_api_material</item>
!         <item name="layout">@layout/abc_search_view</item>
!         <item name="queryBackground">@drawable/abc_textfield_search_material</item>
!         <item name="searchHintIcon">@drawable/abc_ic_search_api_material</item>
!         <item name="searchIcon">@drawable/abc_ic_search_api_material</item>
!         <item name="submitBackground">@drawable/abc_textfield_search_material</item>
!         <item name="suggestionRowLayout">@layout/abc_search_dropdown_item_icons_2line</item>
!         <item name="voiceIcon">@drawable/abc_ic_voice_search_api_material</item>
!     </style>
!     <style name="Base.Widget.AppCompat.SearchView.ActionBar" parent="@style/Base.Widget.AppCompat.SearchView">
!         <item name="defaultQueryHint">@string/abc_search_hint</item>
!         <item name="queryBackground">@null</item>
!         <item name="searchHintIcon">@null</item>
!         <item name="submitBackground">@null</item>
!     </style>
!     <style name="Base.Widget.AppCompat.SeekBar" parent="@android:style/Widget.Material.SeekBar" />
!     <style name="Base.Widget.AppCompat.SeekBar.Discrete" parent="@style/Base.Widget.AppCompat.SeekBar">
!         <item name="tickMark">@drawable/abc_seekbar_tick_mark_material</item>
!     </style>
!     <style name="Base.Widget.AppCompat.Spinner" parent="@android:style/Widget.Material.Spinner" />
!     <style name="Base.Widget.AppCompat.Spinner.Underlined" parent="@android:style/Widget.Material.Spinner.Underlined" />
!     <style name="Base.Widget.AppCompat.TextView" parent="@android:style/Widget.Material.TextView">
!         <item name="android:breakStrategy">high_quality</item>
!         <item name="android:hyphenationFrequency">none</item>
!     </style>
!     <style name="Base.Widget.AppCompat.TextView.SpinnerItem" parent="@android:style/Widget.Material.TextView.SpinnerItem" />
!     <style name="Base.Widget.AppCompat.Toolbar" parent="@style/Base.V26.Widget.AppCompat.Toolbar" />
!     <style name="Base.Widget.AppCompat.Toolbar.Button.Navigation" parent="@android:style/Widget.Material.Toolbar.Button.Navigation" />
!     <style name="Platform.AppCompat" parent="@style/Platform.V25.AppCompat" />
!     <style name="Platform.AppCompat.Light" parent="@style/Platform.V25.AppCompat.Light" />
!     <style name="Platform.ThemeOverlay.AppCompat" parent="">
!         <item name="android:colorControlNormal">?colorControlNormal</item>
!         <item name="android:colorControlActivated">?colorControlActivated</item>
!         <item name="android:colorButtonNormal">?colorButtonNormal</item>
!         <item name="android:colorControlHighlight">?colorControlHighlight</item>
!         <item name="android:colorPrimary">?colorPrimary</item>
!         <item name="android:colorPrimaryDark">?colorPrimaryDark</item>
!         <item name="android:colorAccent">?colorAccent</item>
!     </style>
!     <style name="Platform.ThemeOverlay.AppCompat.Dark" parent="@style/Platform.ThemeOverlay.AppCompat" />
!     <style name="Platform.ThemeOverlay.AppCompat.Light" parent="@style/Platform.ThemeOverlay.AppCompat" />
!     <style name="Platform.V21.AppCompat" parent="@android:style/Theme.Material.NoActionBar">
!         <item name="android:textColorHintInverse">@color/abc_hint_foreground_material_light</item>
!         <item name="android:textColorHint">@color/abc_hint_foreground_material_dark</item>
!         <item name="android:textColorLink">?android:colorAccent</item>
!         <item name="android:buttonBarStyle">?buttonBarStyle</item>
!         <item name="android:buttonBarButtonStyle">?buttonBarButtonStyle</item>
!         <item name="android:textColorLinkInverse">?android:colorAccent</item>
!     </style>
!     <style name="Platform.V21.AppCompat.Light" parent="@android:style/Theme.Material.Light.NoActionBar">
!         <item name="android:textColorHintInverse">@color/abc_hint_foreground_material_dark</item>
!         <item name="android:textColorHint">@color/abc_hint_foreground_material_light</item>
!         <item name="android:textColorLink">?android:colorAccent</item>
!         <item name="android:buttonBarStyle">?buttonBarStyle</item>
!         <item name="android:buttonBarButtonStyle">?buttonBarButtonStyle</item>
!         <item name="android:textColorLinkInverse">?android:colorAccent</item>
!     </style>
!     <style name="Platform.V25.AppCompat" parent="@android:style/Theme.Material.NoActionBar" />
!     <style name="Platform.V25.AppCompat.Light" parent="@android:style/Theme.Material.Light.NoActionBar" />
!     <style name="Platform.Widget.AppCompat.Spinner" parent="@android:style/Widget.Holo.Spinner" />
!     <style name="RtlOverlay.DialogWindowTitle.AppCompat" parent="@style/Base.DialogWindowTitle.AppCompat">
!         <item name="android:textAlignment">viewStart</item>
!     </style>
!     <style name="RtlOverlay.Widget.AppCompat.ActionBar.TitleItem" parent="@android:style/Widget">
!         <item name="android:layout_gravity">start|center</item>
!         <item name="android:paddingEnd">8.0dip</item>
!     </style>
!     <style name="RtlOverlay.Widget.AppCompat.DialogTitle.Icon" parent="@android:style/Widget">
!         <item name="android:layout_marginEnd">8.0dip</item>
!     </style>
!     <style name="RtlOverlay.Widget.AppCompat.PopupMenuItem" parent="@android:style/Widget">
!         <item name="android:paddingEnd">16.0dip</item>
!     </style>
!     <style name="RtlOverlay.Widget.AppCompat.PopupMenuItem.InternalGroup" parent="@android:style/Widget">
!         <item name="android:layout_marginStart">16.0dip</item>
!     </style>
!     <style name="RtlOverlay.Widget.AppCompat.PopupMenuItem.Shortcut" parent="@android:style/Widget">
!         <item name="android:textAlignment">viewEnd</item>
!         <item name="android:layout_marginStart">16.0dip</item>
!     </style>
!     <style name="RtlOverlay.Widget.AppCompat.PopupMenuItem.SubmenuArrow" parent="@android:style/Widget">
!         <item name="android:layout_marginStart">8.0dip</item>
!     </style>
!     <style name="RtlOverlay.Widget.AppCompat.PopupMenuItem.Text" parent="@android:style/Widget">
!         <item name="android:textAlignment">viewStart</item>
!         <item name="android:layout_alignParentStart">true</item>
!     </style>
!     <style name="RtlOverlay.Widget.AppCompat.PopupMenuItem.Title" parent="@android:style/Widget">
!         <item name="android:textAlignment">viewStart</item>
!         <item name="android:layout_marginStart">16.0dip</item>
!     </style>
!     <style name="RtlOverlay.Widget.AppCompat.Search.DropDown" parent="@android:style/Widget">
!         <item name="android:paddingStart">@dimen/abc_dropdownitem_text_padding_left</item>
!         <item name="android:paddingEnd">4.0dip</item>
!     </style>
!     <style name="RtlOverlay.Widget.AppCompat.Search.DropDown.Icon1" parent="@android:style/Widget">
!         <item name="android:layout_alignParentStart">true</item>
!     </style>
!     <style name="RtlOverlay.Widget.AppCompat.Search.DropDown.Icon2" parent="@android:style/Widget">
!         <item name="android:layout_toStartOf">@id/edit_query</item>
!     </style>
!     <style name="RtlOverlay.Widget.AppCompat.Search.DropDown.Query" parent="@android:style/Widget">
!         <item name="android:layout_alignParentEnd">true</item>
!     </style>
!     <style name="RtlOverlay.Widget.AppCompat.Search.DropDown.Text" parent="@style/Base.Widget.AppCompat.DropDownItem.Spinner">
!         <item name="android:layout_toStartOf">@android:id/icon2</item>
!         <item name="android:layout_toEndOf">@android:id/icon1</item>
!     </style>
!     <style name="RtlOverlay.Widget.AppCompat.SearchView.MagIcon" parent="@android:style/Widget">
!         <item name="android:layout_marginStart">@dimen/abc_dropdownitem_text_padding_left</item>
!     </style>
!     <style name="RtlUnderlay.Widget.AppCompat.ActionButton" parent="@android:style/Widget">
!         <item name="android:paddingStart">12.0dip</item>
!         <item name="android:paddingEnd">12.0dip</item>
!     </style>
!     <style name="RtlUnderlay.Widget.AppCompat.ActionButton.Overflow" parent="@style/Base.Widget.AppCompat.ActionButton">
!         <item name="android:paddingStart">@dimen/abc_action_bar_overflow_padding_start_material</item>
!         <item name="android:paddingEnd">@dimen/abc_action_bar_overflow_padding_end_material</item>
!     </style>
!     <style name="TextAppearance.AppCompat" parent="@style/Base.TextAppearance.AppCompat" />
!     <style name="TextAppearance.AppCompat.Body1" parent="@style/Base.TextAppearance.AppCompat.Body1" />
!     <style name="TextAppearance.AppCompat.Body2" parent="@style/Base.TextAppearance.AppCompat.Body2" />
!     <style name="TextAppearance.AppCompat.Button" parent="@style/Base.TextAppearance.AppCompat.Button" />
!     <style name="TextAppearance.AppCompat.Caption" parent="@style/Base.TextAppearance.AppCompat.Caption" />
!     <style name="TextAppearance.AppCompat.Display1" parent="@style/Base.TextAppearance.AppCompat.Display1" />
!     <style name="TextAppearance.AppCompat.Display2" parent="@style/Base.TextAppearance.AppCompat.Display2" />
!     <style name="TextAppearance.AppCompat.Display3" parent="@style/Base.TextAppearance.AppCompat.Display3" />
!     <style name="TextAppearance.AppCompat.Display4" parent="@style/Base.TextAppearance.AppCompat.Display4" />
!     <style name="TextAppearance.AppCompat.Headline" parent="@style/Base.TextAppearance.AppCompat.Headline" />
!     <style name="TextAppearance.AppCompat.Inverse" parent="@style/Base.TextAppearance.AppCompat.Inverse" />
!     <style name="TextAppearance.AppCompat.Large" parent="@style/Base.TextAppearance.AppCompat.Large" />
!     <style name="TextAppearance.AppCompat.Large.Inverse" parent="@style/Base.TextAppearance.AppCompat.Large.Inverse" />
!     <style name="TextAppearance.AppCompat.Light.SearchResult.Subtitle" parent="@style/TextAppearance.AppCompat.SearchResult.Subtitle" />
!     <style name="TextAppearance.AppCompat.Light.SearchResult.Title" parent="@style/TextAppearance.AppCompat.SearchResult.Title" />
!     <style name="TextAppearance.AppCompat.Light.Widget.PopupMenu.Large" parent="@style/TextAppearance.AppCompat.Widget.PopupMenu.Large" />
!     <style name="TextAppearance.AppCompat.Light.Widget.PopupMenu.Small" parent="@style/TextAppearance.AppCompat.Widget.PopupMenu.Small" />
!     <style name="TextAppearance.AppCompat.Medium" parent="@style/Base.TextAppearance.AppCompat.Medium" />
!     <style name="TextAppearance.AppCompat.Medium.Inverse" parent="@style/Base.TextAppearance.AppCompat.Medium.Inverse" />
!     <style name="TextAppearance.AppCompat.Menu" parent="@style/Base.TextAppearance.AppCompat.Menu" />
!     <style name="TextAppearance.AppCompat.SearchResult.Subtitle" parent="@style/Base.TextAppearance.AppCompat.SearchResult.Subtitle" />
!     <style name="TextAppearance.AppCompat.SearchResult.Title" parent="@style/Base.TextAppearance.AppCompat.SearchResult.Title" />
!     <style name="TextAppearance.AppCompat.Small" parent="@style/Base.TextAppearance.AppCompat.Small" />
!     <style name="TextAppearance.AppCompat.Small.Inverse" parent="@style/Base.TextAppearance.AppCompat.Small.Inverse" />
!     <style name="TextAppearance.AppCompat.Subhead" parent="@style/Base.TextAppearance.AppCompat.Subhead" />
!     <style name="TextAppearance.AppCompat.Subhead.Inverse" parent="@style/Base.TextAppearance.AppCompat.Subhead.Inverse" />
!     <style name="TextAppearance.AppCompat.Title" parent="@style/Base.TextAppearance.AppCompat.Title" />
!     <style name="TextAppearance.AppCompat.Title.Inverse" parent="@style/Base.TextAppearance.AppCompat.Title.Inverse" />
!     <style name="TextAppearance.AppCompat.Tooltip" parent="@style/TextAppearance.AppCompat">
!         <item name="android:textSize">14.0sp</item>
!         <item name="android:fontFamily">sans-serif</item>
!     </style>
!     <style name="TextAppearance.AppCompat.Widget.ActionBar.Menu" parent="@style/Base.TextAppearance.AppCompat.Widget.ActionBar.Menu" />
!     <style name="TextAppearance.AppCompat.Widget.ActionBar.Subtitle" parent="@style/Base.TextAppearance.AppCompat.Widget.ActionBar.Subtitle" />
!     <style name="TextAppearance.AppCompat.Widget.ActionBar.Subtitle.Inverse" parent="@style/Base.TextAppearance.AppCompat.Widget.ActionBar.Subtitle.Inverse" />
!     <style name="TextAppearance.AppCompat.Widget.ActionBar.Title" parent="@style/Base.TextAppearance.AppCompat.Widget.ActionBar.Title" />
!     <style name="TextAppearance.AppCompat.Widget.ActionBar.Title.Inverse" parent="@style/Base.TextAppearance.AppCompat.Widget.ActionBar.Title.Inverse" />
!     <style name="TextAppearance.AppCompat.Widget.ActionMode.Subtitle" parent="@style/Base.TextAppearance.AppCompat.Widget.ActionMode.Subtitle" />
!     <style name="TextAppearance.AppCompat.Widget.ActionMode.Subtitle.Inverse" parent="@style/TextAppearance.AppCompat.Widget.ActionMode.Subtitle" />
!     <style name="TextAppearance.AppCompat.Widget.ActionMode.Title" parent="@style/Base.TextAppearance.AppCompat.Widget.ActionMode.Title" />
!     <style name="TextAppearance.AppCompat.Widget.ActionMode.Title.Inverse" parent="@style/TextAppearance.AppCompat.Widget.ActionMode.Title" />
!     <style name="TextAppearance.AppCompat.Widget.Button" parent="@style/Base.TextAppearance.AppCompat.Widget.Button" />
!     <style name="TextAppearance.AppCompat.Widget.Button.Borderless.Colored" parent="@style/Base.TextAppearance.AppCompat.Widget.Button.Borderless.Colored" />
!     <style name="TextAppearance.AppCompat.Widget.Button.Colored" parent="@style/Base.TextAppearance.AppCompat.Widget.Button.Colored" />
!     <style name="TextAppearance.AppCompat.Widget.Button.Inverse" parent="@style/Base.TextAppearance.AppCompat.Widget.Button.Inverse" />
!     <style name="TextAppearance.AppCompat.Widget.DropDownItem" parent="@style/Base.TextAppearance.AppCompat.Widget.DropDownItem" />
!     <style name="TextAppearance.AppCompat.Widget.PopupMenu.Header" parent="@style/Base.TextAppearance.AppCompat.Widget.PopupMenu.Header" />
!     <style name="TextAppearance.AppCompat.Widget.PopupMenu.Large" parent="@style/Base.TextAppearance.AppCompat.Widget.PopupMenu.Large" />
!     <style name="TextAppearance.AppCompat.Widget.PopupMenu.Small" parent="@style/Base.TextAppearance.AppCompat.Widget.PopupMenu.Small" />
!     <style name="TextAppearance.AppCompat.Widget.Switch" parent="@style/Base.TextAppearance.AppCompat.Widget.Switch" />
!     <style name="TextAppearance.AppCompat.Widget.TextView.SpinnerItem" parent="@style/Base.TextAppearance.AppCompat.Widget.TextView.SpinnerItem" />
!     <style name="TextAppearance.Compat.Notification" parent="@android:style/TextAppearance.Material.Notification" />
!     <style name="TextAppearance.Compat.Notification.Info" parent="@android:style/TextAppearance.Material.Notification.Info" />
!     <style name="TextAppearance.Compat.Notification.Info.Media" parent="@style/TextAppearance.Compat.Notification.Info" />
!     <style name="TextAppearance.Compat.Notification.Line2" parent="@style/TextAppearance.Compat.Notification.Info" />
!     <style name="TextAppearance.Compat.Notification.Line2.Media" parent="@style/TextAppearance.Compat.Notification.Info.Media" />
!     <style name="TextAppearance.Compat.Notification.Media" parent="@style/TextAppearance.Compat.Notification" />
!     <style name="TextAppearance.Compat.Notification.Time" parent="@android:style/TextAppearance.Material.Notification.Time" />
!     <style name="TextAppearance.Compat.Notification.Time.Media" parent="@style/TextAppearance.Compat.Notification.Time" />
!     <style name="TextAppearance.Compat.Notification.Title" parent="@android:style/TextAppearance.Material.Notification.Title" />
!     <style name="TextAppearance.Compat.Notification.Title.Media" parent="@style/TextAppearance.Compat.Notification.Title" />
!     <style name="TextAppearance.Widget.AppCompat.ExpandedMenu.Item" parent="@style/Base.TextAppearance.Widget.AppCompat.ExpandedMenu.Item" />
!     <style name="TextAppearance.Widget.AppCompat.Toolbar.Subtitle" parent="@style/Base.TextAppearance.Widget.AppCompat.Toolbar.Subtitle" />
!     <style name="TextAppearance.Widget.AppCompat.Toolbar.Title" parent="@style/Base.TextAppearance.Widget.AppCompat.Toolbar.Title" />
!     <style name="Theme.AppCompat" parent="@style/Base.Theme.AppCompat" />
!     <style name="Theme.AppCompat.CompactMenu" parent="@style/Base.Theme.AppCompat.CompactMenu" />
!     <style name="Theme.AppCompat.DayNight" parent="@style/Theme.AppCompat.Light" />
!     <style name="Theme.AppCompat.DayNight.DarkActionBar" parent="@style/Theme.AppCompat.Light.DarkActionBar" />
!     <style name="Theme.AppCompat.DayNight.Dialog" parent="@style/Theme.AppCompat.Light.Dialog" />
!     <style name="Theme.AppCompat.DayNight.Dialog.Alert" parent="@style/Theme.AppCompat.Light.Dialog.Alert" />
!     <style name="Theme.AppCompat.DayNight.Dialog.MinWidth" parent="@style/Theme.AppCompat.Light.Dialog.MinWidth" />
!     <style name="Theme.AppCompat.DayNight.DialogWhenLarge" parent="@style/Theme.AppCompat.Light.DialogWhenLarge" />
!     <style name="Theme.AppCompat.DayNight.NoActionBar" parent="@style/Theme.AppCompat.Light.NoActionBar" />
!     <style name="Theme.AppCompat.Dialog" parent="@style/Base.Theme.AppCompat.Dialog" />
!     <style name="Theme.AppCompat.Dialog.Alert" parent="@style/Base.Theme.AppCompat.Dialog.Alert" />
!     <style name="Theme.AppCompat.Dialog.MinWidth" parent="@style/Base.Theme.AppCompat.Dialog.MinWidth" />
!     <style name="Theme.AppCompat.DialogWhenLarge" parent="@style/Base.Theme.AppCompat.DialogWhenLarge" />
!     <style name="Theme.AppCompat.Light" parent="@style/Base.Theme.AppCompat.Light" />
!     <style name="Theme.AppCompat.Light.DarkActionBar" parent="@style/Base.Theme.AppCompat.Light.DarkActionBar" />
!     <style name="Theme.AppCompat.Light.Dialog" parent="@style/Base.Theme.AppCompat.Light.Dialog" />
!     <style name="Theme.AppCompat.Light.Dialog.Alert" parent="@style/Base.Theme.AppCompat.Light.Dialog.Alert" />
!     <style name="Theme.AppCompat.Light.Dialog.MinWidth" parent="@style/Base.Theme.AppCompat.Light.Dialog.MinWidth" />
!     <style name="Theme.AppCompat.Light.DialogWhenLarge" parent="@style/Base.Theme.AppCompat.Light.DialogWhenLarge" />
!     <style name="Theme.AppCompat.Light.NoActionBar" parent="@style/Theme.AppCompat.Light">
!         <item name="windowActionBar">false</item>
!         <item name="windowNoTitle">true</item>
!     </style>
!     <style name="Theme.AppCompat.NoActionBar" parent="@style/Theme.AppCompat">
!         <item name="windowActionBar">false</item>
!         <item name="windowNoTitle">true</item>
!     </style>
!     <style name="Theme.AppCompat.Translucent" parent="@style/Theme.AppCompat.NoActionBar">
!         <item name="android:windowBackground">@android:color/transparent</item>
!         <item name="android:windowNoTitle">true</item>
!         <item name="android:windowIsTranslucent">true</item>
!         <item name="android:windowAnimationStyle">@android:style/Animation</item>
!         <item name="android:background">#00000000</item>
!         <item name="android:colorBackgroundCacheHint">@null</item>
!     </style>
!     <style name="ThemeOverlay.AppCompat" parent="@style/Base.ThemeOverlay.AppCompat" />
!     <style name="ThemeOverlay.AppCompat.ActionBar" parent="@style/Base.ThemeOverlay.AppCompat.ActionBar" />
!     <style name="ThemeOverlay.AppCompat.Dark" parent="@style/Base.ThemeOverlay.AppCompat.Dark" />
!     <style name="ThemeOverlay.AppCompat.Dark.ActionBar" parent="@style/Base.ThemeOverlay.AppCompat.Dark.ActionBar" />
!     <style name="ThemeOverlay.AppCompat.DayNight" parent="@style/ThemeOverlay.AppCompat.Light" />
!     <style name="ThemeOverlay.AppCompat.DayNight.ActionBar" parent="@style/ThemeOverlay.AppCompat.DayNight">
!         <item name="colorControlNormal">?android:textColorPrimary</item>
!         <item name="searchViewStyle">@style/Widget.AppCompat.SearchView.ActionBar</item>
!     </style>
!     <style name="ThemeOverlay.AppCompat.Dialog" parent="@style/Base.ThemeOverlay.AppCompat.Dialog" />
!     <style name="ThemeOverlay.AppCompat.Dialog.Alert" parent="@style/Base.ThemeOverlay.AppCompat.Dialog.Alert" />
!     <style name="ThemeOverlay.AppCompat.Light" parent="@style/Base.ThemeOverlay.AppCompat.Light" />
!     <style name="Widget.AppCompat.ActionBar" parent="@style/Base.Widget.AppCompat.ActionBar" />
!     <style name="Widget.AppCompat.ActionBar.Solid" parent="@style/Base.Widget.AppCompat.ActionBar.Solid" />
!     <style name="Widget.AppCompat.ActionBar.TabBar" parent="@style/Base.Widget.AppCompat.ActionBar.TabBar" />
!     <style name="Widget.AppCompat.ActionBar.TabText" parent="@style/Base.Widget.AppCompat.ActionBar.TabText" />
!     <style name="Widget.AppCompat.ActionBar.TabView" parent="@style/Base.Widget.AppCompat.ActionBar.TabView" />
!     <style name="Widget.AppCompat.ActionButton" parent="@style/Base.Widget.AppCompat.ActionButton" />
!     <style name="Widget.AppCompat.ActionButton.CloseMode" parent="@style/Base.Widget.AppCompat.ActionButton.CloseMode" />
!     <style name="Widget.AppCompat.ActionButton.Overflow" parent="@style/Base.Widget.AppCompat.ActionButton.Overflow" />
!     <style name="Widget.AppCompat.ActionMode" parent="@style/Base.Widget.AppCompat.ActionMode" />
!     <style name="Widget.AppCompat.ActivityChooserView" parent="@style/Base.Widget.AppCompat.ActivityChooserView" />
!     <style name="Widget.AppCompat.AutoCompleteTextView" parent="@style/Base.Widget.AppCompat.AutoCompleteTextView" />
!     <style name="Widget.AppCompat.Button" parent="@style/Base.Widget.AppCompat.Button" />
!     <style name="Widget.AppCompat.Button.Borderless" parent="@style/Base.Widget.AppCompat.Button.Borderless" />
!     <style name="Widget.AppCompat.Button.Borderless.Colored" parent="@style/Base.Widget.AppCompat.Button.Borderless.Colored" />
!     <style name="Widget.AppCompat.Button.ButtonBar.AlertDialog" parent="@style/Base.Widget.AppCompat.Button.ButtonBar.AlertDialog" />
!     <style name="Widget.AppCompat.Button.Colored" parent="@style/Base.Widget.AppCompat.Button.Colored" />
!     <style name="Widget.AppCompat.Button.Small" parent="@style/Base.Widget.AppCompat.Button.Small" />
!     <style name="Widget.AppCompat.ButtonBar" parent="@style/Base.Widget.AppCompat.ButtonBar" />
!     <style name="Widget.AppCompat.ButtonBar.AlertDialog" parent="@style/Base.Widget.AppCompat.ButtonBar.AlertDialog" />
!     <style name="Widget.AppCompat.CompoundButton.CheckBox" parent="@style/Base.Widget.AppCompat.CompoundButton.CheckBox" />
!     <style name="Widget.AppCompat.CompoundButton.RadioButton" parent="@style/Base.Widget.AppCompat.CompoundButton.RadioButton" />
!     <style name="Widget.AppCompat.CompoundButton.Switch" parent="@style/Base.Widget.AppCompat.CompoundButton.Switch" />
!     <style name="Widget.AppCompat.DrawerArrowToggle" parent="@style/Base.Widget.AppCompat.DrawerArrowToggle">
!         <item name="color">?colorControlNormal</item>
!     </style>
!     <style name="Widget.AppCompat.DropDownItem.Spinner" parent="@style/RtlOverlay.Widget.AppCompat.Search.DropDown.Text" />
!     <style name="Widget.AppCompat.EditText" parent="@style/Base.Widget.AppCompat.EditText" />
!     <style name="Widget.AppCompat.ImageButton" parent="@style/Base.Widget.AppCompat.ImageButton" />
!     <style name="Widget.AppCompat.Light.ActionBar" parent="@style/Base.Widget.AppCompat.Light.ActionBar" />
!     <style name="Widget.AppCompat.Light.ActionBar.Solid" parent="@style/Base.Widget.AppCompat.Light.ActionBar.Solid" />
!     <style name="Widget.AppCompat.Light.ActionBar.Solid.Inverse" parent="@style/Widget.AppCompat.Light.ActionBar.Solid" />
!     <style name="Widget.AppCompat.Light.ActionBar.TabBar" parent="@style/Base.Widget.AppCompat.Light.ActionBar.TabBar" />
!     <style name="Widget.AppCompat.Light.ActionBar.TabBar.Inverse" parent="@style/Widget.AppCompat.Light.ActionBar.TabBar" />
!     <style name="Widget.AppCompat.Light.ActionBar.TabText" parent="@style/Base.Widget.AppCompat.Light.ActionBar.TabText" />
!     <style name="Widget.AppCompat.Light.ActionBar.TabText.Inverse" parent="@style/Base.Widget.AppCompat.Light.ActionBar.TabText.Inverse" />
!     <style name="Widget.AppCompat.Light.ActionBar.TabView" parent="@style/Base.Widget.AppCompat.Light.ActionBar.TabView" />
!     <style name="Widget.AppCompat.Light.ActionBar.TabView.Inverse" parent="@style/Widget.AppCompat.Light.ActionBar.TabView" />
!     <style name="Widget.AppCompat.Light.ActionButton" parent="@style/Widget.AppCompat.ActionButton" />
!     <style name="Widget.AppCompat.Light.ActionButton.CloseMode" parent="@style/Widget.AppCompat.ActionButton.CloseMode" />
!     <style name="Widget.AppCompat.Light.ActionButton.Overflow" parent="@style/Widget.AppCompat.ActionButton.Overflow" />
!     <style name="Widget.AppCompat.Light.ActionMode.Inverse" parent="@style/Widget.AppCompat.ActionMode" />
!     <style name="Widget.AppCompat.Light.ActivityChooserView" parent="@style/Widget.AppCompat.ActivityChooserView" />
!     <style name="Widget.AppCompat.Light.AutoCompleteTextView" parent="@style/Widget.AppCompat.AutoCompleteTextView" />
!     <style name="Widget.AppCompat.Light.DropDownItem.Spinner" parent="@style/Widget.AppCompat.DropDownItem.Spinner" />
!     <style name="Widget.AppCompat.Light.ListPopupWindow" parent="@style/Widget.AppCompat.ListPopupWindow" />
!     <style name="Widget.AppCompat.Light.ListView.DropDown" parent="@style/Widget.AppCompat.ListView.DropDown" />
!     <style name="Widget.AppCompat.Light.PopupMenu" parent="@style/Base.Widget.AppCompat.Light.PopupMenu" />
!     <style name="Widget.AppCompat.Light.PopupMenu.Overflow" parent="@style/Base.Widget.AppCompat.Light.PopupMenu.Overflow" />
!     <style name="Widget.AppCompat.Light.SearchView" parent="@style/Widget.AppCompat.SearchView" />
!     <style name="Widget.AppCompat.Light.Spinner.DropDown.ActionBar" parent="@style/Widget.AppCompat.Spinner.DropDown.ActionBar" />
!     <style name="Widget.AppCompat.ListMenuView" parent="@style/Base.Widget.AppCompat.ListMenuView" />
!     <style name="Widget.AppCompat.ListPopupWindow" parent="@style/Base.Widget.AppCompat.ListPopupWindow" />
!     <style name="Widget.AppCompat.ListView" parent="@style/Base.Widget.AppCompat.ListView" />
!     <style name="Widget.AppCompat.ListView.DropDown" parent="@style/Base.Widget.AppCompat.ListView.DropDown" />
!     <style name="Widget.AppCompat.ListView.Menu" parent="@style/Base.Widget.AppCompat.ListView.Menu" />
!     <style name="Widget.AppCompat.PopupMenu" parent="@style/Base.Widget.AppCompat.PopupMenu" />
!     <style name="Widget.AppCompat.PopupMenu.Overflow" parent="@style/Base.Widget.AppCompat.PopupMenu.Overflow" />
!     <style name="Widget.AppCompat.PopupWindow" parent="@style/Base.Widget.AppCompat.PopupWindow" />
!     <style name="Widget.AppCompat.ProgressBar" parent="@style/Base.Widget.AppCompat.ProgressBar" />
!     <style name="Widget.AppCompat.ProgressBar.Horizontal" parent="@style/Base.Widget.AppCompat.ProgressBar.Horizontal" />
!     <style name="Widget.AppCompat.RatingBar" parent="@style/Base.Widget.AppCompat.RatingBar" />
!     <style name="Widget.AppCompat.RatingBar.Indicator" parent="@style/Base.Widget.AppCompat.RatingBar.Indicator" />
!     <style name="Widget.AppCompat.RatingBar.Small" parent="@style/Base.Widget.AppCompat.RatingBar.Small" />
!     <style name="Widget.AppCompat.SearchView" parent="@style/Base.Widget.AppCompat.SearchView" />
!     <style name="Widget.AppCompat.SearchView.ActionBar" parent="@style/Base.Widget.AppCompat.SearchView.ActionBar" />
!     <style name="Widget.AppCompat.SeekBar" parent="@style/Base.Widget.AppCompat.SeekBar" />
!     <style name="Widget.AppCompat.SeekBar.Discrete" parent="@style/Base.Widget.AppCompat.SeekBar.Discrete" />
!     <style name="Widget.AppCompat.Spinner" parent="@style/Base.Widget.AppCompat.Spinner" />
!     <style name="Widget.AppCompat.Spinner.DropDown" parent="@style/Widget.AppCompat.Spinner" />
!     <style name="Widget.AppCompat.Spinner.DropDown.ActionBar" parent="@style/Widget.AppCompat.Spinner.DropDown" />
!     <style name="Widget.AppCompat.Spinner.Underlined" parent="@style/Base.Widget.AppCompat.Spinner.Underlined" />
!     <style name="Widget.AppCompat.TextView" parent="@style/Base.Widget.AppCompat.TextView" />
!     <style name="Widget.AppCompat.TextView.SpinnerItem" parent="@style/Base.Widget.AppCompat.TextView.SpinnerItem" />
!     <style name="Widget.AppCompat.Toolbar" parent="@style/Base.Widget.AppCompat.Toolbar" />
!     <style name="Widget.AppCompat.Toolbar.Button.Navigation" parent="@style/Base.Widget.AppCompat.Toolbar.Button.Navigation" />
!     <style name="Widget.Compat.NotificationActionContainer" parent="">
!         <item name="android:background">@drawable/notification_action_background</item>
!     </style>
!     <style name="Widget.Compat.NotificationActionText" parent="">
!         <item name="android:textAppearance">?android:textAppearanceButton</item>
!         <item name="android:textSize">@dimen/notification_action_text_size</item>
!         <item name="android:textColor">@color/secondary_text_default_material_light</item>
!     </style>
!     <style name="Widget.Support.CoordinatorLayout" parent="@android:style/Widget">
!         <item name="statusBarBackground">#ff000000</item>
      </style>
--- 2,8 ----
  <resources>
!     <style name="AppTheme" parent="Theme.AppCompat.NoActionBar">
!         <item name="colorPrimary">@android:color/background_light</item>
!         <item name="colorPrimaryDark">@android:color/background_dark</item>
!         <item name="colorAccent">#FF6F00</item>
!         <item name="android:statusBarColor">@android:color/transparent</item>
      </style>
diff '--context=1' --strip-trailing-cr -r app/src/main/res/xml/orbit1_wallpaper.xml new/src/main/res/xml/orbit1_wallpaper.xml
*** app/src/main/res/xml/orbit1_wallpaper.xml	Wed May  1 12:59:53 2024
--- new/src/main/res/xml/orbit1_wallpaper.xml	Mon Apr 29 14:25:40 2024
***************
*** 1,3 ****
  <?xml version="1.0" encoding="utf-8"?>
! <wallpaper android:description="@string/orbit_description" android:thumbnail="@drawable/orbit1_thumb" android:author="@string/collection_label" android:showMetadataInPreview="true"
!   xmlns:android="http://schemas.android.com/apk/res/android" />
\ No newline at end of file
--- 1,7 ----
  <?xml version="1.0" encoding="utf-8"?>
! <wallpaper
!         android:description="@string/orbit_description"
!         android:thumbnail="@drawable/orbit1_thumb"
!         android:author="@string/collection_label"
!         android:settingsActivity="com.ustwo.lwp.preferences.PreferencesActivity"
!         xmlns:android="http://schemas.android.com/apk/res/android"/>
\ No newline at end of file
diff '--context=1' --strip-trailing-cr -r app/src/main/res/xml/orbit2_wallpaper.xml new/src/main/res/xml/orbit2_wallpaper.xml
*** app/src/main/res/xml/orbit2_wallpaper.xml	Wed May  1 12:59:53 2024
--- new/src/main/res/xml/orbit2_wallpaper.xml	Mon Apr 29 14:25:40 2024
***************
*** 1,3 ****
  <?xml version="1.0" encoding="utf-8"?>
! <wallpaper android:description="@string/orbit_description" android:thumbnail="@drawable/orbit2_thumb" android:author="@string/collection_label" android:showMetadataInPreview="true"
!   xmlns:android="http://schemas.android.com/apk/res/android" />
\ No newline at end of file
--- 1,7 ----
  <?xml version="1.0" encoding="utf-8"?>
! <wallpaper
!         android:description="@string/orbit_description"
!         android:thumbnail="@drawable/orbit2_thumb"
!         android:author="@string/collection_label"
!         android:settingsActivity="com.ustwo.lwp.preferences.PreferencesActivity"
!         xmlns:android="http://schemas.android.com/apk/res/android"/>
\ No newline at end of file
diff '--context=1' --strip-trailing-cr -r app/src/main/res/xml/orbit3_wallpaper.xml new/src/main/res/xml/orbit3_wallpaper.xml
*** app/src/main/res/xml/orbit3_wallpaper.xml	Wed May  1 12:59:53 2024
--- new/src/main/res/xml/orbit3_wallpaper.xml	Mon Apr 29 14:25:40 2024
***************
*** 1,3 ****
  <?xml version="1.0" encoding="utf-8"?>
! <wallpaper android:description="@string/orbit_description" android:thumbnail="@drawable/orbit3_thumb" android:author="@string/collection_label" android:showMetadataInPreview="true"
!   xmlns:android="http://schemas.android.com/apk/res/android" />
\ No newline at end of file
--- 1,7 ----
  <?xml version="1.0" encoding="utf-8"?>
! <wallpaper
!         android:description="@string/orbit_description"
!         android:thumbnail="@drawable/orbit3_thumb"
!         android:author="@string/collection_label"
!         android:settingsActivity="com.ustwo.lwp.preferences.PreferencesActivity"
!         xmlns:android="http://schemas.android.com/apk/res/android"/>
\ No newline at end of file
diff '--context=1' --strip-trailing-cr -r app/src/main/res/xml/shadow1_wallpaper.xml new/src/main/res/xml/shadow1_wallpaper.xml
*** app/src/main/res/xml/shadow1_wallpaper.xml	Wed May  1 12:59:53 2024
--- new/src/main/res/xml/shadow1_wallpaper.xml	Mon Apr 29 14:25:40 2024
***************
*** 1,3 ****
  <?xml version="1.0" encoding="utf-8"?>
! <wallpaper android:description="@string/shadow_description" android:thumbnail="@drawable/shadow1_thumb" android:author="@string/collection_label" android:showMetadataInPreview="true"
!   xmlns:android="http://schemas.android.com/apk/res/android" />
\ No newline at end of file
--- 1,7 ----
  <?xml version="1.0" encoding="utf-8"?>
! <wallpaper
!         android:description="@string/shadow_description"
!         android:thumbnail="@drawable/shadow1_thumb"
!         android:author="@string/collection_label"
!         android:settingsActivity="com.ustwo.lwp.preferences.PreferencesActivity"
!         xmlns:android="http://schemas.android.com/apk/res/android"/>
\ No newline at end of file
diff '--context=1' --strip-trailing-cr -r app/src/main/res/xml/shadow2_wallpaper.xml new/src/main/res/xml/shadow2_wallpaper.xml
*** app/src/main/res/xml/shadow2_wallpaper.xml	Wed May  1 12:59:53 2024
--- new/src/main/res/xml/shadow2_wallpaper.xml	Mon Apr 29 14:25:40 2024
***************
*** 1,3 ****
  <?xml version="1.0" encoding="utf-8"?>
! <wallpaper android:description="@string/shadow_description" android:thumbnail="@drawable/shadow2_thumb" android:author="@string/collection_label" android:showMetadataInPreview="true"
!   xmlns:android="http://schemas.android.com/apk/res/android" />
\ No newline at end of file
--- 1,7 ----
  <?xml version="1.0" encoding="utf-8"?>
! <wallpaper
!         android:description="@string/shadow_description"
!         android:thumbnail="@drawable/shadow2_thumb"
!         android:author="@string/collection_label"
!         android:settingsActivity="com.ustwo.lwp.preferences.PreferencesActivity"
!         xmlns:android="http://schemas.android.com/apk/res/android"/>
\ No newline at end of file
diff '--context=1' --strip-trailing-cr -r app/src/main/res/xml/shadow3_wallpaper.xml new/src/main/res/xml/shadow3_wallpaper.xml
*** app/src/main/res/xml/shadow3_wallpaper.xml	Wed May  1 12:59:54 2024
--- new/src/main/res/xml/shadow3_wallpaper.xml	Mon Apr 29 14:25:40 2024
***************
*** 1,3 ****
  <?xml version="1.0" encoding="utf-8"?>
! <wallpaper android:description="@string/shadow_description" android:thumbnail="@drawable/shadow3_thumb" android:author="@string/collection_label" android:showMetadataInPreview="true"
!   xmlns:android="http://schemas.android.com/apk/res/android" />
\ No newline at end of file
--- 1,7 ----
  <?xml version="1.0" encoding="utf-8"?>
! <wallpaper
!         android:description="@string/shadow_description"
!         android:thumbnail="@drawable/shadow3_thumb"
!         android:author="@string/collection_label"
!         android:settingsActivity="com.ustwo.lwp.preferences.PreferencesActivity"
!         xmlns:android="http://schemas.android.com/apk/res/android"/>
\ No newline at end of file
diff '--context=1' --strip-trailing-cr -r app/src/main/res/xml/shadow4_wallpaper.xml new/src/main/res/xml/shadow4_wallpaper.xml
*** app/src/main/res/xml/shadow4_wallpaper.xml	Wed May  1 12:59:53 2024
--- new/src/main/res/xml/shadow4_wallpaper.xml	Mon Apr 29 14:25:40 2024
***************
*** 1,3 ****
  <?xml version="1.0" encoding="utf-8"?>
! <wallpaper android:description="@string/shadow_description" android:thumbnail="@drawable/shadow4_thumb" android:author="@string/collection_label" android:showMetadataInPreview="true"
!   xmlns:android="http://schemas.android.com/apk/res/android" />
\ No newline at end of file
--- 1,7 ----
  <?xml version="1.0" encoding="utf-8"?>
! <wallpaper
!         android:description="@string/shadow_description"
!         android:thumbnail="@drawable/shadow4_thumb"
!         android:author="@string/collection_label"
!         android:settingsActivity="com.ustwo.lwp.preferences.PreferencesActivity"
!         xmlns:android="http://schemas.android.com/apk/res/android"/>
\ No newline at end of file
diff '--context=1' --strip-trailing-cr -r app/src/main/res/xml/shadow5_wallpaper.xml new/src/main/res/xml/shadow5_wallpaper.xml
*** app/src/main/res/xml/shadow5_wallpaper.xml	Wed May  1 12:59:53 2024
--- new/src/main/res/xml/shadow5_wallpaper.xml	Mon Apr 29 14:25:40 2024
***************
*** 1,3 ****
  <?xml version="1.0" encoding="utf-8"?>
! <wallpaper android:description="@string/shadow_description" android:thumbnail="@drawable/shadow5_thumb" android:author="@string/collection_label" android:showMetadataInPreview="true"
!   xmlns:android="http://schemas.android.com/apk/res/android" />
\ No newline at end of file
--- 1,7 ----
  <?xml version="1.0" encoding="utf-8"?>
! <wallpaper
!         android:description="@string/shadow_description"
!         android:thumbnail="@drawable/shadow5_thumb"
!         android:author="@string/collection_label"
!         android:settingsActivity="com.ustwo.lwp.preferences.PreferencesActivity"
!         xmlns:android="http://schemas.android.com/apk/res/android"/>
\ No newline at end of file
diff '--context=1' --strip-trailing-cr -r app/src/main/res/xml/shadow6_wallpaper.xml new/src/main/res/xml/shadow6_wallpaper.xml
*** app/src/main/res/xml/shadow6_wallpaper.xml	Wed May  1 12:59:53 2024
--- new/src/main/res/xml/shadow6_wallpaper.xml	Mon Apr 29 14:25:40 2024
***************
*** 1,3 ****
  <?xml version="1.0" encoding="utf-8"?>
! <wallpaper android:description="@string/shadow_description" android:thumbnail="@drawable/shadow6_thumb" android:author="@string/collection_label" android:showMetadataInPreview="true"
!   xmlns:android="http://schemas.android.com/apk/res/android" />
\ No newline at end of file
--- 1,7 ----
  <?xml version="1.0" encoding="utf-8"?>
! <wallpaper
!         android:description="@string/shadow_description"
!         android:thumbnail="@drawable/shadow6_thumb"
!         android:author="@string/collection_label"
!         android:settingsActivity="com.ustwo.lwp.preferences.PreferencesActivity"
!         xmlns:android="http://schemas.android.com/apk/res/android"/>
\ No newline at end of file
diff '--context=1' --strip-trailing-cr -r app/src/main/res/xml/timelapse_wallpaper.xml new/src/main/res/xml/timelapse_wallpaper.xml
*** app/src/main/res/xml/timelapse_wallpaper.xml	Wed May  1 12:59:53 2024
--- new/src/main/res/xml/timelapse_wallpaper.xml	Mon Apr 29 14:25:40 2024
***************
*** 1,3 ****
  <?xml version="1.0" encoding="utf-8"?>
! <wallpaper android:description="@string/timelapse_description" android:thumbnail="@drawable/timelapse_thumb" android:author="@string/collection_label" android:showMetadataInPreview="true"
!   xmlns:android="http://schemas.android.com/apk/res/android" />
\ No newline at end of file
--- 1,7 ----
  <?xml version="1.0" encoding="utf-8"?>
! <wallpaper
!         android:description="@string/timelapse_description"
!         android:thumbnail="@drawable/timelapse_thumb"
!         android:author="@string/collection_label"
!         android:settingsActivity="com.ustwo.lwp.preferences.PreferencesActivity"
!         xmlns:android="http://schemas.android.com/apk/res/android"/>
\ No newline at end of file
